name: build

on: [push,pull_request]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    timeout-minutes: 15
    strategy:
      fail-fast: true
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      # Get the cores 
      - name: Get number of cores (Ubuntu)
        if: startsWith(runner.os, 'Linux')
        run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
      - name: Get number of cores (macOS)
        if: startsWith(runner.os, 'macOS')
        run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
      # non self-host setup
      # - uses: cedx/setup-hashlink@v3
      # - uses: actions/setup-go@v3
      #   with:
      #     go-version: '1.21.3' # The Go version to download (if necessary) and use.
      # - name: Install lix
      #   run: npm i lix -g
      # - name: Run lix
      #   run: npx lix download
      # go2hx setup
      - name: Set source
        run: npx haxelib dev go2hx .
      - name: Test run
        run: npx haxelib run go2hx ./rnd
      # clean stdgo
      - name: Clean go2hx
        run: npx haxelib run go2hx clean
      # compile stdgo
      - name: Run stdgo automatic compile
        run: npx haxe stdgo.hxml -D runnerCount=${{ env.CORES }}
      - name: Run tests
        run: |
          npx haxe tests.hxml -D unit -D ci -D runnerCount=${{ env.CORES }}
          npx haxe tests.hxml -D std -D ci -D runnerCount=${{ env.CORES }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: stdgo automatic compile
  test-cpp:
    timeout-minutes: 360
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.21.3' # The Go version to download (if necessary) and use.
      # Get the cores 
      - name: Get number of cores (Ubuntu)
        if: startsWith(runner.os, 'Linux')
        run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
      - name: Get number of cores (macOS)
        if: startsWith(runner.os, 'macOS')
        run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
      - name: Install lix
        run: npm i lix -g
      - name: Run lix
        run: npx lix download
      # go2hx setup
      - name: Set source
        run: npx haxelib dev go2hx .
      - name: Test run
        run: npx haxelib run go2hx ./rnd
      # run hxcpp tests
      - name: Run unit hxcpp tests
        run: npx haxe tests.hxml -D unit -D ci -D target_hxcpp -D runnerCount=${{ env.CORES }}
      #- name: Run std hxcpp tests
      #  run: npx haxe tests.hxml -D std -D ci -D target_hxcpp -D runnerCount=${{ env.CORES }}
  generate-docs:
    timeout-minutes: 15
    needs: test-cpp
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.21.3' # The Go version to download (if necessary) and use.
      # Add any additional setup steps required for the documentation generation
      - name: Get go2hxdoc
        run: go get github.com/go2hx/go2hxdoc
      - name: Run go2hxdoc
        run: ./go2hxdoc -dir `npx haxelib libpath go2hx`stdgo -stats -force -seq
      - name: Commit docs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: stdgo doc generation
          file_pattern: '*.md *.MD'