name: os

on: [push,pull_request]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  setup:
    timeout-minutes: 15
    strategy:
      fail-fast: false
    runs-on: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      # Get the cores 
      - name: Get number of cores (Ubuntu)
        if: startsWith(runner.os, 'Linux')
        run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
      - name: Get number of cores (macOS)
        if: startsWith(runner.os, 'macOS')
        run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
      - name: Get number of cores (windows)
        if: startsWith(runner.os, 'Windows')
        run: echo "CORES=$env:NUMBER_OF_PROCESSORS" >> $GITHUB_ENV
      - uses: actions/setup-go@v3
        continue-on-error: true
        with:
          go-version: '1.21.3' # The Go version to download (if necessary) and use.
      - name: Install lix
        run: npm i lix -g
      - name: Run lix
        run: npx lix download
      # go2hx setup
      - name: Set source
        run: npx haxelib dev go2hx .
      # clean stdgo
      - name: Clean go2hx
        run: npx haxelib run go2hx clean
      - name: Build go2hx compiler
        run: npx haxe --run Run build
      - name: Create vendor
        run: go mod vendor
      # compile stdgo
      - name: Run stdgo automatic compile
        run: npx haxe scripts/stdgo.hxml -D runnerCount=${{ env.CORES }}
      - name: Run unicode
        run: npx haxe stdgo/unicode.hxml --interp