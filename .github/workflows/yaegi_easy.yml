name: yaegi easy

on: [push,pull_request]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    test-yaegi-easy:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    steps:
      - uses: cedx/setup-hashlink@v3
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.21.3' # The Go version to download (if necessary) and use.
      # Get the cores 
      - name: Get number of cores (Ubuntu)
        if: startsWith(runner.os, 'Linux')
        run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
      - name: Get number of cores (macOS)
        if: startsWith(runner.os, 'macOS')
        run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
      - name: Install lix
        run: npm i lix -g
      - name: Run lix
        run: npx lix download
      # go2hx setup
      - name: Set source
        run: npx haxelib dev go2hx .
      - name: Test run
        run: npx haxelib run go2hx ./rnd
      # run yaegi easy tests
      - name: Run yaegi easy tests
        run: npx haxe tests.hxml -D yaegi -D ci -D mode=easy -D runnerCount=${{ env.CORES }}
      # git pull latest
      - name: Pull latest
        run: git pull
      # add yaegi_easy.json regression 
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
            commit_message: yaegi easy tests update