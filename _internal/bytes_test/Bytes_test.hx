package _internal.bytes_test;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
@:keep var __init_go2hx__ = {
        try {
            var __tmp__0 = _internal.bytes_test.Bytes_test__readBytesTests._readBytesTests, __tmp__1 = _internal.bytes_test.Bytes_test__abcd._abcd, __tmp__2 = _internal.bytes_test.Bytes_test__faces._faces, __tmp__3 = _internal.bytes_test.Bytes_test__commas._commas, __tmp__4 = _internal.bytes_test.Bytes_test__dots._dots, __tmp__5 = _internal.bytes_test.Bytes_test__indexTests._indexTests, __tmp__6 = _internal.bytes_test.Bytes_test__lastIndexTests._lastIndexTests, __tmp__7 = _internal.bytes_test.Bytes_test__indexAnyTests._indexAnyTests, __tmp__8 = _internal.bytes_test.Bytes_test__lastIndexAnyTests._lastIndexAnyTests, __tmp__9 = _internal.bytes_test.Bytes_test__indexSizes._indexSizes, __tmp__10 = _internal.bytes_test.Bytes_test__isRaceBuilder._isRaceBuilder, __tmp__11 = _internal.bytes_test.Bytes_test__splittests._splittests, __tmp__12 = _internal.bytes_test.Bytes_test__splitaftertests._splitaftertests, __tmp__13 = _internal.bytes_test.Bytes_test__fieldstests._fieldstests, __tmp__14 = _internal.bytes_test.Bytes_test__upperTests._upperTests, __tmp__15 = _internal.bytes_test.Bytes_test__lowerTests._lowerTests, __tmp__16 = _internal.bytes_test.Bytes_test__trimSpaceTests._trimSpaceTests, __tmp__17 = _internal.bytes_test.Bytes_test__toValidUTF8Tests._toValidUTF8Tests, __tmp__18 = _internal.bytes_test.Bytes_test__longString._longString, __tmp__19 = _internal.bytes_test.Bytes_test_repeatTests.repeatTests, __tmp__20 = _internal.bytes_test.Bytes_test_runesTests.runesTests, __tmp__21 = _internal.bytes_test.Bytes_test__trimTests._trimTests, __tmp__22 = _internal.bytes_test.Bytes_test__trimNilTests._trimNilTests, __tmp__23 = _internal.bytes_test.Bytes_test__isSpace._isSpace, __tmp__24 = _internal.bytes_test.Bytes_test__isDigit._isDigit, __tmp__25 = _internal.bytes_test.Bytes_test__isUpper._isUpper, __tmp__26 = _internal.bytes_test.Bytes_test__isValidRune._isValidRune, __tmp__27 = _internal.bytes_test.Bytes_test__trimFuncTests._trimFuncTests, __tmp__28 = _internal.bytes_test.Bytes_test__indexFuncTests._indexFuncTests, __tmp__29 = _internal.bytes_test.Bytes_test_replaceTests.replaceTests, __tmp__30 = _internal.bytes_test.Bytes_test_titleTests.titleTests, __tmp__31 = _internal.bytes_test.Bytes_test_toTitleTests.toTitleTests, __tmp__32 = _internal.bytes_test.Bytes_test_equalFoldTests.equalFoldTests, __tmp__33 = _internal.bytes_test.Bytes_test__cutTests._cutTests, __tmp__34 = _internal.bytes_test.Bytes_test__cutPrefixTests._cutPrefixTests, __tmp__35 = _internal.bytes_test.Bytes_test__cutSuffixTests._cutSuffixTests, __tmp__36 = _internal.bytes_test.Bytes_test__containsTests._containsTests, __tmp__37 = _internal.bytes_test.Bytes_test_containsAnyTests.containsAnyTests, __tmp__38 = _internal.bytes_test.Bytes_test_containsRuneTests.containsRuneTests, __tmp__39 = _internal.bytes_test.Bytes_test__makeFieldsInput._makeFieldsInput, __tmp__40 = _internal.bytes_test.Bytes_test__makeFieldsInputASCII._makeFieldsInputASCII, __tmp__41 = _internal.bytes_test.Bytes_test__bytesdata._bytesdata, __tmp__42 = _internal.bytes_test.Bytes_test__benchInputHard._benchInputHard, __tmp__43 = _internal.bytes_test.Bytes_test__compareTests._compareTests, __tmp__44 = _internal.bytes_test.Bytes_test_unreadRuneErrorTests.unreadRuneErrorTests;
            _internal.bytes_test.Bytes_test__testBytes._testBytes = (new stdgo.Slice<stdgo.GoUInt8>((10000 : stdgo.GoInt).toBasic(), 0).__setNumber32__() : stdgo.Slice<stdgo.GoUInt8>);
            {
                var _i = (0 : stdgo.GoInt);
                stdgo.Go.cfor((_i < (10000 : stdgo.GoInt) : Bool), _i++, {
                    _internal.bytes_test.Bytes_test__testBytes._testBytes[(_i : stdgo.GoInt)] = ((97 : stdgo.GoUInt8) + ((_i % (26 : stdgo.GoInt) : stdgo.GoInt) : stdgo.GoUInt8) : stdgo.GoUInt8);
                });
            };
            _internal.bytes_test.Bytes_test__testString._testString = (_internal.bytes_test.Bytes_test__testBytes._testBytes : stdgo.GoString)?.__copy__();
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
