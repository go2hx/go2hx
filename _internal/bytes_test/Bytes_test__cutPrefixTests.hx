package _internal.bytes_test;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.bytes.Bytes;
var _cutPrefixTests : stdgo.Slice<_internal.bytes_test.Bytes_test_T__struct_8.T__struct_8> = (new stdgo.Slice<_internal.bytes_test.Bytes_test_T__struct_8.T__struct_8>(6, 6, ...[({ _s : ("abc" : stdgo.GoString), _sep : ("a" : stdgo.GoString), _after : ("bc" : stdgo.GoString), _found : true } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8), ({ _s : ("abc" : stdgo.GoString), _sep : ("abc" : stdgo.GoString), _after : stdgo.Go.str()?.__copy__(), _found : true } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8), ({ _s : ("abc" : stdgo.GoString), _sep : stdgo.Go.str()?.__copy__(), _after : ("abc" : stdgo.GoString), _found : true } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8), ({ _s : ("abc" : stdgo.GoString), _sep : ("d" : stdgo.GoString), _after : ("abc" : stdgo.GoString), _found : false } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8), ({ _s : stdgo.Go.str()?.__copy__(), _sep : ("d" : stdgo.GoString), _after : stdgo.Go.str()?.__copy__(), _found : false } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8), ({ _s : stdgo.Go.str()?.__copy__(), _sep : stdgo.Go.str()?.__copy__(), _after : stdgo.Go.str()?.__copy__(), _found : true } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({ _s : ("" : stdgo.GoString), _sep : ("" : stdgo.GoString), _after : ("" : stdgo.GoString), _found : false } : _internal.bytes_test.Bytes_test_T__struct_8.T__struct_8)])) : stdgo.Slice<_internal.bytes_test.Bytes_test_T__struct_8.T__struct_8>);
