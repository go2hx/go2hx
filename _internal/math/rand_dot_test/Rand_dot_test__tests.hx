package _internal.math.rand_dot_test;
import stdgo._internal.math.rand.Rand;
var _tests : stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest> = (new stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest>(17, 17, ...[
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestAuto" : stdgo.GoString), _internal.math.rand_test.Rand_test_testAuto.testAuto) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestDefaultRace" : stdgo.GoString), _internal.math.rand_test.Rand_test_testDefaultRace.testDefaultRace) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestConcurrent" : stdgo.GoString), _internal.math.rand_test.Rand_test_testConcurrent.testConcurrent) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestStandardNormalValues" : stdgo.GoString), _internal.math.rand_test.Rand_test_testStandardNormalValues.testStandardNormalValues) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestNonStandardNormalValues" : stdgo.GoString), _internal.math.rand_test.Rand_test_testNonStandardNormalValues.testNonStandardNormalValues) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestStandardExponentialValues" : stdgo.GoString), _internal.math.rand_test.Rand_test_testStandardExponentialValues.testStandardExponentialValues) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestNonStandardExponentialValues" : stdgo.GoString), _internal.math.rand_test.Rand_test_testNonStandardExponentialValues.testNonStandardExponentialValues) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestNormTables" : stdgo.GoString), _internal.math.rand_test.Rand_test_testNormTables.testNormTables) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestExpTables" : stdgo.GoString), _internal.math.rand_test.Rand_test_testExpTables.testExpTables) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestFloat32" : stdgo.GoString), _internal.math.rand_test.Rand_test_testFloat32.testFloat32) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestReadUniformity" : stdgo.GoString), _internal.math.rand_test.Rand_test_testReadUniformity.testReadUniformity) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestReadEmpty" : stdgo.GoString), _internal.math.rand_test.Rand_test_testReadEmpty.testReadEmpty) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestReadByOneByte" : stdgo.GoString), _internal.math.rand_test.Rand_test_testReadByOneByte.testReadByOneByte) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestReadSeedReset" : stdgo.GoString), _internal.math.rand_test.Rand_test_testReadSeedReset.testReadSeedReset) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestShuffleSmall" : stdgo.GoString), _internal.math.rand_test.Rand_test_testShuffleSmall.testShuffleSmall) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestUniformFactorial" : stdgo.GoString), _internal.math.rand_test.Rand_test_testUniformFactorial.testUniformFactorial) : stdgo._internal.testing.Testing_InternalTest.InternalTest),
(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestRegress" : stdgo.GoString), _internal.math.rand_test.Rand_test_testRegress.testRegress) : stdgo._internal.testing.Testing_InternalTest.InternalTest)].concat([for (i in 17 ... (17 > 17 ? 17 : 17 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.testing.Testing_InternalTest.InternalTest)])) : stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest>);
