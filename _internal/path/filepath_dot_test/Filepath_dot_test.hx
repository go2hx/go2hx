package _internal.path.filepath_dot_test;
import stdgo._internal.path.filepath.Filepath;
function main():Void {
        var _m = stdgo._internal.testing.Testing_mainStart.mainStart(stdgo.Go.asInterface((new stdgo._internal.testing.internal.testdeps.Testdeps_TestDeps.TestDeps() : stdgo._internal.testing.internal.testdeps.Testdeps_TestDeps.TestDeps)), _internal.path.filepath_dot_test.Filepath_dot_test__tests._tests, _internal.path.filepath_dot_test.Filepath_dot_test__benchmarks._benchmarks, _internal.path.filepath_dot_test.Filepath_dot_test__fuzzTargets._fuzzTargets, _internal.path.filepath_dot_test.Filepath_dot_test__examples._examples);
        Sys.exit(_m.run());
    }
@:keep var __init_go2hx__ = {
        try {
            var __tmp__0 = _internal.path.filepath_test.Filepath_test__matchTests._matchTests, __tmp__1 = _internal.path.filepath_test.Filepath_test__globTests._globTests, __tmp__2 = _internal.path.filepath_test.Filepath_test__globSymlinkTests._globSymlinkTests, __tmp__3 = _internal.path.filepath_test.Filepath_test__cleantests._cleantests, __tmp__4 = _internal.path.filepath_test.Filepath_test__nonwincleantests._nonwincleantests, __tmp__5 = _internal.path.filepath_test.Filepath_test__wincleantests._wincleantests, __tmp__6 = _internal.path.filepath_test.Filepath_test__islocaltests._islocaltests, __tmp__7 = _internal.path.filepath_test.Filepath_test__winislocaltests._winislocaltests, __tmp__8 = _internal.path.filepath_test.Filepath_test__plan9islocaltests._plan9islocaltests, __tmp__9 = _internal.path.filepath_test.Filepath_test__slashtests._slashtests, __tmp__10 = _internal.path.filepath_test.Filepath_test__splitlisttests._splitlisttests, __tmp__11 = _internal.path.filepath_test.Filepath_test__winsplitlisttests._winsplitlisttests, __tmp__12 = _internal.path.filepath_test.Filepath_test__unixsplittests._unixsplittests, __tmp__13 = _internal.path.filepath_test.Filepath_test__winsplittests._winsplittests, __tmp__14 = _internal.path.filepath_test.Filepath_test__jointests._jointests, __tmp__15 = _internal.path.filepath_test.Filepath_test__nonwinjointests._nonwinjointests, __tmp__16 = _internal.path.filepath_test.Filepath_test__winjointests._winjointests, __tmp__17 = _internal.path.filepath_test.Filepath_test__exttests._exttests, __tmp__18 = _internal.path.filepath_test.Filepath_test__tree._tree, __tmp__19 = _internal.path.filepath_test.Filepath_test__basetests._basetests, __tmp__20 = _internal.path.filepath_test.Filepath_test__winbasetests._winbasetests, __tmp__21 = _internal.path.filepath_test.Filepath_test__dirtests._dirtests, __tmp__22 = _internal.path.filepath_test.Filepath_test__nonwindirtests._nonwindirtests, __tmp__23 = _internal.path.filepath_test.Filepath_test__windirtests._windirtests, __tmp__24 = _internal.path.filepath_test.Filepath_test__isabstests._isabstests, __tmp__25 = _internal.path.filepath_test.Filepath_test__winisabstests._winisabstests, __tmp__26 = _internal.path.filepath_test.Filepath_test_evalSymlinksTestDirs.evalSymlinksTestDirs, __tmp__27 = _internal.path.filepath_test.Filepath_test_evalSymlinksTests.evalSymlinksTests, __tmp__28 = _internal.path.filepath_test.Filepath_test__absTestDirs._absTestDirs, __tmp__29 = _internal.path.filepath_test.Filepath_test__absTests._absTests, __tmp__30 = _internal.path.filepath_test.Filepath_test__reltests._reltests, __tmp__31 = _internal.path.filepath_test.Filepath_test__winreltests._winreltests, __tmp__32 = _internal.path.filepath_test.Filepath_test__volumenametests._volumenametests;
            var __tmp__0 = _internal.path.filepath_dot_test.Filepath_dot_test__tests._tests, __tmp__1 = _internal.path.filepath_dot_test.Filepath_dot_test__benchmarks._benchmarks, __tmp__2 = _internal.path.filepath_dot_test.Filepath_dot_test__fuzzTargets._fuzzTargets, __tmp__3 = _internal.path.filepath_dot_test.Filepath_dot_test__examples._examples;
            stdgo._internal.testing.internal.testdeps.Testdeps_importPath.importPath = ("path/filepath" : stdgo.GoString);
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
