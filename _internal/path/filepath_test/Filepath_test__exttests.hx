package _internal.path.filepath_test;
import stdgo._internal.path.filepath.Filepath;
var _exttests : stdgo.Slice<_internal.path.filepath_test.Filepath_test_ExtTest.ExtTest> = (new stdgo.Slice<_internal.path.filepath_test.Filepath_test_ExtTest.ExtTest>(5, 5, ...[(new _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest(("path.go" : stdgo.GoString), (".go" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest), (new _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest(("path.pb.go" : stdgo.GoString), (".go" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest), (new _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest(("a.dir/b" : stdgo.GoString), stdgo.Go.str()?.__copy__()) : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest), (new _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest(("a.dir/b.go" : stdgo.GoString), (".go" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest), (new _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest(("a.dir/" : stdgo.GoString), stdgo.Go.str()?.__copy__()) : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest)].concat([for (i in 5 ... (5 > 5 ? 5 : 5 : stdgo.GoInt).toBasic()) ({} : _internal.path.filepath_test.Filepath_test_ExtTest.ExtTest)])) : stdgo.Slice<_internal.path.filepath_test.Filepath_test_ExtTest.ExtTest>);
