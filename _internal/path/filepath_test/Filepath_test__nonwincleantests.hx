package _internal.path.filepath_test;
import stdgo._internal.path.filepath.Filepath;
var _nonwincleantests : stdgo.Slice<_internal.path.filepath_test.Filepath_test_PathTest.PathTest> = (new stdgo.Slice<_internal.path.filepath_test.Filepath_test_PathTest.PathTest>(3, 3, ...[(new _internal.path.filepath_test.Filepath_test_PathTest.PathTest(("//abc" : stdgo.GoString), ("/abc" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_PathTest.PathTest), (new _internal.path.filepath_test.Filepath_test_PathTest.PathTest(("///abc" : stdgo.GoString), ("/abc" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_PathTest.PathTest), (new _internal.path.filepath_test.Filepath_test_PathTest.PathTest(("//abc//" : stdgo.GoString), ("/abc" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_PathTest.PathTest)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : _internal.path.filepath_test.Filepath_test_PathTest.PathTest)])) : stdgo.Slice<_internal.path.filepath_test.Filepath_test_PathTest.PathTest>);
