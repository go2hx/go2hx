package _internal.path.filepath_test;
import stdgo._internal.path.filepath.Filepath;
var _unixsplittests : stdgo.Slice<_internal.path.filepath_test.Filepath_test_SplitTest.SplitTest> = (new stdgo.Slice<_internal.path.filepath_test.Filepath_test_SplitTest.SplitTest>(5, 5, ...[(new _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest(("a/b" : stdgo.GoString), ("a/" : stdgo.GoString), ("b" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest), (new _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest(("a/b/" : stdgo.GoString), ("a/b/" : stdgo.GoString), stdgo.Go.str()?.__copy__()) : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest), (new _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest(("a/" : stdgo.GoString), ("a/" : stdgo.GoString), stdgo.Go.str()?.__copy__()) : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest), (new _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest(("a" : stdgo.GoString), stdgo.Go.str()?.__copy__(), ("a" : stdgo.GoString)) : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest), (new _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest(("/" : stdgo.GoString), ("/" : stdgo.GoString), stdgo.Go.str()?.__copy__()) : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest)].concat([for (i in 5 ... (5 > 5 ? 5 : 5 : stdgo.GoInt).toBasic()) ({} : _internal.path.filepath_test.Filepath_test_SplitTest.SplitTest)])) : stdgo.Slice<_internal.path.filepath_test.Filepath_test_SplitTest.SplitTest>);
