package _internal.path_test;
import stdgo._internal.path.Path;
import stdgo._internal.path.Path;
var _jointests : stdgo.Slice<_internal.path_test.Path_test_JoinTest.JoinTest> = (new stdgo.Slice<_internal.path_test.Path_test_JoinTest.JoinTest>(11, 11, ...[
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(0, 0, ...[]).__setString__() : stdgo.Slice<stdgo.GoString>), stdgo.Go.str()?.__copy__()) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(1, 1, ...[stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>), stdgo.Go.str()?.__copy__()) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(1, 1, ...[("a" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>), ("a" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("a" : stdgo.GoString), ("b" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>), ("a/b" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("a" : stdgo.GoString), stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>), ("a" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[stdgo.Go.str()?.__copy__(), ("b" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>), ("b" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("/" : stdgo.GoString), ("a" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>), ("/a" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("/" : stdgo.GoString), stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>), ("/" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("a/" : stdgo.GoString), ("b" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>), ("a/b" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[("a/" : stdgo.GoString), stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>), ("a" : stdgo.GoString)) : _internal.path_test.Path_test_JoinTest.JoinTest),
(new _internal.path_test.Path_test_JoinTest.JoinTest((new stdgo.Slice<stdgo.GoString>(2, 2, ...[stdgo.Go.str()?.__copy__(), stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>), stdgo.Go.str()?.__copy__()) : _internal.path_test.Path_test_JoinTest.JoinTest)].concat([for (i in 11 ... (11 > 11 ? 11 : 11 : stdgo.GoInt).toBasic()) ({} : _internal.path_test.Path_test_JoinTest.JoinTest)])) : stdgo.Slice<_internal.path_test.Path_test_JoinTest.JoinTest>);
