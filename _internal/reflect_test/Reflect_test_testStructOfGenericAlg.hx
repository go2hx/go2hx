package _internal.reflect_test;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.reflect.Reflect;
function testStructOfGenericAlg(_t:stdgo.Ref<stdgo._internal.testing.Testing_T_.T_>):Void {
        var _st1 = (stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(2, 2, ...[({ name : ("X" : stdgo.GoString), tag : (("x" : stdgo.GoString) : stdgo._internal.reflect.Reflect_StructTag.StructTag), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0i64 : stdgo.GoInt64))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("Y" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((stdgo.Go.str() : stdgo.GoString))) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)) : stdgo._internal.reflect.Reflect_Type_.Type_);
        var _st = (stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(2, 2, ...[({ name : ("S0" : stdgo.GoString), type : _st1 } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("S1" : stdgo.GoString), type : _st1 } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)) : stdgo._internal.reflect.Reflect_Type_.Type_);
        var _tests = (new stdgo.Slice<_internal.reflect_test.Reflect_test_T__struct_85.T__struct_85>(9, 9, ...[({ _rt : _st, _idx : (new stdgo.Slice<stdgo.GoInt>(2, 2, ...[(0 : stdgo.GoInt), (1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : _st1, _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(2, 2, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(0, 0, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(3, 3, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(0, 0, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("ZZ" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(2, 2, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(2, 2, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(1, 1, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(3, 3, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(1, 1, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("ZZ" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(1, 1, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(3, 3, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(2, 2, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("ZZ" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt>(2, 2, ...[]).__setNumber32__() : stdgo.GoArray<stdgo.GoInt>))) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(3, 3, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0i64 : stdgo.GoInt64))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0 : stdgo.GoUInt8))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("ZZ" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(2 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85), ({ _rt : stdgo._internal.reflect.Reflect_structOf.structOf((new stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>(4, 4, ...[({ name : ("XX" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0i64 : stdgo.GoInt64))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("YY" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0i64 : stdgo.GoInt64))) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("ZZ" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface(stdgo.Go.str())) } : stdgo._internal.reflect.Reflect_StructField.StructField), ({ name : ("AA" : stdgo.GoString), type : stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((new stdgo.GoArray<stdgo.GoInt64>(1, 1, ...[]).__setNumber64__() : stdgo.GoArray<stdgo.GoInt64>))) } : stdgo._internal.reflect.Reflect_StructField.StructField)].concat([for (i in 4 ... (4 > 4 ? 4 : 4 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.reflect.Reflect_StructField.StructField)])) : stdgo.Slice<stdgo._internal.reflect.Reflect_StructField.StructField>)), _idx : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(2 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85)].concat([for (i in 9 ... (9 > 9 ? 9 : 9 : stdgo.GoInt).toBasic()) ({ _rt : (null : stdgo._internal.reflect.Reflect_Type_.Type_), _idx : (null : stdgo.Slice<stdgo.GoInt>) } : _internal.reflect_test.Reflect_test_T__struct_85.T__struct_85)])) : stdgo.Slice<_internal.reflect_test.Reflect_test_T__struct_85.T__struct_85>);
        for (__7 => _table in _tests) {
            var _v1 = (stdgo._internal.reflect.Reflect_new_.new_(_table._rt).elem()?.__copy__() : stdgo._internal.reflect.Reflect_Value.Value);
            var _v2 = (stdgo._internal.reflect.Reflect_new_.new_(_table._rt).elem()?.__copy__() : stdgo._internal.reflect.Reflect_Value.Value);
            if (!stdgo._internal.reflect.Reflect_deepEqual.deepEqual(_v1.interface_(), _v1.interface_())) {
                _t.errorf(("constructed struct %v not equal to itself" : stdgo.GoString), _v1.interface_());
            };
            _v1.fieldByIndex(_table._idx).set(stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface(("abc" : stdgo.GoString)))?.__copy__());
            _v2.fieldByIndex(_table._idx).set(stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface(("def" : stdgo.GoString)))?.__copy__());
            {
                var __0 = (_v1.interface_() : stdgo.AnyInterface), __1 = (_v2.interface_() : stdgo.AnyInterface);
var _i2 = __1, _i1 = __0;
                if (stdgo._internal.reflect.Reflect_deepEqual.deepEqual(_i1, _i2)) {
                    _t.errorf(("constructed structs %v and %v should not be equal" : stdgo.GoString), _i1, _i2);
                };
            };
            var _abc = ("abc" : stdgo.GoString);
            _v1.fieldByIndex(_table._idx).set(stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface(_abc))?.__copy__());
            var _val = (((("+" : stdgo.GoString) + _abc?.__copy__() : stdgo.GoString) + ("-" : stdgo.GoString)?.__copy__() : stdgo.GoString)?.__copy__() : stdgo.GoString);
            _v2.fieldByIndex(_table._idx).set(stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface((_val.__slice__((1 : stdgo.GoInt), (4 : stdgo.GoInt)) : stdgo.GoString)))?.__copy__());
            {
                var __0 = (_v1.interface_() : stdgo.AnyInterface), __1 = (_v2.interface_() : stdgo.AnyInterface);
var _i2 = __1, _i1 = __0;
                if (!stdgo._internal.reflect.Reflect_deepEqual.deepEqual(_i1, _i2)) {
                    _t.errorf(("constructed structs %v and %v should be equal" : stdgo.GoString), _i1, _i2);
                };
            };
            var _m = (stdgo._internal.reflect.Reflect_makeMap.makeMap(stdgo._internal.reflect.Reflect_mapOf.mapOf(_table._rt, stdgo._internal.reflect.Reflect_typeOf.typeOf(stdgo.Go.toInterface((0 : stdgo.GoInt)))))?.__copy__() : stdgo._internal.reflect.Reflect_Value.Value);
            _m.setMapIndex(_v1?.__copy__(), stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface((1 : stdgo.GoInt)))?.__copy__());
            {
                var __0 = (_v1.interface_() : stdgo.AnyInterface), __1 = (_v2.interface_() : stdgo.AnyInterface);
var _i2 = __1, _i1 = __0;
                if (!_m.mapIndex(_v2?.__copy__()).isValid()) {
                    _t.errorf(("constructed structs %#v and %#v have different hashes" : stdgo.GoString), _i1, _i2);
                };
            };
            _v2.fieldByIndex(_table._idx).set(stdgo._internal.reflect.Reflect_valueOf.valueOf(stdgo.Go.toInterface(("abc" : stdgo.GoString)))?.__copy__());
            {
                var __0 = (_v1.interface_() : stdgo.AnyInterface), __1 = (_v2.interface_() : stdgo.AnyInterface);
var _i2 = __1, _i1 = __0;
                if (!stdgo._internal.reflect.Reflect_deepEqual.deepEqual(_i1, _i2)) {
                    _t.errorf(("constructed structs %v and %v should be equal" : stdgo.GoString), _i1, _i2);
                };
            };
            {
                var __0 = (_v1.interface_() : stdgo.AnyInterface), __1 = (_v2.interface_() : stdgo.AnyInterface);
var _i2 = __1, _i1 = __0;
                if (!_m.mapIndex(_v2?.__copy__()).isValid()) {
                    _t.errorf(("constructed structs %v and %v have different hashes" : stdgo.GoString), _i1, _i2);
                };
            };
        };
    }
