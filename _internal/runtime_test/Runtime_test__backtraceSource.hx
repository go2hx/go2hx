package _internal.runtime_test;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unsafe.Unsafe;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unsafe.Unsafe;
import stdgo._internal.unsafe.Unsafe;
final _backtraceSource : stdgo.GoString = ("\npackage main\n\n//go:noinline\nfunc aaa() bool { return bbb() }\n\n//go:noinline\nfunc bbb() bool { return ccc() }\n\n//go:noinline\nfunc ccc() bool { return ddd() }\n\n//go:noinline\nfunc ddd() bool { return f() }\n\n//go:noinline\nfunc eee() bool { return true }\n\nvar f = eee\n\nfunc main() {\n\t_ = aaa()\n}\n" : stdgo.GoString);
