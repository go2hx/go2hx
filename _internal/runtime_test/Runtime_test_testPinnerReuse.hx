package _internal.runtime_test;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unsafe.Unsafe;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unsafe.Unsafe;
import stdgo._internal.unsafe.Unsafe;
function testPinnerReuse(_t:stdgo.Ref<stdgo._internal.testing.Testing_T_.T_>):Void {
        var _pinner:stdgo._internal.runtime.Runtime_Pinner.Pinner = ({} : stdgo._internal.runtime.Runtime_Pinner.Pinner);
        var _p = (stdgo.Go.setRef(({} : _internal.runtime_test.Runtime_test_T_obj.T_obj)) : stdgo.Ref<_internal.runtime_test.Runtime_test_T_obj.T_obj>);
        var _p2 = (stdgo.Go.setRef(_p) : stdgo.Ref<stdgo.Ref<_internal.runtime_test.Runtime_test_T_obj.T_obj>>);
        _internal.runtime_test.Runtime_test__assertCgoCheckPanics._assertCgoCheckPanics(_t, stdgo.Go.toInterface(_p2));
        _pinner.pin(stdgo.Go.toInterface(_p));
        stdgo._internal.runtime.Runtime_cgoCheckPointer.cgoCheckPointer(stdgo.Go.toInterface(_p2), stdgo.Go.toInterface(true));
        _pinner.unpin();
        _internal.runtime_test.Runtime_test__assertCgoCheckPanics._assertCgoCheckPanics(_t, stdgo.Go.toInterface(_p2));
        _pinner.pin(stdgo.Go.toInterface(_p));
        stdgo._internal.runtime.Runtime_cgoCheckPointer.cgoCheckPointer(stdgo.Go.toInterface(_p2), stdgo.Go.toInterface(true));
        _pinner.unpin();
    }
