package _internal.strconv_test;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strconv.Strconv;
var _numErrorTests : stdgo.Slice<_internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest> = (new stdgo.Slice<_internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest>(3, 3, ...[(new _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest(("0" : stdgo.GoString), ("strconv.ParseFloat: parsing \"0\": failed" : stdgo.GoString)) : _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest), (new _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest(("`" : stdgo.GoString), ("strconv.ParseFloat: parsing \"`\": failed" : stdgo.GoString)) : _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest), (new _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest(stdgo.Go.str("1", 0, ".2")?.__copy__(), ("strconv.ParseFloat: parsing \"1\\x00.2\": failed" : stdgo.GoString)) : _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : _internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest)])) : stdgo.Slice<_internal.strconv_test.Strconv_test_T_numErrorTest.T_numErrorTest>);
