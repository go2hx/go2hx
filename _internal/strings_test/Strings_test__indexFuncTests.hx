package _internal.strings_test;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
var _indexFuncTests : stdgo.Slice<_internal.strings_test.Strings_test_T__struct_16.T__struct_16> = (new stdgo.Slice<_internal.strings_test.Strings_test_T__struct_16.T__struct_16>(17, 17, ...[
({ _in : stdgo.Go.str()?.__copy__(), _f : _internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__(), _first : (-1 : stdgo.GoInt), _last : (-1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("abc" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (-1 : stdgo.GoInt), _last : (-1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("0123" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (0 : stdgo.GoInt), _last : (3 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("a1b" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (1 : stdgo.GoInt), _last : (1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isSpace._isSpace?.__copy__(), _first : (0 : stdgo.GoInt), _last : (12 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("๐๒12hello34๐๑" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (0 : stdgo.GoInt), _last : (18 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("ⱯⱯⱯⱯABCDhelloEFⱯⱯGHⱯⱯ" : stdgo.GoString), _f : _internal.strings_test.Strings_test__isUpper._isUpper?.__copy__(), _first : (0 : stdgo.GoInt), _last : (34 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : ("12๐๒hello34๐๑" : stdgo.GoString), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isDigit._isDigit?.__copy__())?.__copy__(), _first : (8 : stdgo.GoInt), _last : (12 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(128, "1")?.__copy__(), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (1 : stdgo.GoInt), _last : (1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(128, "abc")?.__copy__(), _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _first : (-1 : stdgo.GoInt), _last : (-1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(192, "a", 192)?.__copy__(), _f : _internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__(), _first : (1 : stdgo.GoInt), _last : (1 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(192, "a", 192)?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (0 : stdgo.GoInt), _last : (2 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(192, "☺", 192)?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (0 : stdgo.GoInt), _last : (4 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(192, "☺", 192, 192)?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (0 : stdgo.GoInt), _last : (5 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str("ab", 192, "a", 192, "cd")?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (2 : stdgo.GoInt), _last : (4 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str("a", 224, 128, "cd")?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (1 : stdgo.GoInt), _last : (2 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16),
({ _in : stdgo.Go.str(128, 128, 128, 128)?.__copy__(), _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _first : (0 : stdgo.GoInt), _last : (3 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16)].concat([for (i in 17 ... (17 > 17 ? 17 : 17 : stdgo.GoInt).toBasic()) ({ _in : ("" : stdgo.GoString), _f : ({} : _internal.strings_test.Strings_test_T_predicate.T_predicate), _first : (0 : stdgo.GoInt), _last : (0 : stdgo.GoInt) } : _internal.strings_test.Strings_test_T__struct_16.T__struct_16)])) : stdgo.Slice<_internal.strings_test.Strings_test_T__struct_16.T__struct_16>);
