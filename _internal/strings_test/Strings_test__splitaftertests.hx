package _internal.strings_test;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
var _splitaftertests : stdgo.Slice<_internal.strings_test.Strings_test_SplitTest.SplitTest> = (new stdgo.Slice<_internal.strings_test.Strings_test_SplitTest.SplitTest>(13, 13, ...[
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__abcd._abcd?.__copy__(), ("a" : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(2, 2, ...[("a" : stdgo.GoString), ("bcd" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__abcd._abcd?.__copy__(), ("z" : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(1, 1, ...[("abcd" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__abcd._abcd?.__copy__(), stdgo.Go.str()?.__copy__(), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(4, 4, ...[("a" : stdgo.GoString), ("b" : stdgo.GoString), ("c" : stdgo.GoString), ("d" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__commas._commas?.__copy__(), ("," : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(4, 4, ...[("1," : stdgo.GoString), ("2," : stdgo.GoString), ("3," : stdgo.GoString), ("4" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__dots._dots?.__copy__(), ("..." : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(4, 4, ...[("1..." : stdgo.GoString), (".2..." : stdgo.GoString), (".3..." : stdgo.GoString), (".4" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__faces._faces?.__copy__(), ("☹" : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(2, 2, ...[("☺☻☹" : stdgo.GoString), stdgo.Go.str()?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__faces._faces?.__copy__(), ("~" : stdgo.GoString), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(1, 1, ...[_internal.strings_test.Strings_test__faces._faces?.__copy__()]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(_internal.strings_test.Strings_test__faces._faces?.__copy__(), stdgo.Go.str()?.__copy__(), (-1 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(3, 3, ...[("☺" : stdgo.GoString), ("☻" : stdgo.GoString), ("☹" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(("1 2 3 4" : stdgo.GoString), (" " : stdgo.GoString), (3 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(3, 3, ...[("1 " : stdgo.GoString), ("2 " : stdgo.GoString), ("3 4" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(("1 2 3" : stdgo.GoString), (" " : stdgo.GoString), (3 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(3, 3, ...[("1 " : stdgo.GoString), ("2 " : stdgo.GoString), ("3" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(("1 2" : stdgo.GoString), (" " : stdgo.GoString), (3 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(2, 2, ...[("1 " : stdgo.GoString), ("2" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(("123" : stdgo.GoString), stdgo.Go.str()?.__copy__(), (2 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(2, 2, ...[("1" : stdgo.GoString), ("23" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest),
(new _internal.strings_test.Strings_test_SplitTest.SplitTest(("123" : stdgo.GoString), stdgo.Go.str()?.__copy__(), (17 : stdgo.GoInt), (new stdgo.Slice<stdgo.GoString>(3, 3, ...[("1" : stdgo.GoString), ("2" : stdgo.GoString), ("3" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>)) : _internal.strings_test.Strings_test_SplitTest.SplitTest)].concat([for (i in 13 ... (13 > 13 ? 13 : 13 : stdgo.GoInt).toBasic()) ({} : _internal.strings_test.Strings_test_SplitTest.SplitTest)])) : stdgo.Slice<_internal.strings_test.Strings_test_SplitTest.SplitTest>);
