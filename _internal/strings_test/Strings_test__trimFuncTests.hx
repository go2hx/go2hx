package _internal.strings_test;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
var _trimFuncTests : stdgo.Slice<_internal.strings_test.Strings_test_T__struct_14.T__struct_14> = (new stdgo.Slice<_internal.strings_test.Strings_test_T__struct_14.T__struct_14>(9, 9, ...[({ _f : _internal.strings_test.Strings_test__isSpace._isSpace?.__copy__(), _in : ("\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000 hello \t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000" : stdgo.GoString), _trimOut : ("hello" : stdgo.GoString), _leftOut : ("hello \t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000" : stdgo.GoString), _rightOut : ("\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000 hello" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__isDigit._isDigit?.__copy__(), _in : ("๐๒12hello34๐๑" : stdgo.GoString), _trimOut : ("hello" : stdgo.GoString), _leftOut : ("hello34๐๑" : stdgo.GoString), _rightOut : ("๐๒12hello" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__isUpper._isUpper?.__copy__(), _in : ("ⱯⱯⱯⱯABCDhelloEFⱯⱯGHⱯⱯ" : stdgo.GoString), _trimOut : ("hello" : stdgo.GoString), _leftOut : ("helloEFⱯⱯGHⱯⱯ" : stdgo.GoString), _rightOut : ("ⱯⱯⱯⱯABCDhello" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isSpace._isSpace?.__copy__())?.__copy__(), _in : ("hello\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000hello" : stdgo.GoString), _trimOut : ("\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000" : stdgo.GoString), _leftOut : ("\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000hello" : stdgo.GoString), _rightOut : ("hello\t\x0B\r\x0C\n\u0085\u00a0\u2000\u3000" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isDigit._isDigit?.__copy__())?.__copy__(), _in : ("hello๐๒1234๐๑helo" : stdgo.GoString), _trimOut : ("๐๒1234๐๑" : stdgo.GoString), _leftOut : ("๐๒1234๐๑helo" : stdgo.GoString), _rightOut : ("hello๐๒1234๐๑" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__(), _in : stdgo.Go.str("ab", 192, "a", 192, "cd")?.__copy__(), _trimOut : stdgo.Go.str(192, "a", 192)?.__copy__(), _leftOut : stdgo.Go.str(192, "a", 192, "cd")?.__copy__(), _rightOut : stdgo.Go.str("ab", 192, "a", 192)?.__copy__() } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__not._not(_internal.strings_test.Strings_test__isValidRune._isValidRune?.__copy__())?.__copy__(), _in : stdgo.Go.str(192, "a", 192)?.__copy__(), _trimOut : ("a" : stdgo.GoString), _leftOut : stdgo.Go.str("a", 192)?.__copy__(), _rightOut : stdgo.Go.str(192, "a")?.__copy__() } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__isSpace._isSpace?.__copy__(), _in : stdgo.Go.str()?.__copy__(), _trimOut : stdgo.Go.str()?.__copy__(), _leftOut : stdgo.Go.str()?.__copy__(), _rightOut : stdgo.Go.str()?.__copy__() } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14), ({ _f : _internal.strings_test.Strings_test__isSpace._isSpace?.__copy__(), _in : (" " : stdgo.GoString), _trimOut : stdgo.Go.str()?.__copy__(), _leftOut : stdgo.Go.str()?.__copy__(), _rightOut : stdgo.Go.str()?.__copy__() } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14)].concat([for (i in 9 ... (9 > 9 ? 9 : 9 : stdgo.GoInt).toBasic()) ({ _f : ({} : _internal.strings_test.Strings_test_T_predicate.T_predicate), _in : ("" : stdgo.GoString), _trimOut : ("" : stdgo.GoString), _leftOut : ("" : stdgo.GoString), _rightOut : ("" : stdgo.GoString) } : _internal.strings_test.Strings_test_T__struct_14.T__struct_14)])) : stdgo.Slice<_internal.strings_test.Strings_test_T__struct_14.T__struct_14>);
