package _internal.strings_test;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
import stdgo._internal.strings.Strings;
var titleTests : stdgo.Slice<_internal.strings_test.Strings_test_StringTest.StringTest> = (new stdgo.Slice<_internal.strings_test.Strings_test_StringTest.StringTest>(9, 9, ...[(new _internal.strings_test.Strings_test_StringTest.StringTest(stdgo.Go.str()?.__copy__(), stdgo.Go.str()?.__copy__()) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("a" : stdgo.GoString), ("A" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest((" aaa aaa aaa " : stdgo.GoString), (" Aaa Aaa Aaa " : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest((" Aaa Aaa Aaa " : stdgo.GoString), (" Aaa Aaa Aaa " : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("123a456" : stdgo.GoString), ("123a456" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("double-blind" : stdgo.GoString), ("Double-Blind" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("ÿøû" : stdgo.GoString), ("Ÿøû" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("with_underscore" : stdgo.GoString), ("With_underscore" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest), (new _internal.strings_test.Strings_test_StringTest.StringTest(("unicode \u2028 line separator" : stdgo.GoString), ("Unicode \u2028 Line Separator" : stdgo.GoString)) : _internal.strings_test.Strings_test_StringTest.StringTest)].concat([for (i in 9 ... (9 > 9 ? 9 : 9 : stdgo.GoInt).toBasic()) ({} : _internal.strings_test.Strings_test_StringTest.StringTest)])) : stdgo.Slice<_internal.strings_test.Strings_test_StringTest.StringTest>);
