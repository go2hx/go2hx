package _internal.sync.atomic_test;
import stdgo._internal.sync.atomic_.Atomic_;
import stdgo._internal.sync.atomic_.Atomic_;
var _hammer32 : stdgo.GoMap<stdgo.GoString, (stdgo.Pointer<stdgo.GoUInt32>, stdgo.GoInt) -> Void> = ({
        final x = new stdgo.GoMap.GoStringMap<(stdgo.Pointer<stdgo.GoUInt32>, stdgo.GoInt) -> Void>();
        x.__defaultValue__ = () -> null;
        x.set(("SwapInt32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapInt32._hammerSwapInt32);
x.set(("SwapUint32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapUint32._hammerSwapUint32);
x.set(("SwapUintptr" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapUintptr32._hammerSwapUintptr32);
x.set(("AddInt32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddInt32._hammerAddInt32);
x.set(("AddUint32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddUint32._hammerAddUint32);
x.set(("AddUintptr" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddUintptr32._hammerAddUintptr32);
x.set(("CompareAndSwapInt32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapInt32._hammerCompareAndSwapInt32);
x.set(("CompareAndSwapUint32" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapUint32._hammerCompareAndSwapUint32);
x.set(("CompareAndSwapUintptr" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapUintptr32._hammerCompareAndSwapUintptr32);
x.set(("SwapInt32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapInt32Method._hammerSwapInt32Method);
x.set(("SwapUint32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapUint32Method._hammerSwapUint32Method);
x.set(("SwapUintptrMethod" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerSwapUintptr32Method._hammerSwapUintptr32Method);
x.set(("AddInt32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddInt32Method._hammerAddInt32Method);
x.set(("AddUint32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddUint32Method._hammerAddUint32Method);
x.set(("AddUintptrMethod" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerAddUintptr32Method._hammerAddUintptr32Method);
x.set(("CompareAndSwapInt32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapInt32Method._hammerCompareAndSwapInt32Method);
x.set(("CompareAndSwapUint32Method" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapUint32Method._hammerCompareAndSwapUint32Method);
x.set(("CompareAndSwapUintptrMethod" : stdgo.GoString), _internal.sync.atomic_test.Atomic_test__hammerCompareAndSwapUintptr32Method._hammerCompareAndSwapUintptr32Method);
        x;
    } : stdgo.GoMap<stdgo.GoString, (stdgo.Pointer<stdgo.GoUInt32>, stdgo.GoInt) -> Void>);
