package _internal.testing.quick_dot_test;
var _tests : stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest> = (new stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest>(8, 8, ...[(new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestCheckEqual" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testCheckEqual.testCheckEqual) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestCheckProperty" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testCheckProperty.testCheckProperty) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestFailure" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testFailure.testFailure) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestRecursive" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testRecursive.testRecursive) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestEmptyStruct" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testEmptyStruct.testEmptyStruct) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestMutuallyRecursive" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testMutuallyRecursive.testMutuallyRecursive) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestNonZeroSliceAndMap" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testNonZeroSliceAndMap.testNonZeroSliceAndMap) : stdgo._internal.testing.Testing_InternalTest.InternalTest), (new stdgo._internal.testing.Testing_InternalTest.InternalTest(("TestInt64" : stdgo.GoString), stdgo._internal.testing.quick.Quick_testInt64.testInt64) : stdgo._internal.testing.Testing_InternalTest.InternalTest)].concat([for (i in 8 ... (8 > 8 ? 8 : 8 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.testing.Testing_InternalTest.InternalTest)])) : stdgo.Slice<stdgo._internal.testing.Testing_InternalTest.InternalTest>);
