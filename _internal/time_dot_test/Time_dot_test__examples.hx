package _internal.time_dot_test;
import stdgo._internal.time.Time;
var _examples : stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample> = (new stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample>(35, 35, ...[
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Round" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Round.exampleDuration_Round, ("d.Round(   1ns) = 1h15m30.918273645s\nd.Round(   1µs) = 1h15m30.918274s\nd.Round(   1ms) = 1h15m30.918s\nd.Round(    1s) = 1h15m31s\nd.Round(    2s) = 1h15m30s\nd.Round(  1m0s) = 1h16m0s\nd.Round( 10m0s) = 1h20m0s\nd.Round(1h0m0s) = 1h0m0s\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_String" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_String.exampleDuration_String, ("1h2m0.3s\n300ms\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Truncate" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Truncate.exampleDuration_Truncate, ("d.Truncate(   1ns) = 1h15m30.918273645s\nd.Truncate(   1µs) = 1h15m30.918273s\nd.Truncate(   1ms) = 1h15m30.918s\nd.Truncate(    1s) = 1h15m30s\nd.Truncate(    2s) = 1h15m30s\nd.Truncate(  1m0s) = 1h15m0s\nd.Truncate( 10m0s) = 1h10m0s\nd.Truncate(1h0m0s) = 1h0m0s\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleParseDuration" : stdgo.GoString), _internal.time_test.Time_test_exampleParseDuration.exampleParseDuration, ("10h0m0s\n1h10m10s\nThere are 4210 seconds in 1h10m10s.\nThere are 1000 nanoseconds in 1µs.\nThere are 1.00e-06 seconds in 1µs.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Hours" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Hours.exampleDuration_Hours, ("I\'ve got 4.5 hours of work left.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Microseconds" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Microseconds.exampleDuration_Microseconds, ("One second is 1000000 microseconds.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Milliseconds" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Milliseconds.exampleDuration_Milliseconds, ("One second is 1000 milliseconds.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Minutes" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Minutes.exampleDuration_Minutes, ("The movie is 90 minutes long.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Nanoseconds" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Nanoseconds.exampleDuration_Nanoseconds, ("One microsecond is 1000 nanoseconds.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDuration_Seconds" : stdgo.GoString), _internal.time_test.Time_test_exampleDuration_Seconds.exampleDuration_Seconds, ("Take off in t-90 seconds.\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleDate" : stdgo.GoString), _internal.time_test.Time_test_exampleDate.exampleDate, ("Go launched at 2009-11-10 15:00:00 -0800 PST\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Format" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Format.exampleTime_Format, ("default format: 2015-02-25 11:06:39 -0800 PST\nUnix format: Wed Feb 25 11:06:39 PST 2015\nSame, in UTC: Wed Feb 25 19:06:39 UTC 2015\nin Shanghai with seconds: 2015-02-26T03:06:39 +080000\nin Shanghai with colon seconds: 2015-02-26T03:06:39 +08:00:00\n\nFormats:\n\nBasic full date  \"Mon Jan 2 15:04:05 MST 2006\" gives \"Wed Feb 25 11:06:39 PST 2015\"\nBasic short date \"2006/01/02\" gives \"2015/02/25\"\nAM/PM            \"3PM==3pm==15h\" gives \"11AM==11am==11h\"\nNo fraction      \"Mon Jan _2 15:04:05 MST 2006\" gives \"Wed Feb 25 11:06:39 PST 2015\"\n0s for fraction  \"15:04:05.00000\" gives \"11:06:39.12340\"\n9s for fraction  \"15:04:05.99999999\" gives \"11:06:39.1234\"\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Format_pad" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Format_pad.exampleTime_Format_pad, ("Unix             \"Mon Jan _2 15:04:05 MST 2006\" gives \"Sat Mar  7 11:06:39 PST 2015\"\nNo pad           \"<2>\" gives \"<7>\"\nSpaces           \"<_2>\" gives \"< 7>\"\nZeros            \"<02>\" gives \"<07>\"\nSuppressed pad   \"04:05\" gives \"06:39\"\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_GoString" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_GoString.exampleTime_GoString, ("time.Date(2009, time.November, 10, 23, 0, 0, 0, time.UTC)\ntime.Date(2009, time.November, 10, 23, 1, 0, 0, time.UTC)\ntime.Date(2009, time.December, 10, 23, 1, 0, 0, time.UTC)\ntime.Date(2013, time.February, 3, 19, 54, 0, 0, time.UTC)\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleParse" : stdgo.GoString), _internal.time_test.Time_test_exampleParse.exampleParse, ("2013-02-03 19:54:00 -0800 PST\n2013-02-03 00:00:00 +0000 UTC\n2006-01-02 15:04:05 +0000 UTC\n2006-01-02 15:04:05 +0700 +0700\nerror parsing time \"2006-01-02T15:04:05Z07:00\": extra text: \"07:00\"\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleParseInLocation" : stdgo.GoString), _internal.time_test.Time_test_exampleParseInLocation.exampleParseInLocation, ("2012-07-09 05:02:00 +0200 CEST\n2012-07-09 00:00:00 +0200 CEST\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleUnix" : stdgo.GoString), _internal.time_test.Time_test_exampleUnix.exampleUnix, ("1257894000\n2009-11-10 23:00:00 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleUnixMicro" : stdgo.GoString), _internal.time_test.Time_test_exampleUnixMicro.exampleUnixMicro, ("1257894000000000\n2009-11-10 23:00:00 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleUnixMilli" : stdgo.GoString), _internal.time_test.Time_test_exampleUnixMilli.exampleUnixMilli, ("1257894000000\n2009-11-10 23:00:00 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Unix" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Unix.exampleTime_Unix, ("2001-09-09 01:46:40 +0000 UTC\n2001-09-09 01:46:40 +0000 UTC\n2001-09-09 01:46:40 +0000 UTC\n1000000000\n1000000000000000000\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Round" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Round.exampleTime_Round, ("t.Round(   1ns) = 12:15:30.918273645\nt.Round(   1µs) = 12:15:30.918274\nt.Round(   1ms) = 12:15:30.918\nt.Round(    1s) = 12:15:31\nt.Round(    2s) = 12:15:30\nt.Round(  1m0s) = 12:16:00\nt.Round( 10m0s) = 12:20:00\nt.Round(1h0m0s) = 12:00:00\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Truncate" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Truncate.exampleTime_Truncate, ("t.Truncate(  1ns) = 12:15:30.918273645\nt.Truncate(  1µs) = 12:15:30.918273\nt.Truncate(  1ms) = 12:15:30.918\nt.Truncate(   1s) = 12:15:30\nt.Truncate(   2s) = 12:15:30\nt.Truncate( 1m0s) = 12:15:00\nt.Truncate(10m0s) = 12:10:00\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleLoadLocation" : stdgo.GoString), _internal.time_test.Time_test_exampleLoadLocation.exampleLoadLocation, ("2018-08-30 05:00:00 -0700 PDT\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleLocation" : stdgo.GoString), _internal.time_test.Time_test_exampleLocation.exampleLocation, ("true\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Add" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Add.exampleTime_Add, ("start = 2009-01-01 12:00:00 +0000 UTC\nstart.Add(time.Second * 10) = 2009-01-01 12:00:10 +0000 UTC\nstart.Add(time.Minute * 10) = 2009-01-01 12:10:00 +0000 UTC\nstart.Add(time.Hour * 10) = 2009-01-01 22:00:00 +0000 UTC\nstart.Add(time.Hour * 24 * 10) = 2009-01-11 12:00:00 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_AddDate" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_AddDate.exampleTime_AddDate, ("oneDayLater: start.AddDate(0, 0, 1) = 2009-01-02 00:00:00 +0000 UTC\noneMonthLater: start.AddDate(0, 1, 0) = 2009-02-01 00:00:00 +0000 UTC\noneYearLater: start.AddDate(1, 0, 0) = 2010-01-01 00:00:00 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_After" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_After.exampleTime_After, ("year3000.After(year2000) = true\nyear2000.After(year3000) = false\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Before" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Before.exampleTime_Before, ("year2000.Before(year3000) = true\nyear3000.Before(year2000) = false\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Date" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Date.exampleTime_Date, ("year = 2000\nmonth = February\nday = 1\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Day" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Day.exampleTime_Day, ("day = 1\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Equal" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Equal.exampleTime_Equal, ("datesEqualUsingEqualOperator = false\ndatesEqualUsingFunction = true\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_String" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_String.exampleTime_String, ("withNanoseconds = 2000-02-01 12:13:14.000000015 +0000 UTC\nwithoutNanoseconds = 2000-02-01 12:13:14 +0000 UTC\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_Sub" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_Sub.exampleTime_Sub, ("difference = 12h0m0s\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTime_AppendFormat" : stdgo.GoString), _internal.time_test.Time_test_exampleTime_AppendFormat.exampleTime_AppendFormat, ("Time: 11:00AM\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleFixedZone" : stdgo.GoString), _internal.time_test.Time_test_exampleFixedZone.exampleFixedZone, ("The time is: 10 Nov 09 23:00 UTC-8\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample)].concat([for (i in 35 ... (35 > 35 ? 35 : 35 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.testing.Testing_InternalExample.InternalExample)])) : stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample>);
