package _internal.time_test;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.tzdata.Tzdata;
var _goStringTests : stdgo.Slice<_internal.time_test.Time_test_T__struct_1.T__struct_1> = (new stdgo.Slice<_internal.time_test.Time_test_T__struct_1.T__struct_1>(4, 4, ...[({ _in : stdgo._internal.time.Time_date.date((2009 : stdgo.GoInt), (2 : stdgo._internal.time.Time_Month.Month), (5 : stdgo.GoInt), (5 : stdgo.GoInt), (0 : stdgo.GoInt), (57 : stdgo.GoInt), (12345600 : stdgo.GoInt), stdgo._internal.time.Time_utc.utc)?.__copy__(), _want : ("time.Date(2009, time.February, 5, 5, 0, 57, 12345600, time.UTC)" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_1.T__struct_1), ({ _in : stdgo._internal.time.Time_date.date((2009 : stdgo.GoInt), (2 : stdgo._internal.time.Time_Month.Month), (5 : stdgo.GoInt), (5 : stdgo.GoInt), (0 : stdgo.GoInt), (57 : stdgo.GoInt), (12345600 : stdgo.GoInt), stdgo._internal.time.Time_local.local)?.__copy__(), _want : ("time.Date(2009, time.February, 5, 5, 0, 57, 12345600, time.Local)" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_1.T__struct_1), ({ _in : stdgo._internal.time.Time_date.date((2009 : stdgo.GoInt), (2 : stdgo._internal.time.Time_Month.Month), (5 : stdgo.GoInt), (5 : stdgo.GoInt), (0 : stdgo.GoInt), (57 : stdgo.GoInt), (12345600 : stdgo.GoInt), stdgo._internal.time.Time_fixedZone.fixedZone(("Europe/Berlin" : stdgo.GoString), (10800 : stdgo.GoInt)))?.__copy__(), _want : ("time.Date(2009, time.February, 5, 5, 0, 57, 12345600, time.Location(\"Europe/Berlin\"))" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_1.T__struct_1), ({ _in : stdgo._internal.time.Time_date.date((2009 : stdgo.GoInt), (2 : stdgo._internal.time.Time_Month.Month), (5 : stdgo.GoInt), (5 : stdgo.GoInt), (0 : stdgo.GoInt), (57 : stdgo.GoInt), (12345600 : stdgo.GoInt), stdgo._internal.time.Time_fixedZone.fixedZone(("Non-ASCII character ⏰" : stdgo.GoString), (10800 : stdgo.GoInt)))?.__copy__(), _want : ("time.Date(2009, time.February, 5, 5, 0, 57, 12345600, time.Location(\"Non-ASCII character \\xe2\\x8f\\xb0\"))" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_1.T__struct_1)].concat([for (i in 4 ... (4 > 4 ? 4 : 4 : stdgo.GoInt).toBasic()) ({ _in : ({} : stdgo._internal.time.Time_Time.Time), _want : ("" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_1.T__struct_1)])) : stdgo.Slice<_internal.time_test.Time_test_T__struct_1.T__struct_1>);
