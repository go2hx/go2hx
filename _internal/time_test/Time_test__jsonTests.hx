package _internal.time_test;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.Time;
import stdgo._internal.time.tzdata.Tzdata;
var _jsonTests : stdgo.Slice<_internal.time_test.Time_test_T__struct_17.T__struct_17> = (new stdgo.Slice<_internal.time_test.Time_test_T__struct_17.T__struct_17>(4, 4, ...[({ _time : stdgo._internal.time.Time_date.date((9999 : stdgo.GoInt), (4 : stdgo._internal.time.Time_Month.Month), (12 : stdgo.GoInt), (23 : stdgo.GoInt), (20 : stdgo.GoInt), (50 : stdgo.GoInt), (520000000 : stdgo.GoInt), stdgo._internal.time.Time_utc.utc)?.__copy__(), _json : ("\"9999-04-12T23:20:50.52Z\"" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_17.T__struct_17), ({ _time : stdgo._internal.time.Time_date.date((1996 : stdgo.GoInt), (12 : stdgo._internal.time.Time_Month.Month), (19 : stdgo.GoInt), (16 : stdgo.GoInt), (39 : stdgo.GoInt), (57 : stdgo.GoInt), (0 : stdgo.GoInt), stdgo._internal.time.Time_local.local)?.__copy__(), _json : ("\"1996-12-19T16:39:57-08:00\"" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_17.T__struct_17), ({ _time : stdgo._internal.time.Time_date.date((0 : stdgo.GoInt), (1 : stdgo._internal.time.Time_Month.Month), (1 : stdgo.GoInt), (0 : stdgo.GoInt), (0 : stdgo.GoInt), (0 : stdgo.GoInt), (1 : stdgo.GoInt), stdgo._internal.time.Time_fixedZone.fixedZone(stdgo.Go.str()?.__copy__(), (60 : stdgo.GoInt)))?.__copy__(), _json : ("\"0000-01-01T00:00:00.000000001+00:01\"" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_17.T__struct_17), ({ _time : stdgo._internal.time.Time_date.date((2020 : stdgo.GoInt), (1 : stdgo._internal.time.Time_Month.Month), (1 : stdgo.GoInt), (0 : stdgo.GoInt), (0 : stdgo.GoInt), (0 : stdgo.GoInt), (0 : stdgo.GoInt), stdgo._internal.time.Time_fixedZone.fixedZone(stdgo.Go.str()?.__copy__(), (86340 : stdgo.GoInt)))?.__copy__(), _json : ("\"2020-01-01T00:00:00+23:59\"" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_17.T__struct_17)].concat([for (i in 4 ... (4 > 4 ? 4 : 4 : stdgo.GoInt).toBasic()) ({ _time : ({} : stdgo._internal.time.Time_Time.Time), _json : ("" : stdgo.GoString) } : _internal.time_test.Time_test_T__struct_17.T__struct_17)])) : stdgo.Slice<_internal.time_test.Time_test_T__struct_17.T__struct_17>);
