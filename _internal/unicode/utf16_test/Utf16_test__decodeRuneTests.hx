package _internal.unicode.utf16_test;
import stdgo._internal.unicode.utf16.Utf16;
var _decodeRuneTests : stdgo.Slice<_internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0> = (new stdgo.Slice<_internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0>(5, 5, ...[({ _r1 : (55296 : stdgo.GoInt32), _r2 : (56320 : stdgo.GoInt32), _want : (65536 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0), ({ _r1 : (55296 : stdgo.GoInt32), _r2 : (56321 : stdgo.GoInt32), _want : (65537 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0), ({ _r1 : (55304 : stdgo.GoInt32), _r2 : (57157 : stdgo.GoInt32), _want : (74565 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0), ({ _r1 : (56319 : stdgo.GoInt32), _r2 : (57343 : stdgo.GoInt32), _want : (1114111 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0), ({ _r1 : (55296 : stdgo.GoInt32), _r2 : (97 : stdgo.GoInt32), _want : (65533 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0)].concat([for (i in 5 ... (5 > 5 ? 5 : 5 : stdgo.GoInt).toBasic()) ({ _r1 : (0 : stdgo.GoInt32), _r2 : (0 : stdgo.GoInt32), _want : (0 : stdgo.GoInt32) } : _internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0)])) : stdgo.Slice<_internal.unicode.utf16_test.Utf16_test_T__struct_0.T__struct_0>);
