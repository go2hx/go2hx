package _internal.unicode.utf8_test;
import stdgo._internal.unicode.utf8.Utf8;
var _runecounttests : stdgo.Slice<_internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest> = (new stdgo.Slice<_internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest>(6, 6, ...[(new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(("abcd" : stdgo.GoString), (4 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest), (new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(("☺☻☹" : stdgo.GoString), (3 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest), (new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(("1,2,3,4" : stdgo.GoString), (7 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest), (new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(stdgo.Go.str(226, 0)?.__copy__(), (2 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest), (new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(stdgo.Go.str(226, 128)?.__copy__(), (2 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest), (new _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest(stdgo.Go.str("a", 226, 128)?.__copy__(), (3 : stdgo.GoInt)) : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({} : _internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest)])) : stdgo.Slice<_internal.unicode.utf8_test.Utf8_test_RuneCountTest.RuneCountTest>);
