package _internal.unicode_dot_test;
import stdgo._internal.unicode.Unicode;
var _examples : stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample> = (new stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample>(14, 14, ...[
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("Example_is" : stdgo.GoString), _internal.unicode_test.Unicode_test_example_is.example_is, ("For \'\\b\':\n\tis control rune\n\tis not printable rune\nFor \'5\':\n\tis digit rune\n\tis graphic rune\n\tis number rune\n\tis printable rune\nFor \'Ὂ\':\n\tis graphic rune\n\tis letter rune\n\tis printable rune\n\tis upper case rune\nFor \'g\':\n\tis graphic rune\n\tis letter rune\n\tis lower case rune\n\tis printable rune\nFor \'̀\':\n\tis graphic rune\n\tis mark rune\n\tis printable rune\nFor \'9\':\n\tis digit rune\n\tis graphic rune\n\tis number rune\n\tis printable rune\nFor \'!\':\n\tis graphic rune\n\tis printable rune\n\tis punct rune\nFor \' \':\n\tis graphic rune\n\tis printable rune\n\tis space rune\nFor \'℃\':\n\tis graphic rune\n\tis printable rune\n\tis symbol rune\nFor \'ᾭ\':\n\tis graphic rune\n\tis letter rune\n\tis printable rune\n\tis title case rune\nFor \'G\':\n\tis graphic rune\n\tis letter rune\n\tis printable rune\n\tis upper case rune\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleSimpleFold" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleSimpleFold.exampleSimpleFold, ("U+0061 \'a\'\nU+0041 \'A\'\nU+006B \'k\'\nU+212A \'K\'\nU+004B \'K\'\nU+0031 \'1\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleTo" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleTo.exampleTo, ("U+0047 \'G\'\nU+0067 \'g\'\nU+0047 \'G\'\nU+0047 \'G\'\nU+0067 \'g\'\nU+0047 \'G\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleToLower" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleToLower.exampleToLower, ("U+0067 \'g\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleToTitle" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleToTitle.exampleToTitle, ("U+0047 \'G\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleToUpper" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleToUpper.exampleToUpper, ("U+0047 \'G\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleSpecialCase" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleSpecialCase.exampleSpecialCase, ("U+0069 \'i\'\nU+0130 \'İ\'\nU+0130 \'İ\'\nU+0069 \'i\'\nU+0130 \'İ\'\nU+0130 \'İ\'\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsDigit" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsDigit.exampleIsDigit, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsNumber" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsNumber.exampleIsNumber, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsLetter" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsLetter.exampleIsLetter, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsLower" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsLower.exampleIsLower, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsUpper" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsUpper.exampleIsUpper, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsTitle" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsTitle.exampleIsTitle, ("true\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample),
(new stdgo._internal.testing.Testing_InternalExample.InternalExample(("ExampleIsSpace" : stdgo.GoString), _internal.unicode_test.Unicode_test_exampleIsSpace.exampleIsSpace, ("true\ntrue\ntrue\nfalse\n" : stdgo.GoString), false) : stdgo._internal.testing.Testing_InternalExample.InternalExample)].concat([for (i in 14 ... (14 > 14 ? 14 : 14 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.testing.Testing_InternalExample.InternalExample)])) : stdgo.Slice<stdgo._internal.testing.Testing_InternalExample.InternalExample>);
