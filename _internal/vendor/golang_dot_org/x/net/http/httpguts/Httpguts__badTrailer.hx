package _internal.vendor.golang_dot_org.x.net.http.httpguts;
var _badTrailer : stdgo.GoMap<stdgo.GoString, Bool> = ({
        final x = new stdgo.GoMap.GoStringMap<Bool>();
        x.__defaultValue__ = () -> false;
        x.set(("Authorization" : stdgo.GoString), true);
x.set(("Cache-Control" : stdgo.GoString), true);
x.set(("Connection" : stdgo.GoString), true);
x.set(("Content-Encoding" : stdgo.GoString), true);
x.set(("Content-Length" : stdgo.GoString), true);
x.set(("Content-Range" : stdgo.GoString), true);
x.set(("Content-Type" : stdgo.GoString), true);
x.set(("Expect" : stdgo.GoString), true);
x.set(("Host" : stdgo.GoString), true);
x.set(("Keep-Alive" : stdgo.GoString), true);
x.set(("Max-Forwards" : stdgo.GoString), true);
x.set(("Pragma" : stdgo.GoString), true);
x.set(("Proxy-Authenticate" : stdgo.GoString), true);
x.set(("Proxy-Authorization" : stdgo.GoString), true);
x.set(("Proxy-Connection" : stdgo.GoString), true);
x.set(("Range" : stdgo.GoString), true);
x.set(("Realm" : stdgo.GoString), true);
x.set(("Te" : stdgo.GoString), true);
x.set(("Trailer" : stdgo.GoString), true);
x.set(("Transfer-Encoding" : stdgo.GoString), true);
x.set(("Www-Authenticate" : stdgo.GoString), true);
        x;
    } : stdgo.GoMap<stdgo.GoString, Bool>);
