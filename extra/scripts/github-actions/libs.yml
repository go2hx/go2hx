timeout-minutes: 75
needs: setup
runs-on: ubuntu-latest
steps:
  - uses: actions/checkout@v4
    with:
      submodules: recursive
::support::
  # Get the cores 
  - name: Get number of cores (Ubuntu)
    if: startsWith(runner.os, 'Linux')
    run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
  - name: Get number of cores (macOS)
    if: startsWith(runner.os, 'macOS')
    run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
  - name: Install lix
    run: npm i lix -g
  - name: Run lix
    run: npx lix download
  # go2hx setup
  - name: Clean std
    run: npx haxe --run Run clean
  - name: Build go2hx compiler
    run: npx haxe --run Run build
  - name: Set source
    run: npx haxelib dev go2hx .
  - uses: actions/cache/restore@v4
    id: setup-cache
    with:
      path: |
        TypeInfoData_go2hx_hxb.hx
        ./_internal/*
        ./go2hx.*.zip 
        export
        golibs
      key: ${{ github.sha }}-build-${{ env.cache-name }}
  - name: Run lib tests
    run: haxe tests/tests.hxml -D libs -D ci -D runnerCount=${{ env.CORES }} -D target=::target:: #-D hxb
  - uses: EndBug/add-and-commit@v9
    with:
        message: libs tests update ::target::
        add: ./tests
        pull: --rebase --autostash
    continue-on-error: true
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'