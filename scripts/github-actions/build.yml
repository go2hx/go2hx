
timeout-minutes: 26
needs: setup
strategy:
  fail-fast: false
runs-on: [ubuntu-latest]
steps:
  - uses: actions/checkout@v3
  # Get the cores 
  - name: Get number of cores (Ubuntu)
    if: startsWith(runner.os, 'Linux')
    run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
  - name: Get number of cores (macOS)
    if: startsWith(runner.os, 'macOS')
    run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
  # non self-host setup
    continue-on-error: true
  - uses: actions/setup-go@v3
    continue-on-error: true
    with:
      go-version: '1.21.3' # The Go version to download (if necessary) and use.
::support::
  - name: Install lix
    run: npm i lix -g
  - name: Run lix
    run: npx lix download
  # go2hx setup
  - name: Build go2hx compiler
    run: npx haxe --run Run build
  - name: Set source
    run: haxelib dev go2hx .
  # clean stdgo
  - uses: actions/cache/restore@v4
    id: setup-cache
    with:
      path: |
        TypeInfoData_go2hx_hxb.hx
        ./_internal/*
        ./stdgo/*
        ./go2hx.*.zip 
      key: ${{ github.sha }}-build-${{ env.cache-name }}
  - run: ls
  # compile stdgo
  #- name: Run stdgo automatic compile
  #  run: npx haxe scripts/stdgo.hxml -D runnerCount=${{ env.CORES }}
  - name: Run unit
    run: npx haxe tests/tests.hxml -D unit -D ci -D runnerCount=${{ env.CORES }} -D targets=::target:: #-D hxb
  - name: Pull latest
    run: git pull https://github.com/go2hx/go2hx master --force
  - uses: stefanzweifel/git-auto-commit-action@v5
    with:
        commit_message: build unit tests update ::target::
        file_pattern: '*.json *.md'
        disable_globbing: true
  - name: Run std
    run: npx haxe tests/tests.hxml -D std -D ci -D runnerCount=${{ env.CORES }} -D targets=::target::  #-D hxb
  - name: Pull latest
    run: git pull https://github.com/go2hx/go2hx master --force
  - uses: stefanzweifel/git-auto-commit-action@v5
    with:
        commit_message: build std tests update ::target::
        file_pattern: '*.json *.md'
        disable_globbing: true