timeout-minutes: 25
needs: setup
runs-on: ubuntu-latest
steps:
  - uses: actions/checkout@v3
  - uses: actions/setup-go@v3
    with:
      go-version: '1.21.3' # The Go version to download (if necessary) and use.
::support::
  # Get the cores 
  - name: Get number of cores (Ubuntu)
    if: startsWith(runner.os, 'Linux')
    run: echo "CORES=$(nproc --all)" >> $GITHUB_ENV
  - name: Get number of cores (macOS)
    if: startsWith(runner.os, 'macOS')
    run: echo "CORES=$(sysctl -n hw.logicalcpu)" >> $GITHUB_ENV
  - name: Install lix
    run: npm i lix -g
  - name: Run lix
    run: npx lix download
  # go2hx setup
  - name: Build go2hx compiler
    run: npx haxe --run Run build
  - name: Set source
    run: npx haxelib dev go2hx .
  - uses: actions/cache/restore@v4
    id: setup-cache
    with:
      path: |
        TypeInfoData_go2hx_hxb.hx
        ./_internal/*
        ./stdgo/*
        ./go2hx.*.zip 
      key: ${{ github.sha }}-build-${{ env.cache-name }}
  # run yaegi medium tests
  - name: clone yaegi
    run: git clone https://github.com/traefik/yaegi -b v0.16.1 --depth=1 ./tests/yaegi
  - name: Sort tests
    run: go run ./scripts/sortTests ci
  - name: Run yaegi medium tests
    run: npx haxe tests/tests.hxml -D yaegi -D ci -D mode=medium -D runnerCount=${{ env.CORES }} -D targets=::target:: #-D hxb
  - name: Report results
    run: npx haxe tests/tests.hxml -D yaegi -D ci -D mode=medium -D report -D runnerCount=${{ env.CORES }} -D targets=::target:: #-D hxb
  - name: Remove stdgo folder
    run: rm -r -d stdgo
  - name: Remove _internal folder
    run: rm -r -d _internal
  - name: Remove hxb zips
    run: rm go2hx.*.zip
  # git pull latest
  - name: Pull latest
    run: git pull https://github.com/go2hx/go2hx
  # add yaegi_medium.json regression 
  - uses: stefanzweifel/git-auto-commit-action@v5
    with:
        commit_message: yaegi medium tests update ::target::
        file_pattern: '*.json'
        disable_globbing: true