package stdgo._internal.compress.flate;
function _newHuffmanBitWriter(_w:stdgo._internal.io.Io_writer.Writer):stdgo.Ref<stdgo._internal.compress.flate.Flate_t_huffmanbitwriter.T_huffmanBitWriter> {
        return (stdgo.Go.setRef(({ _writer : _w, _literalFreq : (new stdgo.Slice<stdgo.GoInt32>((286 : stdgo.GoInt).toBasic(), 0).__setNumber32__() : stdgo.Slice<stdgo.GoInt32>), _offsetFreq : (new stdgo.Slice<stdgo.GoInt32>((30 : stdgo.GoInt).toBasic(), 0).__setNumber32__() : stdgo.Slice<stdgo.GoInt32>), _codegen : (new stdgo.Slice<stdgo.GoUInt8>((317 : stdgo.GoInt).toBasic(), 0).__setNumber32__() : stdgo.Slice<stdgo.GoUInt8>), _literalEncoding : stdgo._internal.compress.flate.Flate__newhuffmanencoder._newHuffmanEncoder((286 : stdgo.GoInt)), _codegenEncoding : stdgo._internal.compress.flate.Flate__newhuffmanencoder._newHuffmanEncoder((19 : stdgo.GoInt)), _offsetEncoding : stdgo._internal.compress.flate.Flate__newhuffmanencoder._newHuffmanEncoder((30 : stdgo.GoInt)) } : stdgo._internal.compress.flate.Flate_t_huffmanbitwriter.T_huffmanBitWriter)) : stdgo.Ref<stdgo._internal.compress.flate.Flate_t_huffmanbitwriter.T_huffmanBitWriter>);
    }
