package stdgo._internal.crypto.internal.alias;
function anyOverlap(_x:stdgo.Slice<stdgo.GoUInt8>, _y:stdgo.Slice<stdgo.GoUInt8>):Bool {
        return (((((_x.length) > (0 : stdgo.GoInt) : Bool) && ((_y.length) > (0 : stdgo.GoInt) : Bool) : Bool) && ((new stdgo.GoUIntptr((stdgo.Go.toInterface(stdgo.Go.pointer(_x[(0 : stdgo.GoInt)])) : stdgo._internal.unsafe.Unsafe.UnsafePointer)) : stdgo.GoUIntptr) <= (new stdgo.GoUIntptr((stdgo.Go.toInterface(stdgo.Go.pointer(_y[((_y.length) - (1 : stdgo.GoInt) : stdgo.GoInt)])) : stdgo._internal.unsafe.Unsafe.UnsafePointer)) : stdgo.GoUIntptr) : Bool) : Bool) && ((new stdgo.GoUIntptr((stdgo.Go.toInterface(stdgo.Go.pointer(_y[(0 : stdgo.GoInt)])) : stdgo._internal.unsafe.Unsafe.UnsafePointer)) : stdgo.GoUIntptr) <= (new stdgo.GoUIntptr((stdgo.Go.toInterface(stdgo.Go.pointer(_x[((_x.length) - (1 : stdgo.GoInt) : stdgo.GoInt)])) : stdgo._internal.unsafe.Unsafe.UnsafePointer)) : stdgo.GoUIntptr) : Bool) : Bool);
    }
