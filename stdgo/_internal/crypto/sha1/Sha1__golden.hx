package stdgo._internal.crypto.sha1;
var _golden : stdgo.Slice<stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test> = (new stdgo.Slice<stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test>(32, 32, ...[
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("76245dbf96f661bd221046197ab8b9f063f11bad" : stdgo.GoString), ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"\x0B",
160,
")I",
222,
"q(8h",
158,
"v",
229,
136,
"[",
248,
129,
23,
186,
"4Daaaaaaaaaaaaaaaaaaaaaa",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
150) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("da39a3ee5e6b4b0d3255bfef95601890afd80709" : stdgo.GoString), (stdgo.Go.str() : stdgo.GoString)?.__copy__(), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" : stdgo.GoString), ("a" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("da23614e02469a0d7c7bd1bdab5c9c474b1904dc" : stdgo.GoString), ("ab" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"a",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("a9993e364706816aba3e25717850c26c9cd0d89d" : stdgo.GoString), ("abc" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"a",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("81fe8bfe87576c3ecb22426f8e57847382917acf" : stdgo.GoString), ("abcd" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"ab",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
2) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("03de6c570bfe24bfc328ccd7ca46b76eadaf4334" : stdgo.GoString), ("abcde" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"ab",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
2) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("1f8ac10f23c5b5bc1167bda84b833e5c057a77d2" : stdgo.GoString), ("abcdef" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"abc",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
3) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("2fb5e13419fc89246865e7a324f476ec624e8740" : stdgo.GoString), ("abcdefg" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"abc",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
3) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("425af12a0743502b322e93a015bcf868e324d56a" : stdgo.GoString), ("abcdefgh" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"abcd",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
4) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("c63b19f1e4c8b5f76b25c49b8b87f57d8e4872a1" : stdgo.GoString), ("abcdefghi" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"abcd",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
4) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("d68c19a0a345b7eab78d5e11e991c026ec60db63" : stdgo.GoString), ("abcdefghij" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"abcde",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
5) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("ebf81ddcbe5bf13aaabdc4d65354fdf2044f38a7" : stdgo.GoString), ("Discard medicine more than two years old." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"Discard medicine mor",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
20) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("e5dea09392dd886ca63531aaa00571dc07554bb6" : stdgo.GoString), ("He who has a shady past knows that nice guys finish last." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"He who has a shady past know",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
28) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("45988f7234467b94e3e9494434c96ee3609d8f8f" : stdgo.GoString), ("I wouldn\'t marry him with a ten foot pole." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"I wouldn\'t marry him ",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
21) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("55dee037eb7460d5a692d1ce11330b260e40c988" : stdgo.GoString), ("Free! Free!/A trip/to Mars/for 900/empty jars/Burma Shave" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"Free! Free!/A trip/to Mars/f",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
28) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("b7bc5fb91080c7de6b582ea281f8a396d7c0aee8" : stdgo.GoString), ("The days of the digital watch are numbered.  -Tom Stoppard" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"The days of the digital watch",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
29) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("c3aed9358f7c77f523afe86135f06b95b3999797" : stdgo.GoString), ("Nepal premier won\'t resign." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"Nepal premier",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"\r") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("6e29d302bf6e3a5e4305ff318d983197d6906bb9" : stdgo.GoString), ("For every action there is an equal and opposite government program." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"For every action there is an equa",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"!") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("597f6a540010f94c15d71806a99a2c8710e747bd" : stdgo.GoString), ("His money is twice tainted: \'taint yours and \'taint mine." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"His money is twice tainted: ",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
28) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("6859733b2590a8a091cecf50086febc5ceef1e80" : stdgo.GoString), ("There is no reason for any individual to have a computer in their home. -Ken Olsen, 1977" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"There is no reason for any individual to hav",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
",") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("514b2630ec089b8aee18795fc0cf1f4860cdacad" : stdgo.GoString), ("It\'s a tiny change to the code and not completely disgusting. - Bob Manchek" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"It\'s a tiny change to the code and no",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"%") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("c5ca0d4a7b6676fc7aa72caa41cc3d5df567ed69" : stdgo.GoString), ("size:  a.out:  bad magic" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"size:  a.out",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"\x0C") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("74c51fa9a04eadc8c1bbeaa7fc442f834b90a00a" : stdgo.GoString), ("The major problem is with sendmail.  -Mark Horton" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"The major problem is wit",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
24) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("0b4c4ce5f52c3ad2821852a8dc00217fa18b8b66" : stdgo.GoString), ("Give me a rock, paper and scissors and I will move the world.  CCFestoon" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"Give me a rock, paper and scissors a",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"$") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("3ae7937dd790315beb0f48330e8642237c61550a" : stdgo.GoString), ("If the enemy is within range, then so are you." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"If the enemy is within ",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
23) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("410a2b296df92b9a47412b13281df8f830a9f44b" : stdgo.GoString), ("It\'s well we cannot hear the screams/That we create in others\' dreams." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"It\'s well we cannot hear the scream",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"#") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("841e7c85ca1adcddbdd0187f1289acb5c642f7f5" : stdgo.GoString), ("You remind me of a TV show, but that\'s all right: I watch it anyway." : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"You remind me of a TV show, but th",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"\"") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("163173b825d03b952601376b25212df66763e1db" : stdgo.GoString), ("C is as portable as Stonehedge!!" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"C is as portable",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
16) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("32b0377f2687eb88e22106f133c586ab314d5279" : stdgo.GoString), ("Even if I could be Shakespeare, I think I should still choose to be Faraday. - A. Huxley" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"Even if I could be Shakespeare, I think I sh",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
",") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("0885aaf99b569542fd165fa44e322718f4a984e0" : stdgo.GoString), ("The fugacity of a constituent in a mixture of gases at a given temperature is proportional to its mole fraction.  Lewis-Randall Rule" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"x}",
244,
"\r",
235,
242,
16,
135,
232,
"[",
178,
"JA$D",
183,
"غx8em",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
"B") : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test),
(new stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test(("6627d6904d71420b0bf3886ab629623538689f45" : stdgo.GoString), ("How can you write a big system without C++?  -Paul Glick" : stdgo.GoString), (stdgo.Go.str("sha",
1,
"gE#",
1,
239,
"ͫ",
137,
152,
186,
220,
254,
16,
"2Tv",
195,
210,
225,
240,
"How can you write a big syst",
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
28) : stdgo.GoString)?.__copy__()) : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test)].concat([for (i in 32 ... (32 > 32 ? 32 : 32 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test)])) : stdgo.Slice<stdgo._internal.crypto.sha1.Sha1_t_sha1test.T_sha1Test>);
