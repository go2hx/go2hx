package stdgo._internal.crypto.tls;
@:keep class T_keyAgreement_static_extension {
    static public function _generateClientKeyExchange(t:stdgo._internal.crypto.tls.Tls_T_keyAgreement.T_keyAgreement, _0:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Config.Config>, _1:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientHelloMsg.T_clientHelloMsg>, _2:stdgo.Ref<stdgo._internal.crypto.x509.X509_Certificate.Certificate>):{ var _0 : stdgo.Slice<stdgo.GoUInt8>; var _1 : stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientKeyExchangeMsg.T_clientKeyExchangeMsg>; var _2 : stdgo.Error; } return t._generateClientKeyExchange(_0, _1, _2);
    static public function _processServerKeyExchange(t:stdgo._internal.crypto.tls.Tls_T_keyAgreement.T_keyAgreement, _0:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Config.Config>, _1:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientHelloMsg.T_clientHelloMsg>, _2:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_serverHelloMsg.T_serverHelloMsg>, _3:stdgo.Ref<stdgo._internal.crypto.x509.X509_Certificate.Certificate>, _4:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_serverKeyExchangeMsg.T_serverKeyExchangeMsg>):stdgo.Error return t._processServerKeyExchange(_0, _1, _2, _3, _4);
    static public function _processClientKeyExchange(t:stdgo._internal.crypto.tls.Tls_T_keyAgreement.T_keyAgreement, _0:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Config.Config>, _1:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Certificate.Certificate>, _2:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientKeyExchangeMsg.T_clientKeyExchangeMsg>, _3:stdgo.GoUInt16):{ var _0 : stdgo.Slice<stdgo.GoUInt8>; var _1 : stdgo.Error; } return t._processClientKeyExchange(_0, _1, _2, _3);
    static public function _generateServerKeyExchange(t:stdgo._internal.crypto.tls.Tls_T_keyAgreement.T_keyAgreement, _0:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Config.Config>, _1:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Certificate.Certificate>, _2:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientHelloMsg.T_clientHelloMsg>, _3:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_serverHelloMsg.T_serverHelloMsg>):{ var _0 : stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_serverKeyExchangeMsg.T_serverKeyExchangeMsg>; var _1 : stdgo.Error; } return t._generateServerKeyExchange(_0, _1, _2, _3);
}
