package stdgo._internal.crypto.tls;
var _alertText : stdgo.GoMap<stdgo._internal.crypto.tls.Tls_t_alert.T_alert, stdgo.GoString> = ({
        final x = new stdgo.GoMap.GoIntMap<stdgo.GoString>();
        x.__defaultValue__ = () -> ("" : stdgo.GoString);
        x.set((0 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("close notify" : stdgo.GoString));
x.set((10 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unexpected message" : stdgo.GoString));
x.set((20 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("bad record MAC" : stdgo.GoString));
x.set((21 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("decryption failed" : stdgo.GoString));
x.set((22 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("record overflow" : stdgo.GoString));
x.set((30 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("decompression failure" : stdgo.GoString));
x.set((40 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("handshake failure" : stdgo.GoString));
x.set((42 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("bad certificate" : stdgo.GoString));
x.set((43 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unsupported certificate" : stdgo.GoString));
x.set((44 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("revoked certificate" : stdgo.GoString));
x.set((45 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("expired certificate" : stdgo.GoString));
x.set((46 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unknown certificate" : stdgo.GoString));
x.set((47 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("illegal parameter" : stdgo.GoString));
x.set((48 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unknown certificate authority" : stdgo.GoString));
x.set((49 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("access denied" : stdgo.GoString));
x.set((50 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("error decoding message" : stdgo.GoString));
x.set((51 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("error decrypting message" : stdgo.GoString));
x.set((60 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("export restriction" : stdgo.GoString));
x.set((70 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("protocol version not supported" : stdgo.GoString));
x.set((71 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("insufficient security level" : stdgo.GoString));
x.set((80 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("internal error" : stdgo.GoString));
x.set((86 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("inappropriate fallback" : stdgo.GoString));
x.set((90 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("user canceled" : stdgo.GoString));
x.set((100 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("no renegotiation" : stdgo.GoString));
x.set((109 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("missing extension" : stdgo.GoString));
x.set((110 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unsupported extension" : stdgo.GoString));
x.set((111 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("certificate unobtainable" : stdgo.GoString));
x.set((112 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unrecognized name" : stdgo.GoString));
x.set((113 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("bad certificate status response" : stdgo.GoString));
x.set((114 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("bad certificate hash value" : stdgo.GoString));
x.set((115 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("unknown PSK identity" : stdgo.GoString));
x.set((116 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("certificate required" : stdgo.GoString));
x.set((120 : stdgo._internal.crypto.tls.Tls_t_alert.T_alert), ("no application protocol" : stdgo.GoString));
        x;
    } : stdgo.GoMap<stdgo._internal.crypto.tls.Tls_t_alert.T_alert, stdgo.GoString>);
