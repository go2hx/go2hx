package stdgo._internal.crypto.tls;
function _clientHelloInfo(_ctx:stdgo._internal.context.Context_Context.Context, _c:stdgo.Ref<stdgo._internal.crypto.tls.Tls_Conn.Conn>, _clientHello:stdgo.Ref<stdgo._internal.crypto.tls.Tls_T_clientHelloMsg.T_clientHelloMsg>):stdgo.Ref<stdgo._internal.crypto.tls.Tls_ClientHelloInfo.ClientHelloInfo> {
        var _supportedVersions = (@:checkr _clientHello ?? throw "null pointer dereference")._supportedVersions;
        if (((@:checkr _clientHello ?? throw "null pointer dereference")._supportedVersions.length) == ((0 : stdgo.GoInt))) {
            _supportedVersions = stdgo._internal.crypto.tls.Tls__supportedVersionsFromMax._supportedVersionsFromMax((@:checkr _clientHello ?? throw "null pointer dereference")._vers);
        };
        return (stdgo.Go.setRef(({ cipherSuites : (@:checkr _clientHello ?? throw "null pointer dereference")._cipherSuites, serverName : (@:checkr _clientHello ?? throw "null pointer dereference")._serverName?.__copy__(), supportedCurves : (@:checkr _clientHello ?? throw "null pointer dereference")._supportedCurves, supportedPoints : (@:checkr _clientHello ?? throw "null pointer dereference")._supportedPoints, signatureSchemes : (@:checkr _clientHello ?? throw "null pointer dereference")._supportedSignatureAlgorithms, supportedProtos : (@:checkr _clientHello ?? throw "null pointer dereference")._alpnProtocols, supportedVersions : _supportedVersions, conn : (@:checkr _c ?? throw "null pointer dereference")._conn, _config : (@:checkr _c ?? throw "null pointer dereference")._config, _ctx : _ctx } : stdgo._internal.crypto.tls.Tls_ClientHelloInfo.ClientHelloInfo)) : stdgo.Ref<stdgo._internal.crypto.tls.Tls_ClientHelloInfo.ClientHelloInfo>);
    }
