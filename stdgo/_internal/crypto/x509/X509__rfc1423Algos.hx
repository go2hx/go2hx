package stdgo._internal.crypto.x509;
import stdgo._internal.crypto.des.Des;
import stdgo._internal.crypto.aes.Aes;
import stdgo._internal.errors.Errors;
import stdgo._internal.internal.godebug.Godebug;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.unicode.utf16.Utf16;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.encoding.asn1.Asn1;
import stdgo._internal.crypto.elliptic.Elliptic;
import stdgo._internal.crypto.ecdh.Ecdh;
import stdgo._internal.net.url.Url;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.strings.Strings;
import stdgo._internal.net.Net;
import stdgo._internal.encoding.hex.Hex;
import stdgo._internal.crypto.cipher.Cipher;
import stdgo._internal.io.Io;
import stdgo._internal.crypto.ed25519.Ed25519;
import stdgo._internal.os.Os;
import stdgo._internal.path.filepath.Filepath;
import stdgo._internal.crypto.rsa.Rsa;
import stdgo._internal.crypto.ecdsa.Ecdsa;
import stdgo._internal.crypto.sha1.Sha1;
import stdgo._internal.encoding.pem.Pem;
import stdgo._internal.crypto.sha256.Sha256;
import stdgo._internal.crypto.md5.Md5;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.time.Time;
var _rfc1423Algos : stdgo.Slice<stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo> = (new stdgo.Slice<stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo>(5, 5, ...[({ _cipher : (1 : stdgo._internal.crypto.x509.X509_PEMCipher.PEMCipher), _name : ("DES-CBC" : stdgo.GoString), _cipherFunc : stdgo._internal.crypto.des.Des_newCipher.newCipher, _keySize : (8 : stdgo.GoInt), _blockSize : (8 : stdgo.GoInt) } : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo), ({ _cipher : (2 : stdgo._internal.crypto.x509.X509_PEMCipher.PEMCipher), _name : ("DES-EDE3-CBC" : stdgo.GoString), _cipherFunc : stdgo._internal.crypto.des.Des_newTripleDESCipher.newTripleDESCipher, _keySize : (24 : stdgo.GoInt), _blockSize : (8 : stdgo.GoInt) } : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo), ({ _cipher : (3 : stdgo._internal.crypto.x509.X509_PEMCipher.PEMCipher), _name : ("AES-128-CBC" : stdgo.GoString), _cipherFunc : stdgo._internal.crypto.aes.Aes_newCipher.newCipher, _keySize : (16 : stdgo.GoInt), _blockSize : (16 : stdgo.GoInt) } : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo), ({ _cipher : (4 : stdgo._internal.crypto.x509.X509_PEMCipher.PEMCipher), _name : ("AES-192-CBC" : stdgo.GoString), _cipherFunc : stdgo._internal.crypto.aes.Aes_newCipher.newCipher, _keySize : (24 : stdgo.GoInt), _blockSize : (16 : stdgo.GoInt) } : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo), ({ _cipher : (5 : stdgo._internal.crypto.x509.X509_PEMCipher.PEMCipher), _name : ("AES-256-CBC" : stdgo.GoString), _cipherFunc : stdgo._internal.crypto.aes.Aes_newCipher.newCipher, _keySize : (32 : stdgo.GoInt), _blockSize : (16 : stdgo.GoInt) } : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo)].concat([for (i in 5 ... (5 > 5 ? 5 : 5 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo)])) : stdgo.Slice<stdgo._internal.crypto.x509.X509_T_rfc1423Algo.T_rfc1423Algo>);
