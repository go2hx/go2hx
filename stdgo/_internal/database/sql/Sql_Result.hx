package stdgo._internal.database.sql;
import stdgo._internal.errors.Errors;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.time.Time;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.database.sql.driver.Driver;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.sort.Sort;
import stdgo._internal.context.Context;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.io.Io;
@:interface typedef Result = stdgo.StructType & {
    /**
        LastInsertId returns the integer generated by the database
        in response to a command. Typically this will be from an
        "auto increment" column when inserting a new row. Not all
        databases support this feature, and the syntax of such
        statements varies.
        
        
    **/
    @:interfacetypeffun
    public dynamic function lastInsertId():{ var _0 : stdgo.GoInt64; var _1 : stdgo.Error; };
    /**
        RowsAffected returns the number of rows affected by an
        update, insert, or delete. Not every database or database
        driver may support this.
        
        
    **/
    @:interfacetypeffun
    public dynamic function rowsAffected():{ var _0 : stdgo.GoInt64; var _1 : stdgo.Error; };
};
