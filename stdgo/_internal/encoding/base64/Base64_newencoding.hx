package stdgo._internal.encoding.base64;
function newEncoding(_encoder:stdgo.GoString):stdgo.Ref<stdgo._internal.encoding.base64.Base64_encoding.Encoding> {
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L62"
        if ((_encoder.length) != ((64 : stdgo.GoInt))) {
            //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L63"
            throw stdgo.Go.toInterface(("encoding alphabet is not 64-bytes long" : stdgo.GoString));
        };
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L65"
        {
            var _i = (0 : stdgo.GoInt);
            while ((_i < (_encoder.length) : Bool)) {
                //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L66"
                if (((_encoder[(_i : stdgo.GoInt)] == (10 : stdgo.GoUInt8)) || (_encoder[(_i : stdgo.GoInt)] == (13 : stdgo.GoUInt8)) : Bool)) {
                    //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L67"
                    throw stdgo.Go.toInterface(("encoding alphabet contains newline character" : stdgo.GoString));
                };
                _i++;
            };
        };
        var _e = (stdgo.Go.setRef(({} : stdgo._internal.encoding.base64.Base64_encoding.Encoding)) : stdgo.Ref<stdgo._internal.encoding.base64.Base64_encoding.Encoding>);
        (@:checkr _e ?? throw "null pointer dereference")._padChar = (61 : stdgo.GoInt32);
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L73"
        ((@:checkr _e ?? throw "null pointer dereference")._encode.__slice__(0) : stdgo.Slice<stdgo.GoUInt8>).__copyTo__(_encoder);
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L74"
        ((@:checkr _e ?? throw "null pointer dereference")._decodeMap.__slice__(0) : stdgo.Slice<stdgo.GoUInt8>).__copyTo__((stdgo.Go.str(255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255,
255) : stdgo.GoString));
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L76"
        {
            var _i = (0 : stdgo.GoInt);
            while ((_i < (_encoder.length) : Bool)) {
                (@:checkr _e ?? throw "null pointer dereference")._decodeMap[(_encoder[(_i : stdgo.GoInt)] : stdgo.GoInt)] = (_i : stdgo.GoUInt8);
                _i++;
            };
        };
        //"file:///home/runner/.go/go1.21.3/src/encoding/base64/base64.go#L79"
        return _e;
    }
