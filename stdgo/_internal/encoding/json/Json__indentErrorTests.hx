package stdgo._internal.encoding.json;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.errors.Errors;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.time.Time;
import stdgo._internal.strings.Strings;
import stdgo._internal.math.Math;
import stdgo._internal.regexp.Regexp;
import stdgo._internal.os.Os;
import stdgo._internal.compress.gzip.Gzip;
import stdgo._internal.io.Io;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.internal.testenv.Testenv;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.unicode.utf16.Utf16;
import stdgo._internal.math.big.Big;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.encoding.base64.Base64;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.sort.Sort;
import stdgo._internal.runtime.debug.Debug;
import stdgo._internal.testing.Testing;
import stdgo._internal.log.Log;
import stdgo._internal.math.rand.Rand;
import stdgo._internal.net.Net;
import stdgo._internal.net.http.httptest.Httptest;
import stdgo._internal.net.http.Http;
var _indentErrorTests : stdgo.Slice<stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest> = (new stdgo.Slice<stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest>(2, 2, ...[(new stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest(("{\"X\": \"foo\", \"Y\"}" : stdgo.GoString), stdgo.Go.asInterface((stdgo.Go.setRef((new stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError(("invalid character \'}\' after object key" : stdgo.GoString), (17i64 : stdgo.GoInt64)) : stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError)) : stdgo.Ref<stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError>))) : stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest), (new stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest(("{\"X\": \"foo\" \"Y\": \"bar\"}" : stdgo.GoString), stdgo.Go.asInterface((stdgo.Go.setRef((new stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError(("invalid character \'\"\' after object key:value pair" : stdgo.GoString), (13i64 : stdgo.GoInt64)) : stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError)) : stdgo.Ref<stdgo._internal.encoding.json.Json_SyntaxError.SyntaxError>))) : stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest)])) : stdgo.Slice<stdgo._internal.encoding.json.Json_T_indentErrorTest.T_indentErrorTest>);
