package stdgo._internal.encoding.json;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.errors.Errors;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.time.Time;
import stdgo._internal.strings.Strings;
import stdgo._internal.math.Math;
import stdgo._internal.regexp.Regexp;
import stdgo._internal.os.Os;
import stdgo._internal.compress.gzip.Gzip;
import stdgo._internal.io.Io;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.internal.testenv.Testenv;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.unicode.utf16.Utf16;
import stdgo._internal.math.big.Big;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.encoding.base64.Base64;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.sort.Sort;
import stdgo._internal.runtime.debug.Debug;
import stdgo._internal.testing.Testing;
import stdgo._internal.log.Log;
import stdgo._internal.math.rand.Rand;
import stdgo._internal.net.Net;
import stdgo._internal.net.http.httptest.Httptest;
import stdgo._internal.net.http.Http;
var _numberTests : stdgo.Slice<stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7> = (new stdgo.Slice<stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7>(3, 3, ...[({ _in : ("-1.23e1" : stdgo.GoString), _intErr : ("strconv.ParseInt: parsing \"-1.23e1\": invalid syntax" : stdgo.GoString), _f : (-12.3 : stdgo.GoFloat64), _i : (0 : stdgo.GoInt64), _floatErr : ("" : stdgo.GoString) } : stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7), ({ _in : ("-12" : stdgo.GoString), _i : (-12i64 : stdgo.GoInt64), _f : (-12 : stdgo.GoFloat64), _intErr : ("" : stdgo.GoString), _floatErr : ("" : stdgo.GoString) } : stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7), ({ _in : ("1e1000" : stdgo.GoString), _intErr : ("strconv.ParseInt: parsing \"1e1000\": invalid syntax" : stdgo.GoString), _floatErr : ("strconv.ParseFloat: parsing \"1e1000\": value out of range" : stdgo.GoString), _i : (0 : stdgo.GoInt64), _f : (0 : stdgo.GoFloat64) } : stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({ _in : ("" : stdgo.GoString), _i : (0 : stdgo.GoInt64), _intErr : ("" : stdgo.GoString), _f : (0 : stdgo.GoFloat64), _floatErr : ("" : stdgo.GoString) } : stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7)])) : stdgo.Slice<stdgo._internal.encoding.json.Json_T__struct_7.T__struct_7>);
