package stdgo._internal.encoding.json;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.errors.Errors;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.time.Time;
import stdgo._internal.strings.Strings;
import stdgo._internal.math.Math;
import stdgo._internal.regexp.Regexp;
import stdgo._internal.os.Os;
import stdgo._internal.compress.gzip.Gzip;
import stdgo._internal.io.Io;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.internal.testenv.Testenv;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.unicode.utf16.Utf16;
import stdgo._internal.math.big.Big;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.encoding.base64.Base64;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.sort.Sort;
import stdgo._internal.runtime.debug.Debug;
import stdgo._internal.testing.Testing;
import stdgo._internal.log.Log;
import stdgo._internal.math.rand.Rand;
import stdgo._internal.net.Net;
import stdgo._internal.net.http.httptest.Httptest;
import stdgo._internal.net.http.Http;
var _wrongStringTests : stdgo.Slice<stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest> = (new stdgo.Slice<stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest>(6, 6, ...[(new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":\"x\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"x\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":\"foo\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"foo\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":\"123\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"123\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":123}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal unquoted value into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":\"\\\"\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"\\\"\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest(("{\"result\":\"\\\"foo\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"\\\"foo\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest)])) : stdgo.Slice<stdgo._internal.encoding.json.Json_T_wrongStringTest.T_wrongStringTest>);
