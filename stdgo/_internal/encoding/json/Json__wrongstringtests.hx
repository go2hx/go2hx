package stdgo._internal.encoding.json;
var _wrongStringTests : stdgo.Slice<stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest> = (new stdgo.Slice<stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest>(6, 6, ...[(new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":\"x\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"x\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":\"foo\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"foo\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":\"123\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"123\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":123}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal unquoted value into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":\"\\\"\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"\\\"\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest), (new stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest(("{\"result\":\"\\\"foo\"}" : stdgo.GoString), ("json: invalid use of ,string struct tag, trying to unmarshal \"\\\"foo\" into string" : stdgo.GoString)) : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest)])) : stdgo.Slice<stdgo._internal.encoding.json.Json_t_wrongstringtest.T_wrongStringTest>);
