package stdgo._internal.go.build;
var _knownArch : stdgo.GoMap<stdgo.GoString, Bool> = ({
        final x = new stdgo.GoMap.GoStringMap<Bool>();
        x.__defaultValue__ = () -> false;
        x.set(("386" : stdgo.GoString), true);
x.set(("amd64" : stdgo.GoString), true);
x.set(("amd64p32" : stdgo.GoString), true);
x.set(("arm" : stdgo.GoString), true);
x.set(("armbe" : stdgo.GoString), true);
x.set(("arm64" : stdgo.GoString), true);
x.set(("arm64be" : stdgo.GoString), true);
x.set(("loong64" : stdgo.GoString), true);
x.set(("mips" : stdgo.GoString), true);
x.set(("mipsle" : stdgo.GoString), true);
x.set(("mips64" : stdgo.GoString), true);
x.set(("mips64le" : stdgo.GoString), true);
x.set(("mips64p32" : stdgo.GoString), true);
x.set(("mips64p32le" : stdgo.GoString), true);
x.set(("ppc" : stdgo.GoString), true);
x.set(("ppc64" : stdgo.GoString), true);
x.set(("ppc64le" : stdgo.GoString), true);
x.set(("riscv" : stdgo.GoString), true);
x.set(("riscv64" : stdgo.GoString), true);
x.set(("s390" : stdgo.GoString), true);
x.set(("s390x" : stdgo.GoString), true);
x.set(("sparc" : stdgo.GoString), true);
x.set(("sparc64" : stdgo.GoString), true);
x.set(("wasm" : stdgo.GoString), true);
        x;
    } : stdgo.GoMap<stdgo.GoString, Bool>);
