package stdgo._internal.go.constant;
function testMake(_t:stdgo.Ref<stdgo._internal.testing.Testing_t_.T_>):Void {
        //"file:///home/runner/.go/go1.21.3/src/go/constant/value_test.go#L668"
        for (__1 => _test in (new stdgo.Slice<stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase>(9, 9, ...[(new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((1 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(false), stdgo.Go.toInterface(false)) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), (new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((2 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(("hello" : stdgo.GoString)), stdgo.Go.toInterface(("hello" : stdgo.GoString))) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), (new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((3 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface((1i64 : stdgo.GoInt64)), stdgo.Go.toInterface((1i64 : stdgo.GoInt64))) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), (new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((3 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface(stdgo._internal.math.big.Big_newint.newInt((10i64 : stdgo.GoInt64)))), stdgo.Go.toInterface((10i64 : stdgo.GoInt64))) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), (new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((3 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface((stdgo.Go.setRef(({} : stdgo._internal.math.big.Big_int_.Int_)) : stdgo.Ref<stdgo._internal.math.big.Big_int_.Int_>).lsh(stdgo._internal.math.big.Big_newint.newInt((1i64 : stdgo.GoInt64)), (62u32 : stdgo.GoUInt)))), stdgo.Go.toInterface((4611686018427387904i64 : stdgo.GoInt64))) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), stdgo._internal.go.constant.Constant__dup._dup((3 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface((stdgo.Go.setRef(({} : stdgo._internal.math.big.Big_int_.Int_)) : stdgo.Ref<stdgo._internal.math.big.Big_int_.Int_>).lsh(stdgo._internal.math.big.Big_newint.newInt((1i64 : stdgo.GoInt64)), (63u32 : stdgo.GoUInt)))))?.__copy__(), (new stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase((4 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface(stdgo._internal.math.big.Big_newfloat.newFloat((0 : stdgo.GoFloat64)))), stdgo.Go.toInterface(stdgo.Go.asInterface(stdgo._internal.go.constant.Constant__floatval0._floatVal0._val))) : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase), stdgo._internal.go.constant.Constant__dup._dup((4 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface(stdgo._internal.math.big.Big_newfloat.newFloat((2 : stdgo.GoFloat64)))))?.__copy__(), stdgo._internal.go.constant.Constant__dup._dup((4 : stdgo._internal.go.constant.Constant_kind.Kind), stdgo.Go.toInterface(stdgo.Go.asInterface(stdgo._internal.math.big.Big_newrat.newRat((1i64 : stdgo.GoInt64), (3i64 : stdgo.GoInt64)))))?.__copy__()].concat([for (i in 9 ... (9 > 9 ? 9 : 9 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase)])) : stdgo.Slice<stdgo._internal.go.constant.Constant_t_maketestcase.T_makeTestCase>)) {
            var _val = (stdgo._internal.go.constant.Constant_make.make(_test._arg) : stdgo._internal.go.constant.Constant_value.Value);
            var _got = (stdgo._internal.go.constant.Constant_val.val(_val) : stdgo.AnyInterface);
            //"file:///home/runner/.go/go1.21.3/src/go/constant/value_test.go#L683"
            if (((_val.kind() != _test._kind) || (_got != _test._want) : Bool)) {
                //"file:///home/runner/.go/go1.21.3/src/go/constant/value_test.go#L684"
                _t.errorf(("got %v (%T, kind = %d); want %v (%T, kind = %d)" : stdgo.GoString), _got, _got, stdgo.Go.toInterface(stdgo.Go.asInterface(_val.kind())), _test._want, _test._want, stdgo.Go.toInterface(stdgo.Go.asInterface(_test._kind)));
            };
        };
    }
