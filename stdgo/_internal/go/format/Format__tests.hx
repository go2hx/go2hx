package stdgo._internal.go.format;
var _tests : stdgo.Slice<stdgo.GoString> = (new stdgo.Slice<stdgo.GoString>(30, 30, ...[
("import \"go/format\"" : stdgo.GoString),
("var x int" : stdgo.GoString),
("var x int\n\ntype T struct{}" : stdgo.GoString),
("x := 0" : stdgo.GoString),
("f(a, b, c)\nvar x int = f(1, 2, 3)" : stdgo.GoString),
("\tx := 0\n\tgo f()" : stdgo.GoString),
("\tx := 0\n\tgo f()\n\n\n" : stdgo.GoString),
("\n\t\t\n\n\tx := 0\n\tgo f()\n\n\n" : stdgo.GoString),
("\n\t\t\n\n\t\t\tx := 0\n\t\t\tgo f()\n\n\n" : stdgo.GoString),
("\n\t\t\n\n\t\t\tx := 0\n\t\t\tconst s = `\nfoo\n`\n\n\n" : stdgo.GoString),
("\n\t\t\n\n\t\t\tx := 0\n\t\t\tconst s = `\n\t\tfoo\n`\n\n\n" : stdgo.GoString),
("/* Comment */" : stdgo.GoString),
("\t/* Comment */ " : stdgo.GoString),
("\n/* Comment */ " : stdgo.GoString),
("i := 5 /* Comment */" : stdgo.GoString),
("\ta()\n//line :1" : stdgo.GoString),
("\t//xxx\n\ta()\n//line :2" : stdgo.GoString),
("\ta() //line :1\n\tb()\n" : stdgo.GoString),
("x := 0\n//line :1\n//line :2" : stdgo.GoString),
(stdgo.Go.str() : stdgo.GoString)?.__copy__(),
(" " : stdgo.GoString),
("\t" : stdgo.GoString),
("\t\t" : stdgo.GoString),
("\n" : stdgo.GoString),
("\n\n" : stdgo.GoString),
("\t\n" : stdgo.GoString),
("ERROR1 + 2 +" : stdgo.GoString),
("ERRORx :=  0" : stdgo.GoString),
("// copyright\n\n//go:build x\n\npackage p\n" : stdgo.GoString),
("// copyright\n\n//go:build x\n// +build x\n\npackage p\n" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>);
