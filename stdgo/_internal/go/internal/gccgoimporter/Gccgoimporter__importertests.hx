package stdgo._internal.go.internal.gccgoimporter;
var _importerTests : stdgo.GoArray<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest> = (new stdgo.GoArray<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest>(23, 23, ...[
({ _pkgpath : ("pointer" : stdgo.GoString), _name : ("Int8Ptr" : stdgo.GoString), _want : ("type Int8Ptr *int8" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("complexnums" : stdgo.GoString), _name : ("NN" : stdgo.GoString), _want : ("const NN untyped complex" : stdgo.GoString), _wantval : ("(-1 + -1i)" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("complexnums" : stdgo.GoString), _name : ("NP" : stdgo.GoString), _want : ("const NP untyped complex" : stdgo.GoString), _wantval : ("(-1 + 1i)" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("complexnums" : stdgo.GoString), _name : ("PN" : stdgo.GoString), _want : ("const PN untyped complex" : stdgo.GoString), _wantval : ("(1 + -1i)" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("complexnums" : stdgo.GoString), _name : ("PP" : stdgo.GoString), _want : ("const PP untyped complex" : stdgo.GoString), _wantval : ("(1 + 1i)" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("conversions" : stdgo.GoString), _name : ("Bits" : stdgo.GoString), _want : ("const Bits Units" : stdgo.GoString), _wantval : ("\"bits\"" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("time" : stdgo.GoString), _name : ("Duration" : stdgo.GoString), _want : ("type Duration int64" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("time" : stdgo.GoString), _name : ("Nanosecond" : stdgo.GoString), _want : ("const Nanosecond Duration" : stdgo.GoString), _wantval : ("1" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("unicode" : stdgo.GoString), _name : ("IsUpper" : stdgo.GoString), _want : ("func IsUpper(r rune) bool" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("unicode" : stdgo.GoString), _name : ("MaxRune" : stdgo.GoString), _want : ("const MaxRune untyped rune" : stdgo.GoString), _wantval : ("1114111" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("imports" : stdgo.GoString), _wantinits : (new stdgo.Slice<stdgo.GoString>(2, 2, ...[("imports..import" : stdgo.GoString), ("fmt..import" : stdgo.GoString)]).__setString__() : stdgo.Slice<stdgo.GoString>) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("importsar" : stdgo.GoString), _name : ("Hello" : stdgo.GoString), _want : ("var Hello string" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("aliases" : stdgo.GoString), _name : ("A14" : stdgo.GoString), _gccgoVersion : (7 : stdgo.GoInt), _want : ("type A14 = func(int, T0) chan T2" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("aliases" : stdgo.GoString), _name : ("C0" : stdgo.GoString), _gccgoVersion : (7 : stdgo.GoInt), _want : ("type C0 struct{f1 C1; f2 C1}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("escapeinfo" : stdgo.GoString), _name : ("NewT" : stdgo.GoString), _want : ("func NewT(data []byte) *T" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("issue27856" : stdgo.GoString), _name : ("M" : stdgo.GoString), _gccgoVersion : (7 : stdgo.GoInt), _want : ("type M struct{E F}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("v1reflect" : stdgo.GoString), _name : ("Type" : stdgo.GoString), _want : ("type Type interface{Align() int; AssignableTo(u Type) bool; Bits() int; ChanDir() ChanDir; Elem() Type; Field(i int) StructField; FieldAlign() int; FieldByIndex(index []int) StructField; FieldByName(name string) (StructField, bool); FieldByNameFunc(match func(string) bool) (StructField, bool); Implements(u Type) bool; In(i int) Type; IsVariadic() bool; Key() Type; Kind() Kind; Len() int; Method(int) Method; MethodByName(string) (Method, bool); Name() string; NumField() int; NumIn() int; NumMethod() int; NumOut() int; Out(i int) Type; PkgPath() string; Size() uintptr; String() string; common() *commonType; rawString() string; runtimeType() *runtimeType; uncommon() *uncommonType}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("nointerface" : stdgo.GoString), _name : ("I" : stdgo.GoString), _want : ("type I int" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("issue29198" : stdgo.GoString), _name : ("FooServer" : stdgo.GoString), _gccgoVersion : (7 : stdgo.GoInt), _want : ("type FooServer struct{FooServer *FooServer; user string; ctx context.Context}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("issue30628" : stdgo.GoString), _name : ("Apple" : stdgo.GoString), _want : ("type Apple struct{hey sync.RWMutex; x int; RQ [517]struct{Count uintptr; NumBytes uintptr; Last uintptr}}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("issue31540" : stdgo.GoString), _name : ("S" : stdgo.GoString), _gccgoVersion : (7 : stdgo.GoInt), _want : ("type S struct{b int; map[Y]Z}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("issue34182" : stdgo.GoString), _name : ("T1" : stdgo.GoString), _want : ("type T1 struct{f *T2}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest),
({ _pkgpath : ("notinheap" : stdgo.GoString), _name : ("S" : stdgo.GoString), _want : ("type S struct{}" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest)].concat([for (i in 23 ... (23 > 23 ? 23 : 23 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest)])) : stdgo.GoArray<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t_importertest.T_importerTest>);
