package stdgo._internal.go.internal.gccgoimporter;
var _typeParserTests : stdgo.Slice<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1> = (new stdgo.Slice<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1>(15, 15, ...[
({ _id : ("foo" : stdgo.GoString), _typ : ("<type -1>" : stdgo.GoString), _want : ("int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 *<type -19>>" : stdgo.GoString), _want : ("*error" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 *any>" : stdgo.GoString), _want : ("unsafe.Pointer" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 \"Bar\" <type 2 *<type 1>>>" : stdgo.GoString), _want : ("foo.Bar" : stdgo.GoString), _underlying : ("*foo.Bar" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 \"bar.Foo\" \"bar\" <type -1>\nfunc (? <type 1>) M ();\n>" : stdgo.GoString), _want : ("bar.Foo" : stdgo.GoString), _underlying : ("int8" : stdgo.GoString), _methods : ("func (bar.Foo).M()" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 \".bar.foo\" \"bar\" <type -1>>" : stdgo.GoString), _want : ("bar.foo" : stdgo.GoString), _underlying : ("int8" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 []<type -1>>" : stdgo.GoString), _want : ("[]int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 [42]<type -1>>" : stdgo.GoString), _want : ("[42]int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 map [<type -1>] <type -2>>" : stdgo.GoString), _want : ("map[int8]int16" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 chan <type -1>>" : stdgo.GoString), _want : ("chan int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 chan <- <type -1>>" : stdgo.GoString), _want : ("<-chan int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 chan -< <type -1>>" : stdgo.GoString), _want : ("chan<- int8" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 struct { I8 <type -1>; I16 <type -2> \"i16\"; }>" : stdgo.GoString), _want : ("struct{I8 int8; I16 int16 \"i16\"}" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 interface { Foo (a <type -1>, b <type -2>) <type -1>; Bar (? <type -2>, ? ...<type -1>) (? <type -2>, ? <type -1>); Baz (); }>" : stdgo.GoString), _want : ("interface{Bar(int16, ...int8) (int16, int8); Baz(); Foo(a int8, b int16) int8}" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1),
({ _id : ("foo" : stdgo.GoString), _typ : ("<type 1 (? <type -1>) <type -2>>" : stdgo.GoString), _want : ("func(int8) int16" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1)].concat([for (i in 15 ... (15 > 15 ? 15 : 15 : stdgo.GoInt).toBasic()) ({ _id : ("" : stdgo.GoString), _typ : ("" : stdgo.GoString), _want : ("" : stdgo.GoString), _underlying : ("" : stdgo.GoString), _methods : ("" : stdgo.GoString) } : stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1)])) : stdgo.Slice<stdgo._internal.go.internal.gccgoimporter.Gccgoimporter_t__struct_1.T__struct_1>);
