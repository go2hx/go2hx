package stdgo._internal.go.token;
function testFileAddLineColumnInfo(_t:stdgo.Ref<stdgo._internal.testing.Testing_t_.T_>):Void {
        {};
        var _tests = (new stdgo.Slice<stdgo._internal.go.token.Token_t__struct_1.T__struct_1>(7, 7, ...[({ _name : ("normal" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(3, 3, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (50 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (80 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (4 : stdgo.GoInt), column : (2 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(3, 3, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (50 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (80 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (4 : stdgo.GoInt), column : (2 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 3 ... (3 > 3 ? 3 : 3 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset1 == file size" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (100 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (null : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset1 > file size" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (101 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (null : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset2 == file size" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(2, 2, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (100 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset2 > file size" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(2, 2, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (101 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset2 == offset1" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(2, 2, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1), ({ _name : ("offset2 < offset1" : stdgo.GoString), _infos : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(2, 2, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo), ({ offset : (9 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (3 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (new stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>(1, 1, ...[({ offset : (10 : stdgo.GoInt), filename : ("test.go" : stdgo.GoString), line : (2 : stdgo.GoInt), column : (1 : stdgo.GoInt) } : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo)])) : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1)].concat([for (i in 7 ... (7 > 7 ? 7 : 7 : stdgo.GoInt).toBasic()) ({ _name : ("" : stdgo.GoString), _infos : (null : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>), _want : (null : stdgo.Slice<stdgo._internal.go.token.Token_t_lineinfo.T_lineInfo>) } : stdgo._internal.go.token.Token_t__struct_1.T__struct_1)])) : stdgo.Slice<stdgo._internal.go.token.Token_t__struct_1.T__struct_1>);
        //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L468"
        for (__4 => _test in _tests) {
            //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L469"
            _t.run(_test._name?.__copy__(), function(_t:stdgo.Ref<stdgo._internal.testing.Testing_t_.T_>):Void {
                var _fs = stdgo._internal.go.token.Token_newfileset.newFileSet();
                var _f = _fs.addFile(("test.go" : stdgo.GoString), (-1 : stdgo.GoInt), (100 : stdgo.GoInt));
                //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L472"
                for (__13 => _info in _test._infos) {
                    //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L473"
                    _f.addLineColumnInfo(_info.offset, _info.filename?.__copy__(), _info.line, _info.column);
                };
                //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L475"
                if (!stdgo._internal.reflect.Reflect_deepequal.deepEqual(stdgo.Go.toInterface((@:checkr _f ?? throw "null pointer dereference")._infos), stdgo.Go.toInterface(_test._want))) {
                    //"file:///home/runner/.go/go1.21.3/src/go/token/position_test.go#L476"
                    _t.errorf(("\ngot %+v, \nwant %+v" : stdgo.GoString), stdgo.Go.toInterface((@:checkr _f ?? throw "null pointer dereference")._infos), stdgo.Go.toInterface(_test._want));
                };
            });
        };
    }
