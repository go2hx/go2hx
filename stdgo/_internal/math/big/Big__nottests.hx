package stdgo._internal.math.big;
var _notTests : stdgo.Slice<stdgo._internal.math.big.Big_t__struct_45.T__struct_45> = (new stdgo.Slice<stdgo._internal.math.big.Big_t__struct_45.T__struct_45>(6, 6, ...[({ _in : ("0" : stdgo.GoString), _out : ("-1" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45), ({ _in : ("1" : stdgo.GoString), _out : ("-2" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45), ({ _in : ("7" : stdgo.GoString), _out : ("-8" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45), ({ _in : ("0" : stdgo.GoString), _out : ("-1" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45), ({ _in : ("-81910" : stdgo.GoString), _out : ("81909" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45), ({ _in : ("298472983472983471903246121093472394872319615612417471234712061" : stdgo.GoString), _out : ("-298472983472983471903246121093472394872319615612417471234712062" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45)].concat([for (i in 6 ... (6 > 6 ? 6 : 6 : stdgo.GoInt).toBasic()) ({ _in : ("" : stdgo.GoString), _out : ("" : stdgo.GoString) } : stdgo._internal.math.big.Big_t__struct_45.T__struct_45)])) : stdgo.Slice<stdgo._internal.math.big.Big_t__struct_45.T__struct_45>);
