package stdgo._internal.math.big;
import stdgo._internal.strings.Strings;
import stdgo._internal.internal.testenv.Testenv;
import stdgo._internal.math.rand.Rand;
import stdgo._internal.flag.Flag;
import stdgo._internal.errors.Errors;
import stdgo._internal.math.bits.Bits;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.testing.Testing;
import stdgo._internal.math.Math;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.encoding.gob.Gob;
import stdgo._internal.bytes.Bytes;
import stdgo._internal.io.Io;
import stdgo._internal.encoding.json.Json;
import stdgo._internal.testing.quick.Quick;
import stdgo._internal.encoding.hex.Hex;
import stdgo._internal.encoding.xml.Xml;
import stdgo._internal.path.filepath.Filepath;
import stdgo._internal.os.Os;
import stdgo._internal.os.exec.Exec;
import stdgo._internal.encoding.binary.Binary;
import stdgo._internal.runtime.Runtime;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.sort.Sort;
function _reciprocalWord(_d1:stdgo._internal.math.big.Big_Word.Word):stdgo._internal.math.big.Big_Word.Word {
        var _u = ((_d1 << stdgo._internal.math.big.Big__nlz._nlz(_d1) : stdgo._internal.math.big.Big_Word.Word) : stdgo.GoUInt);
        var _x1 = (-1 ^ _u : stdgo.GoUInt);
        var _x0 = ((-1u32 : stdgo.GoUInt) : stdgo.GoUInt);
        var __tmp__ = stdgo._internal.math.bits.Bits_div.div(_x1, _x0, _u), _rec:stdgo.GoUInt = __tmp__._0, __8:stdgo.GoUInt = __tmp__._1;
        return (_rec : stdgo._internal.math.big.Big_Word.Word);
    }
