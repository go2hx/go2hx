package stdgo._internal.net.http;
@:keep var __init_go2hx__ = {
        try {
            var __tmp__0 = stdgo._internal.net.http.Http_defaultClient.defaultClient, __tmp__1 = stdgo._internal.net.http.Http_errSchemeMismatch.errSchemeMismatch, __tmp__2 = stdgo._internal.net.http.Http_errUseLastResponse.errUseLastResponse, __tmp__3 = stdgo._internal.net.http.Http_noBody.noBody, __tmp__4 = stdgo._internal.net.http.Http_errMissingFile.errMissingFile, __tmp__5 = stdgo._internal.net.http.Http_errNotSupported.errNotSupported, __tmp__6 = stdgo._internal.net.http.Http_errUnexpectedTrailer.errUnexpectedTrailer, __tmp__7 = stdgo._internal.net.http.Http_errMissingBoundary.errMissingBoundary, __tmp__8 = stdgo._internal.net.http.Http_errNotMultipart.errNotMultipart, __tmp__9 = stdgo._internal.net.http.Http_errHeaderTooLong.errHeaderTooLong, __tmp__10 = stdgo._internal.net.http.Http_errShortBody.errShortBody, __tmp__11 = stdgo._internal.net.http.Http_errMissingContentLength.errMissingContentLength, __tmp__12 = stdgo._internal.net.http.Http_errNoCookie.errNoCookie, __tmp__13 = stdgo._internal.net.http.Http_errNoLocation.errNoLocation, __tmp__14 = stdgo._internal.net.http.Http_errBodyNotAllowed.errBodyNotAllowed, __tmp__15 = stdgo._internal.net.http.Http_errHijacked.errHijacked, __tmp__16 = stdgo._internal.net.http.Http_errContentLength.errContentLength, __tmp__17 = stdgo._internal.net.http.Http_errWriteAfterFlush.errWriteAfterFlush, __tmp__18 = stdgo._internal.net.http.Http_serverContextKey.serverContextKey, __tmp__19 = stdgo._internal.net.http.Http_localAddrContextKey.localAddrContextKey, __tmp__20 = stdgo._internal.net.http.Http_errAbortHandler.errAbortHandler, __tmp__21 = stdgo._internal.net.http.Http_defaultServeMux.defaultServeMux, __tmp__22 = stdgo._internal.net.http.Http_errServerClosed.errServerClosed, __tmp__23 = stdgo._internal.net.http.Http_errHandlerTimeout.errHandlerTimeout, __tmp__24 = stdgo._internal.net.http.Http_errLineTooLong.errLineTooLong, __tmp__25 = stdgo._internal.net.http.Http_errBodyReadAfterClose.errBodyReadAfterClose, __tmp__26 = stdgo._internal.net.http.Http_errSkipAltProtocol.errSkipAltProtocol, __tmp__27 = stdgo._internal.net.http.Http_defaultTransport.defaultTransport;
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
