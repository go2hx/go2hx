package stdgo._internal.net.http;
@:keep var __init_go2hx__ = {
        try {
            var __tmp__0 = stdgo._internal.net.http.Http_defaultclient.defaultClient, __tmp__1 = stdgo._internal.net.http.Http_errschememismatch.errSchemeMismatch, __tmp__2 = stdgo._internal.net.http.Http_erruselastresponse.errUseLastResponse, __tmp__3 = stdgo._internal.net.http.Http_nobody.noBody, __tmp__4 = stdgo._internal.net.http.Http_errmissingfile.errMissingFile, __tmp__5 = stdgo._internal.net.http.Http_errnotsupported.errNotSupported, __tmp__6 = stdgo._internal.net.http.Http_errunexpectedtrailer.errUnexpectedTrailer, __tmp__7 = stdgo._internal.net.http.Http_errmissingboundary.errMissingBoundary, __tmp__8 = stdgo._internal.net.http.Http_errnotmultipart.errNotMultipart, __tmp__9 = stdgo._internal.net.http.Http_errheadertoolong.errHeaderTooLong, __tmp__10 = stdgo._internal.net.http.Http_errshortbody.errShortBody, __tmp__11 = stdgo._internal.net.http.Http_errmissingcontentlength.errMissingContentLength, __tmp__12 = stdgo._internal.net.http.Http_errnocookie.errNoCookie, __tmp__13 = stdgo._internal.net.http.Http_errnolocation.errNoLocation, __tmp__14 = stdgo._internal.net.http.Http_errbodynotallowed.errBodyNotAllowed, __tmp__15 = stdgo._internal.net.http.Http_errhijacked.errHijacked, __tmp__16 = stdgo._internal.net.http.Http_errcontentlength.errContentLength, __tmp__17 = stdgo._internal.net.http.Http_errwriteafterflush.errWriteAfterFlush, __tmp__18 = stdgo._internal.net.http.Http_servercontextkey.serverContextKey, __tmp__19 = stdgo._internal.net.http.Http_localaddrcontextkey.localAddrContextKey, __tmp__20 = stdgo._internal.net.http.Http_erraborthandler.errAbortHandler, __tmp__21 = stdgo._internal.net.http.Http_defaultservemux.defaultServeMux, __tmp__22 = stdgo._internal.net.http.Http_errserverclosed.errServerClosed, __tmp__23 = stdgo._internal.net.http.Http_errhandlertimeout.errHandlerTimeout, __tmp__24 = stdgo._internal.net.http.Http_errlinetoolong.errLineTooLong, __tmp__25 = stdgo._internal.net.http.Http_errbodyreadafterclose.errBodyReadAfterClose, __tmp__26 = stdgo._internal.net.http.Http_errskipaltprotocol.errSkipAltProtocol, __tmp__27 = stdgo._internal.net.http.Http_defaulttransport.defaultTransport;
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
