package stdgo._internal.net.http;
var _http2errCodeName : stdgo.GoMap<stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode, stdgo.GoString> = ({
        final x = new stdgo.GoMap.GoIntMap<stdgo.GoString>();
        x.__defaultValue__ = () -> ("" : stdgo.GoString);
        x.set((0u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("NO_ERROR" : stdgo.GoString));
x.set((1u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("PROTOCOL_ERROR" : stdgo.GoString));
x.set((2u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("INTERNAL_ERROR" : stdgo.GoString));
x.set((3u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("FLOW_CONTROL_ERROR" : stdgo.GoString));
x.set((4u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("SETTINGS_TIMEOUT" : stdgo.GoString));
x.set((5u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("STREAM_CLOSED" : stdgo.GoString));
x.set((6u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("FRAME_SIZE_ERROR" : stdgo.GoString));
x.set((7u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("REFUSED_STREAM" : stdgo.GoString));
x.set((8u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("CANCEL" : stdgo.GoString));
x.set((9u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("COMPRESSION_ERROR" : stdgo.GoString));
x.set((10u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("CONNECT_ERROR" : stdgo.GoString));
x.set((11u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("ENHANCE_YOUR_CALM" : stdgo.GoString));
x.set((12u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("INADEQUATE_SECURITY" : stdgo.GoString));
x.set((13u32 : stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode), ("HTTP_1_1_REQUIRED" : stdgo.GoString));
        x;
    } : stdgo.GoMap<stdgo._internal.net.http.Http_T_http2ErrCode.T_http2ErrCode, stdgo.GoString>);
