package stdgo._internal.regexp;
@:keep var __init_go2hx__ = {
        try {
            var __tmp__0 = stdgo._internal.regexp.Regexp__norune._noRune, __tmp__1 = stdgo._internal.regexp.Regexp__nonext._noNext, __tmp__2 = stdgo._internal.regexp.Regexp__anyrunenotnl._anyRuneNotNL, __tmp__3 = stdgo._internal.regexp.Regexp__anyrune._anyRune, __tmp__4 = stdgo._internal.regexp.Regexp__matchsize._matchSize, __tmp__5 = stdgo._internal.regexp.Regexp__goodre._goodRe, __tmp__6 = stdgo._internal.regexp.Regexp__badre._badRe, __tmp__7 = stdgo._internal.regexp.Regexp__replacetests._replaceTests, __tmp__8 = stdgo._internal.regexp.Regexp__replaceliteraltests._replaceLiteralTests, __tmp__9 = stdgo._internal.regexp.Regexp__replacefunctests._replaceFuncTests, __tmp__10 = stdgo._internal.regexp.Regexp__metatests._metaTests, __tmp__11 = stdgo._internal.regexp.Regexp__literalprefixtests._literalPrefixTests, __tmp__12 = stdgo._internal.regexp.Regexp__emptysubexpindices._emptySubexpIndices, __tmp__13 = stdgo._internal.regexp.Regexp__subexpcases._subexpCases, __tmp__14 = stdgo._internal.regexp.Regexp__splittests._splitTests, __tmp__15 = stdgo._internal.regexp.Regexp__compilebenchdata._compileBenchData, __tmp__16 = stdgo._internal.regexp.Regexp__mininputlentests._minInputLenTests, __tmp__17 = stdgo._internal.regexp.Regexp__run._run, __tmp__18 = stdgo._internal.regexp.Regexp__match._match, __tmp__19 = stdgo._internal.regexp.Regexp__notab._notab, __tmp__20 = stdgo._internal.regexp.Regexp__benchdata._benchData, __tmp__21 = stdgo._internal.regexp.Regexp__benchsizes._benchSizes, __tmp__22 = stdgo._internal.regexp.Regexp__findtests._findTests, __tmp__23 = stdgo._internal.regexp.Regexp__runemergetests._runeMergeTests, __tmp__24 = stdgo._internal.regexp.Regexp__onepasstests._onePassTests, __tmp__25 = stdgo._internal.regexp.Regexp__onepasstests1._onePassTests1;
            for (__0 => _b in ((("\\.+*?()|[]{}^$" : stdgo.GoString) : stdgo.GoString) : stdgo.Slice<stdgo.GoUInt8>)) {
                stdgo._internal.regexp.Regexp__specialbytes._specialBytes[((_b % (16 : stdgo.GoUInt8) : stdgo.GoUInt8) : stdgo.GoInt)] = (stdgo._internal.regexp.Regexp__specialbytes._specialBytes[((_b % (16 : stdgo.GoUInt8) : stdgo.GoUInt8) : stdgo.GoInt)] | (((1 : stdgo.GoUInt8) << ((_b / (16 : stdgo.GoUInt8) : stdgo.GoUInt8)) : stdgo.GoUInt8)) : stdgo.GoUInt8);
            };
        } catch(__exception__) if (__exception__.message != "__return__") throw __exception__;
        true;
    };
