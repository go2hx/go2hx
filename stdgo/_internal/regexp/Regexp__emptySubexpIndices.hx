package stdgo._internal.regexp;
import stdgo._internal.strings.Strings;
import stdgo._internal.reflect.Reflect;
import stdgo._internal.regexp.syntax.Syntax;
import stdgo._internal.testing.Testing;
import stdgo._internal.os.Os;
import stdgo._internal.compress.bzip2.Bzip2;
import stdgo._internal.bufio.Bufio;
import stdgo._internal.strconv.Strconv;
import stdgo._internal.fmt.Fmt;
import stdgo._internal.path.filepath.Filepath;
import stdgo._internal.io.Io;
import stdgo._internal.internal.testenv.Testenv;
import stdgo._internal.unicode.Unicode;
import stdgo._internal.sort.Sort;
import stdgo._internal.unicode.utf8.Utf8;
import stdgo._internal.bytes.Bytes;
var _emptySubexpIndices : stdgo.Slice<stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex> = (new stdgo.Slice<stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex>(2, 2, ...[(new stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex(stdgo.Go.str()?.__copy__(), (-1 : stdgo.GoInt)) : stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex), (new stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex(("missing" : stdgo.GoString), (-1 : stdgo.GoInt)) : stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex)].concat([for (i in 2 ... (2 > 2 ? 2 : 2 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex)])) : stdgo.Slice<stdgo._internal.regexp.Regexp_T_subexpIndex.T_subexpIndex>);
