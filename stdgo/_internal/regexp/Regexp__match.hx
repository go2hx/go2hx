package stdgo._internal.regexp;
var _match : stdgo.Slice<(stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.GoString) -> { var _0 : Bool; var _1 : stdgo.GoString; }> = (new stdgo.Slice<(stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.GoString) -> { var _0 : Bool; var _1 : stdgo.GoString; }>(4, 4, ...[stdgo._internal.regexp.Regexp__matchFull._matchFull, stdgo._internal.regexp.Regexp__matchPartial._matchPartial, stdgo._internal.regexp.Regexp__matchFullLongest._matchFullLongest, stdgo._internal.regexp.Regexp__matchPartialLongest._matchPartialLongest]) : stdgo.Slice<(stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.Ref<stdgo._internal.regexp.Regexp_Regexp.Regexp>, stdgo.GoString) -> { var _0 : Bool; var _1 : stdgo.GoString; }>);
