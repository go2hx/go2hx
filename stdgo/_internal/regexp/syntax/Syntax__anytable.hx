package stdgo._internal.regexp.syntax;
var _anyTable : stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable> = (stdgo.Go.setRef(({ r16 : (new stdgo.Slice<stdgo._internal.unicode.Unicode_range16.Range16>(1, 1, ...[({ lo : (0 : stdgo.GoUInt16), hi : (65535 : stdgo.GoUInt16), stride : (1 : stdgo.GoUInt16) } : stdgo._internal.unicode.Unicode_range16.Range16)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.unicode.Unicode_range16.Range16)])) : stdgo.Slice<stdgo._internal.unicode.Unicode_range16.Range16>), r32 : (new stdgo.Slice<stdgo._internal.unicode.Unicode_range32.Range32>(1, 1, ...[({ lo : (65536u32 : stdgo.GoUInt32), hi : (1114111u32 : stdgo.GoUInt32), stride : (1u32 : stdgo.GoUInt32) } : stdgo._internal.unicode.Unicode_range32.Range32)].concat([for (i in 1 ... (1 > 1 ? 1 : 1 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.unicode.Unicode_range32.Range32)])) : stdgo.Slice<stdgo._internal.unicode.Unicode_range32.Range32>) } : stdgo._internal.unicode.Unicode_rangetable.RangeTable)) : stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>);
