package stdgo._internal.regexp.syntax;
var _simplifyTests : stdgo.Slice<stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2> = (new stdgo.Slice<stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2>(97, 97, ...[
({ regexp : ("a" : stdgo.GoString), simple : ("a" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("ab" : stdgo.GoString), simple : ("ab" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a|b" : stdgo.GoString), simple : ("[a-b]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("ab|cd" : stdgo.GoString), simple : ("ab|cd" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(ab)*" : stdgo.GoString), simple : ("(ab)*" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(ab)+" : stdgo.GoString), simple : ("(ab)+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(ab)?" : stdgo.GoString), simple : ("(ab)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("." : stdgo.GoString), simple : ("(?s:.)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("^" : stdgo.GoString), simple : ("(?m:^)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("$" : stdgo.GoString), simple : ("(?m:$)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[ac]" : stdgo.GoString), simple : ("[ac]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[^ac]" : stdgo.GoString), simple : ("[^ac]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:alnum:]]" : stdgo.GoString), simple : ("[0-9A-Za-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:alpha:]]" : stdgo.GoString), simple : ("[A-Za-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:blank:]]" : stdgo.GoString), simple : ("[\\t ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:cntrl:]]" : stdgo.GoString), simple : ("[\\x00-\\x1f\\x7f]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:digit:]]" : stdgo.GoString), simple : ("[0-9]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:graph:]]" : stdgo.GoString), simple : ("[!-~]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:lower:]]" : stdgo.GoString), simple : ("[a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:print:]]" : stdgo.GoString), simple : ("[ -~]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:punct:]]" : stdgo.GoString), simple : ("[!-/:-@\\[-`\\{-~]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:space:]]" : stdgo.GoString), simple : ("[\\t-\\r ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:upper:]]" : stdgo.GoString), simple : ("[A-Z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:xdigit:]]" : stdgo.GoString), simple : ("[0-9A-Fa-f]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\d" : stdgo.GoString), simple : ("[0-9]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\s" : stdgo.GoString), simple : ("[\\t-\\n\\f-\\r ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\w" : stdgo.GoString), simple : ("[0-9A-Z_a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\D" : stdgo.GoString), simple : ("[^0-9]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\S" : stdgo.GoString), simple : ("[^\\t-\\n\\f-\\r ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("\\W" : stdgo.GoString), simple : ("[^0-9A-Z_a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\d]" : stdgo.GoString), simple : ("[0-9]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\s]" : stdgo.GoString), simple : ("[\\t-\\n\\f-\\r ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\w]" : stdgo.GoString), simple : ("[0-9A-Z_a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\D]" : stdgo.GoString), simple : ("[^0-9]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\S]" : stdgo.GoString), simple : ("[^\\t-\\n\\f-\\r ]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[\\W]" : stdgo.GoString), simple : ("[^0-9A-Z_a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{1}" : stdgo.GoString), simple : ("a" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{2}" : stdgo.GoString), simple : ("aa" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{5}" : stdgo.GoString), simple : ("aaaaa" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{0,1}" : stdgo.GoString), simple : ("a?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a){0,2}" : stdgo.GoString), simple : ("(?:(a)(a)?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a){0,4}" : stdgo.GoString), simple : ("(?:(a)(?:(a)(?:(a)(a)?)?)?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a){2,6}" : stdgo.GoString), simple : ("(a)(a)(?:(a)(?:(a)(?:(a)(a)?)?)?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{0,2}" : stdgo.GoString), simple : ("(?:aa?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{0,4}" : stdgo.GoString), simple : ("(?:a(?:a(?:aa?)?)?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{2,6}" : stdgo.GoString), simple : ("aa(?:a(?:a(?:aa?)?)?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{0,}" : stdgo.GoString), simple : ("a*" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{1,}" : stdgo.GoString), simple : ("a+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{2,}" : stdgo.GoString), simple : ("aa+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{5,}" : stdgo.GoString), simple : ("aaaaa+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?:a{1,}){1,}" : stdgo.GoString), simple : ("a+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a{1,}b{1,})" : stdgo.GoString), simple : ("(a+b+)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{1,}|b{1,}" : stdgo.GoString), simple : ("a+|b+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?:a{1,})*" : stdgo.GoString), simple : ("(?:a+)*" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?:a{1,})+" : stdgo.GoString), simple : ("a+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?:a{1,})?" : stdgo.GoString), simple : ("(?:a+)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : (stdgo.Go.str() : stdgo.GoString)?.__copy__(), simple : ("(?:)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a{0}" : stdgo.GoString), simple : ("(?:)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[ab]" : stdgo.GoString), simple : ("[a-b]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[a-za-za-z]" : stdgo.GoString), simple : ("[a-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[A-Za-zA-Za-z]" : stdgo.GoString), simple : ("[A-Za-z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[ABCDEFGH]" : stdgo.GoString), simple : ("[A-H]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[AB-CD-EF-GH]" : stdgo.GoString), simple : ("[A-H]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[W-ZP-XE-R]" : stdgo.GoString), simple : ("[E-Z]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[a-ee-gg-m]" : stdgo.GoString), simple : ("[a-m]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[a-ea-ha-m]" : stdgo.GoString), simple : ("[a-m]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[a-ma-ha-e]" : stdgo.GoString), simple : ("[a-m]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[a-zA-Z0-9 -~]" : stdgo.GoString), simple : ("[ -~]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[^[:cntrl:][:^cntrl:]]" : stdgo.GoString), simple : ("[^\\x00-\\x{10FFFF}]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("[[:cntrl:][:^cntrl:]]" : stdgo.GoString), simple : ("(?s:.)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)A" : stdgo.GoString), simple : ("(?i:A)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)a" : stdgo.GoString), simple : ("(?i:A)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[A]" : stdgo.GoString), simple : ("(?i:A)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[a]" : stdgo.GoString), simple : ("(?i:A)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)K" : stdgo.GoString), simple : ("(?i:K)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)k" : stdgo.GoString), simple : ("(?i:K)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)\\x{212a}" : stdgo.GoString), simple : ("(?i:K)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[K]" : stdgo.GoString), simple : ("[KkK]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[k]" : stdgo.GoString), simple : ("[KkK]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[\\x{212a}]" : stdgo.GoString), simple : ("[KkK]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[a-z]" : stdgo.GoString), simple : ("[A-Za-zſK]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[\\x00-\\x{FFFD}]" : stdgo.GoString), simple : ("[\\x00-�]" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(?i)[\\x00-\\x{10FFFF}]" : stdgo.GoString), simple : ("(?s:.)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a|b|)" : stdgo.GoString), simple : ("([a-b]|(?:))" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(|)" : stdgo.GoString), simple : ("()" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("a()" : stdgo.GoString), simple : ("a()" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(()|())" : stdgo.GoString), simple : ("(()|())" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(a|)" : stdgo.GoString), simple : ("(a|(?:))" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("ab()cd()" : stdgo.GoString), simple : ("ab()cd()" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("()" : stdgo.GoString), simple : ("()" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("()*" : stdgo.GoString), simple : ("()*" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("()+" : stdgo.GoString), simple : ("()+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("()?" : stdgo.GoString), simple : ("()?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(){0}" : stdgo.GoString), simple : ("(?:)" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(){1}" : stdgo.GoString), simple : ("()" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(){1,}" : stdgo.GoString), simple : ("()+" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2),
({ regexp : ("(){0,2}" : stdgo.GoString), simple : ("(?:()()?)?" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2)].concat([for (i in 97 ... (97 > 97 ? 97 : 97 : stdgo.GoInt).toBasic()) ({ regexp : ("" : stdgo.GoString), simple : ("" : stdgo.GoString) } : stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2)])) : stdgo.Slice<stdgo._internal.regexp.syntax.Syntax_t__struct_2.T__struct_2>);
