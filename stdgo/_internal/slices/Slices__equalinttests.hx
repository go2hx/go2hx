package stdgo._internal.slices;
var _equalIntTests : stdgo.Slice<stdgo._internal.slices.Slices_t__struct_0.T__struct_0> = (new stdgo.Slice<stdgo._internal.slices.Slices_t__struct_0.T__struct_0>(4, 4, ...[({ _s1 : (new stdgo.Slice<stdgo.GoInt>(1, 1, ...[(1 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _s2 : (null : stdgo.Slice<stdgo.GoInt>), _want : false } : stdgo._internal.slices.Slices_t__struct_0.T__struct_0), ({ _s1 : (new stdgo.Slice<stdgo.GoInt>(0, 0, ...[]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _s2 : (null : stdgo.Slice<stdgo.GoInt>), _want : true } : stdgo._internal.slices.Slices_t__struct_0.T__struct_0), ({ _s1 : (new stdgo.Slice<stdgo.GoInt>(3, 3, ...[(1 : stdgo.GoInt), (2 : stdgo.GoInt), (3 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _s2 : (new stdgo.Slice<stdgo.GoInt>(3, 3, ...[(1 : stdgo.GoInt), (2 : stdgo.GoInt), (3 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _want : true } : stdgo._internal.slices.Slices_t__struct_0.T__struct_0), ({ _s1 : (new stdgo.Slice<stdgo.GoInt>(3, 3, ...[(1 : stdgo.GoInt), (2 : stdgo.GoInt), (3 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _s2 : (new stdgo.Slice<stdgo.GoInt>(4, 4, ...[(1 : stdgo.GoInt), (2 : stdgo.GoInt), (3 : stdgo.GoInt), (4 : stdgo.GoInt)]).__setNumber32__() : stdgo.Slice<stdgo.GoInt>), _want : false } : stdgo._internal.slices.Slices_t__struct_0.T__struct_0)].concat([for (i in 4 ... (4 > 4 ? 4 : 4 : stdgo.GoInt).toBasic()) ({ _s1 : (null : stdgo.Slice<stdgo.GoInt>), _s2 : (null : stdgo.Slice<stdgo.GoInt>), _want : false } : stdgo._internal.slices.Slices_t__struct_0.T__struct_0)])) : stdgo.Slice<stdgo._internal.slices.Slices_t__struct_0.T__struct_0>);
