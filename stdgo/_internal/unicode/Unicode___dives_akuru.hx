package stdgo._internal.unicode;
var __Dives_Akuru : stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable> = (stdgo.Go.setRef(({ r16 : (new stdgo.Slice<stdgo._internal.unicode.Unicode_range16.Range16>(0, 0, ...[].concat([for (i in 0 ... (0 > 0 ? 0 : 0 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.unicode.Unicode_range16.Range16)])) : stdgo.Slice<stdgo._internal.unicode.Unicode_range16.Range16>), r32 : (new stdgo.Slice<stdgo._internal.unicode.Unicode_range32.Range32>(8, 8, ...[(new stdgo._internal.unicode.Unicode_range32.Range32((71936u32 : stdgo.GoUInt32), (71942u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71945u32 : stdgo.GoUInt32), (71948u32 : stdgo.GoUInt32), (3u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71949u32 : stdgo.GoUInt32), (71955u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71957u32 : stdgo.GoUInt32), (71958u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71960u32 : stdgo.GoUInt32), (71989u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71991u32 : stdgo.GoUInt32), (71992u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((71995u32 : stdgo.GoUInt32), (72006u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32), (new stdgo._internal.unicode.Unicode_range32.Range32((72016u32 : stdgo.GoUInt32), (72025u32 : stdgo.GoUInt32), (1u32 : stdgo.GoUInt32)) : stdgo._internal.unicode.Unicode_range32.Range32)].concat([for (i in 8 ... (8 > 8 ? 8 : 8 : stdgo.GoInt).toBasic()) ({} : stdgo._internal.unicode.Unicode_range32.Range32)])) : stdgo.Slice<stdgo._internal.unicode.Unicode_range32.Range32>) } : stdgo._internal.unicode.Unicode_rangetable.RangeTable)) : stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>);
