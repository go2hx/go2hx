package stdgo._internal.unicode;
var properties : stdgo.GoMap<stdgo.GoString, stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>> = ({
        final x = new stdgo.GoMap.GoStringMap<stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>>();
        x.__defaultValue__ = () -> (null : stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>);
        x.set(("ASCII_Hex_Digit" : stdgo.GoString), stdgo._internal.unicode.Unicode_ascii_hex_digit.aSCII_Hex_Digit);
x.set(("Bidi_Control" : stdgo.GoString), stdgo._internal.unicode.Unicode_bidi_control.bidi_Control);
x.set(("Dash" : stdgo.GoString), stdgo._internal.unicode.Unicode_dash.dash);
x.set(("Deprecated" : stdgo.GoString), stdgo._internal.unicode.Unicode_deprecated.deprecated);
x.set(("Diacritic" : stdgo.GoString), stdgo._internal.unicode.Unicode_diacritic.diacritic);
x.set(("Extender" : stdgo.GoString), stdgo._internal.unicode.Unicode_extender.extender);
x.set(("Hex_Digit" : stdgo.GoString), stdgo._internal.unicode.Unicode_hex_digit.hex_Digit);
x.set(("Hyphen" : stdgo.GoString), stdgo._internal.unicode.Unicode_hyphen.hyphen);
x.set(("IDS_Binary_Operator" : stdgo.GoString), stdgo._internal.unicode.Unicode_ids_binary_operator.iDS_Binary_Operator);
x.set(("IDS_Trinary_Operator" : stdgo.GoString), stdgo._internal.unicode.Unicode_ids_trinary_operator.iDS_Trinary_Operator);
x.set(("Ideographic" : stdgo.GoString), stdgo._internal.unicode.Unicode_ideographic.ideographic);
x.set(("Join_Control" : stdgo.GoString), stdgo._internal.unicode.Unicode_join_control.join_Control);
x.set(("Logical_Order_Exception" : stdgo.GoString), stdgo._internal.unicode.Unicode_logical_order_exception.logical_Order_Exception);
x.set(("Noncharacter_Code_Point" : stdgo.GoString), stdgo._internal.unicode.Unicode_noncharacter_code_point.noncharacter_Code_Point);
x.set(("Other_Alphabetic" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_alphabetic.other_Alphabetic);
x.set(("Other_Default_Ignorable_Code_Point" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_default_ignorable_code_point.other_Default_Ignorable_Code_Point);
x.set(("Other_Grapheme_Extend" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_grapheme_extend.other_Grapheme_Extend);
x.set(("Other_ID_Continue" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_id_continue.other_ID_Continue);
x.set(("Other_ID_Start" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_id_start.other_ID_Start);
x.set(("Other_Lowercase" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_lowercase.other_Lowercase);
x.set(("Other_Math" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_math.other_Math);
x.set(("Other_Uppercase" : stdgo.GoString), stdgo._internal.unicode.Unicode_other_uppercase.other_Uppercase);
x.set(("Pattern_Syntax" : stdgo.GoString), stdgo._internal.unicode.Unicode_pattern_syntax.pattern_Syntax);
x.set(("Pattern_White_Space" : stdgo.GoString), stdgo._internal.unicode.Unicode_pattern_white_space.pattern_White_Space);
x.set(("Prepended_Concatenation_Mark" : stdgo.GoString), stdgo._internal.unicode.Unicode_prepended_concatenation_mark.prepended_Concatenation_Mark);
x.set(("Quotation_Mark" : stdgo.GoString), stdgo._internal.unicode.Unicode_quotation_mark.quotation_Mark);
x.set(("Radical" : stdgo.GoString), stdgo._internal.unicode.Unicode_radical.radical);
x.set(("Regional_Indicator" : stdgo.GoString), stdgo._internal.unicode.Unicode_regional_indicator.regional_Indicator);
x.set(("Sentence_Terminal" : stdgo.GoString), stdgo._internal.unicode.Unicode_sentence_terminal.sentence_Terminal);
x.set(("STerm" : stdgo.GoString), stdgo._internal.unicode.Unicode_sentence_terminal.sentence_Terminal);
x.set(("Soft_Dotted" : stdgo.GoString), stdgo._internal.unicode.Unicode_soft_dotted.soft_Dotted);
x.set(("Terminal_Punctuation" : stdgo.GoString), stdgo._internal.unicode.Unicode_terminal_punctuation.terminal_Punctuation);
x.set(("Unified_Ideograph" : stdgo.GoString), stdgo._internal.unicode.Unicode_unified_ideograph.unified_Ideograph);
x.set(("Variation_Selector" : stdgo.GoString), stdgo._internal.unicode.Unicode_variation_selector.variation_Selector);
x.set(("White_Space" : stdgo.GoString), stdgo._internal.unicode.Unicode_white_space.white_Space);
        x;
    } : stdgo.GoMap<stdgo.GoString, stdgo.Ref<stdgo._internal.unicode.Unicode_rangetable.RangeTable>>);
