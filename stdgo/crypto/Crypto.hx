package stdgo.crypto;
@:invalid var __go2hxdoc__package : Dynamic;
@:invalid var _digestSizes : Dynamic;
@:invalid var _hashes : Dynamic;
@:invalid var md4 : Dynamic;
@:invalid var md5 : Dynamic;
@:invalid var sha1 : Dynamic;
@:invalid var sha224 : Dynamic;
@:invalid var sha256 : Dynamic;
@:invalid var sha384 : Dynamic;
@:invalid var sha512 : Dynamic;
@:invalid var md5sha1 : Dynamic;
@:invalid var ripemd160 : Dynamic;
@:invalid var sha3_224 : Dynamic;
@:invalid var sha3_256 : Dynamic;
@:invalid var sha3_384 : Dynamic;
@:invalid var sha3_512 : Dynamic;
@:invalid var sha512_224 : Dynamic;
@:invalid var sha512_256 : Dynamic;
@:invalid var blake2s_256 : Dynamic;
@:invalid var blake2b_256 : Dynamic;
@:invalid var blake2b_384 : Dynamic;
@:invalid var blake2b_512 : Dynamic;
@:invalid var _maxHash : Dynamic;
typedef Signer = stdgo._internal.crypto.Crypto.Signer;
typedef SignerOpts = stdgo._internal.crypto.Crypto.SignerOpts;
typedef Decrypter = stdgo._internal.crypto.Crypto.Decrypter;
typedef Hash = stdgo._internal.crypto.Crypto.Hash;
typedef PublicKey = stdgo._internal.crypto.Crypto.PublicKey;
typedef PrivateKey = stdgo._internal.crypto.Crypto.PrivateKey;
typedef DecrypterOpts = stdgo._internal.crypto.Crypto.DecrypterOpts;
function registerHash(_h:Hash, _f:() -> stdgo._internal.hash.Hash.Hash):Void {}
@:invalid typedef Hash_asInterface = Dynamic;
@:invalid typedef Hash_static_extension = Dynamic;
