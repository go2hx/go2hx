package stdgo.debug.dwarf;
var attrSibling : Attr = 1i32;
var attrLocation : Attr = 2i32;
var attrName : Attr = 3i32;
var attrOrdering : Attr = 9i32;
var attrByteSize : Attr = 11i32;
var attrBitOffset : Attr = 12i32;
var attrBitSize : Attr = 13i32;
var attrStmtList : Attr = 16i32;
var attrLowpc : Attr = 17i32;
var attrHighpc : Attr = 18i32;
var attrLanguage : Attr = 19i32;
var attrDiscr : Attr = 21i32;
var attrDiscrValue : Attr = 22i32;
var attrVisibility : Attr = 23i32;
var attrImport : Attr = 24i32;
var attrStringLength : Attr = 25i32;
var attrCommonRef : Attr = 26i32;
var attrCompDir : Attr = 27i32;
var attrConstValue : Attr = 28i32;
var attrContainingType : Attr = 29i32;
var attrDefaultValue : Attr = 30i32;
var attrInline : Attr = 32i32;
var attrIsOptional : Attr = 33i32;
var attrLowerBound : Attr = 34i32;
var attrProducer : Attr = 37i32;
var attrPrototyped : Attr = 39i32;
var attrReturnAddr : Attr = 42i32;
var attrStartScope : Attr = 44i32;
var attrStrideSize : Attr = 46i32;
var attrUpperBound : Attr = 47i32;
var attrAbstractOrigin : Attr = 49i32;
var attrAccessibility : Attr = 50i32;
var attrAddrClass : Attr = 51i32;
var attrArtificial : Attr = 52i32;
var attrBaseTypes : Attr = 53i32;
var attrCalling : Attr = 54i32;
var attrCount : Attr = 55i32;
var attrDataMemberLoc : Attr = 56i32;
var attrDeclColumn : Attr = 57i32;
var attrDeclFile : Attr = 58i32;
var attrDeclLine : Attr = 59i32;
var attrDeclaration : Attr = 60i32;
var attrDiscrList : Attr = 61i32;
var attrEncoding : Attr = 62i32;
var attrExternal : Attr = 63i32;
var attrFrameBase : Attr = 64i32;
var attrFriend : Attr = 65i32;
var attrIdentifierCase : Attr = 66i32;
var attrMacroInfo : Attr = 67i32;
var attrNamelistItem : Attr = 68i32;
var attrPriority : Attr = 69i32;
var attrSegment : Attr = 70i32;
var attrSpecification : Attr = 71i32;
var attrStaticLink : Attr = 72i32;
var attrType : Attr = 73i32;
var attrUseLocation : Attr = 74i32;
var attrVarParam : Attr = 75i32;
var attrVirtuality : Attr = 76i32;
var attrVtableElemLoc : Attr = 77i32;
var attrAllocated : Attr = 78i32;
var attrAssociated : Attr = 79i32;
var attrDataLocation : Attr = 80i32;
var attrStride : Attr = 81i32;
var attrEntrypc : Attr = 82i32;
var attrUseUTF8 : Attr = 83i32;
var attrExtension : Attr = 84i32;
var attrRanges : Attr = 85i32;
var attrTrampoline : Attr = 86i32;
var attrCallColumn : Attr = 87i32;
var attrCallFile : Attr = 88i32;
var attrCallLine : Attr = 89i32;
var attrDescription : Attr = 90i32;
var attrBinaryScale : Attr = 91i32;
var attrDecimalScale : Attr = 92i32;
var attrSmall : Attr = 93i32;
var attrDecimalSign : Attr = 94i32;
var attrDigitCount : Attr = 95i32;
var attrPictureString : Attr = 96i32;
var attrMutable : Attr = 97i32;
var attrThreadsScaled : Attr = 98i32;
var attrExplicit : Attr = 99i32;
var attrObjectPointer : Attr = 100i32;
var attrEndianity : Attr = 101i32;
var attrElemental : Attr = 102i32;
var attrPure : Attr = 103i32;
var attrRecursive : Attr = 104i32;
var attrSignature : Attr = 105i32;
var attrMainSubprogram : Attr = 106i32;
var attrDataBitOffset : Attr = 107i32;
var attrConstExpr : Attr = 108i32;
var attrEnumClass : Attr = 109i32;
var attrLinkageName : Attr = 110i32;
var attrStringLengthBitSize : Attr = 111i32;
var attrStringLengthByteSize : Attr = 112i32;
var attrRank : Attr = 113i32;
var attrStrOffsetsBase : Attr = 114i32;
var attrAddrBase : Attr = 115i32;
var attrRnglistsBase : Attr = 116i32;
var attrDwoName : Attr = 118i32;
var attrReference : Attr = 119i32;
var attrRvalueReference : Attr = 120i32;
var attrMacros : Attr = 121i32;
var attrCallAllCalls : Attr = 122i32;
var attrCallAllSourceCalls : Attr = 123i32;
var attrCallAllTailCalls : Attr = 124i32;
var attrCallReturnPC : Attr = 125i32;
var attrCallValue : Attr = 126i32;
var attrCallOrigin : Attr = 127i32;
var attrCallParameter : Attr = 128i32;
var attrCallPC : Attr = 129i32;
var attrCallTailCall : Attr = 130i32;
var attrCallTarget : Attr = 131i32;
var attrCallTargetClobbered : Attr = 132i32;
var attrCallDataLocation : Attr = 133i32;
var attrCallDataValue : Attr = 134i32;
var attrNoreturn : Attr = 135i32;
var attrAlignment : Attr = 136i32;
var attrExportSymbols : Attr = 137i32;
var attrDeleted : Attr = 138i32;
var attrDefaulted : Attr = 139i32;
var attrLoclistsBase : Attr = 140i32;
var tagArrayType : Tag = 1i32;
var tagClassType : Tag = 2i32;
var tagEntryPoint : Tag = 3i32;
var tagEnumerationType : Tag = 4i32;
var tagFormalParameter : Tag = 5i32;
var tagImportedDeclaration : Tag = 8i32;
var tagLabel : Tag = 10i32;
var tagLexDwarfBlock : Tag = 11i32;
var tagMember : Tag = 13i32;
var tagPointerType : Tag = 15i32;
var tagReferenceType : Tag = 16i32;
var tagCompileUnit : Tag = 17i32;
var tagStringType : Tag = 18i32;
var tagStructType : Tag = 19i32;
var tagSubroutineType : Tag = 21i32;
var tagTypedef : Tag = 22i32;
var tagUnionType : Tag = 23i32;
var tagUnspecifiedParameters : Tag = 24i32;
var tagVariant : Tag = 25i32;
var tagCommonDwarfBlock : Tag = 26i32;
var tagCommonInclusion : Tag = 27i32;
var tagInheritance : Tag = 28i32;
var tagInlinedSubroutine : Tag = 29i32;
var tagModule : Tag = 30i32;
var tagPtrToMemberType : Tag = 31i32;
var tagSetType : Tag = 32i32;
var tagSubrangeType : Tag = 33i32;
var tagWithStmt : Tag = 34i32;
var tagAccessDeclaration : Tag = 35i32;
var tagBaseType : Tag = 36i32;
var tagCatchDwarfBlock : Tag = 37i32;
var tagConstType : Tag = 38i32;
var tagConstant : Tag = 39i32;
var tagEnumerator : Tag = 40i32;
var tagFileType : Tag = 41i32;
var tagFriend : Tag = 42i32;
var tagNamelist : Tag = 43i32;
var tagNamelistItem : Tag = 44i32;
var tagPackedType : Tag = 45i32;
var tagSubprogram : Tag = 46i32;
var tagTemplateTypeParameter : Tag = 47i32;
var tagTemplateValueParameter : Tag = 48i32;
var tagThrownType : Tag = 49i32;
var tagTryDwarfBlock : Tag = 50i32;
var tagVariantPart : Tag = 51i32;
var tagVariable : Tag = 52i32;
var tagVolatileType : Tag = 53i32;
var tagDwarfProcedure : Tag = 54i32;
var tagRestrictType : Tag = 55i32;
var tagInterfaceType : Tag = 56i32;
var tagNamespace : Tag = 57i32;
var tagImportedModule : Tag = 58i32;
var tagUnspecifiedType : Tag = 59i32;
var tagPartialUnit : Tag = 60i32;
var tagImportedUnit : Tag = 61i32;
var tagMutableType : Tag = 62i32;
var tagCondition : Tag = 63i32;
var tagSharedType : Tag = 64i32;
var tagTypeUnit : Tag = 65i32;
var tagRvalueReferenceType : Tag = 66i32;
var tagTemplateAlias : Tag = 67i32;
var tagCoarrayType : Tag = 68i32;
var tagGenericSubrange : Tag = 69i32;
var tagDynamicType : Tag = 70i32;
var tagAtomicType : Tag = 71i32;
var tagCallSite : Tag = 72i32;
var tagCallSiteParameter : Tag = 73i32;
var tagSkeletonUnit : Tag = 74i32;
var tagImmutableType : Tag = 75i32;
var classUnknown : Class_ = 0i32;
var classAddress : Class_ = 1i32;
var classBlock : Class_ = 2i32;
var classConstant : Class_ = 3i32;
var classExprLoc : Class_ = 4i32;
var classFlag : Class_ = 5i32;
var classLinePtr : Class_ = 6i32;
var classLocListPtr : Class_ = 7i32;
var classMacPtr : Class_ = 8i32;
var classRangeListPtr : Class_ = 9i32;
var classReference : Class_ = 10i32;
var classReferenceSig : Class_ = 11i32;
var classString : Class_ = 12i32;
var classReferenceAlt : Class_ = 13i32;
var classStringAlt : Class_ = 14i32;
var classAddrPtr : Class_ = 15i32;
var classLocList : Class_ = 16i32;
var classRngList : Class_ = 17i32;
var classRngListsPtr : Class_ = 18i32;
var classStrOffsetsPtr : Class_ = 19i32;
var errUnknownPC(get, set) : stdgo.Error;
private function get_errUnknownPC():stdgo.Error return stdgo._internal.debug.dwarf.Dwarf_errunknownpc.errUnknownPC;
private function set_errUnknownPC(v:stdgo.Error):stdgo.Error {
        stdgo._internal.debug.dwarf.Dwarf_errunknownpc.errUnknownPC = v;
        return v;
    }
typedef Type_ = stdgo._internal.debug.dwarf.Dwarf_type_.Type_;
typedef DecodeError = stdgo._internal.debug.dwarf.Dwarf_decodeerror.DecodeError;
typedef Entry = stdgo._internal.debug.dwarf.Dwarf_entry.Entry;
typedef Field = stdgo._internal.debug.dwarf.Dwarf_field.Field;
typedef Reader = stdgo._internal.debug.dwarf.Dwarf_reader.Reader;
typedef LineReader = stdgo._internal.debug.dwarf.Dwarf_linereader.LineReader;
typedef LineEntry = stdgo._internal.debug.dwarf.Dwarf_lineentry.LineEntry;
typedef LineFile = stdgo._internal.debug.dwarf.Dwarf_linefile.LineFile;
typedef LineReaderPos = stdgo._internal.debug.dwarf.Dwarf_linereaderpos.LineReaderPos;
typedef Data = stdgo._internal.debug.dwarf.Dwarf_data.Data;
typedef CommonType = stdgo._internal.debug.dwarf.Dwarf_commontype.CommonType;
typedef BasicType = stdgo._internal.debug.dwarf.Dwarf_basictype.BasicType;
typedef CharType = stdgo._internal.debug.dwarf.Dwarf_chartype.CharType;
typedef UcharType = stdgo._internal.debug.dwarf.Dwarf_uchartype.UcharType;
typedef IntType = stdgo._internal.debug.dwarf.Dwarf_inttype.IntType;
typedef UintType = stdgo._internal.debug.dwarf.Dwarf_uinttype.UintType;
typedef FloatType = stdgo._internal.debug.dwarf.Dwarf_floattype.FloatType;
typedef ComplexType = stdgo._internal.debug.dwarf.Dwarf_complextype.ComplexType;
typedef BoolType = stdgo._internal.debug.dwarf.Dwarf_booltype.BoolType;
typedef AddrType = stdgo._internal.debug.dwarf.Dwarf_addrtype.AddrType;
typedef UnspecifiedType = stdgo._internal.debug.dwarf.Dwarf_unspecifiedtype.UnspecifiedType;
typedef QualType = stdgo._internal.debug.dwarf.Dwarf_qualtype.QualType;
typedef ArrayType = stdgo._internal.debug.dwarf.Dwarf_arraytype.ArrayType;
typedef VoidType = stdgo._internal.debug.dwarf.Dwarf_voidtype.VoidType;
typedef PtrType = stdgo._internal.debug.dwarf.Dwarf_ptrtype.PtrType;
typedef StructType = stdgo._internal.debug.dwarf.Dwarf_structtype.StructType;
typedef StructField = stdgo._internal.debug.dwarf.Dwarf_structfield.StructField;
typedef EnumType = stdgo._internal.debug.dwarf.Dwarf_enumtype.EnumType;
typedef EnumValue_ = stdgo._internal.debug.dwarf.Dwarf_enumvalue_.EnumValue_;
typedef FuncType = stdgo._internal.debug.dwarf.Dwarf_functype.FuncType;
typedef DotDotDotType = stdgo._internal.debug.dwarf.Dwarf_dotdotdottype.DotDotDotType;
typedef TypedefType = stdgo._internal.debug.dwarf.Dwarf_typedeftype.TypedefType;
typedef UnsupportedType = stdgo._internal.debug.dwarf.Dwarf_unsupportedtype.UnsupportedType;
typedef Attr = stdgo._internal.debug.dwarf.Dwarf_attr.Attr;
typedef Tag = stdgo._internal.debug.dwarf.Dwarf_tag.Tag;
typedef Class_ = stdgo._internal.debug.dwarf.Dwarf_class_.Class_;
typedef Offset = stdgo._internal.debug.dwarf.Dwarf_offset.Offset;
typedef DecodeErrorPointer = stdgo._internal.debug.dwarf.Dwarf_decodeerrorpointer.DecodeErrorPointer;
typedef EntryPointer = stdgo._internal.debug.dwarf.Dwarf_entrypointer.EntryPointer;
typedef FieldPointer = stdgo._internal.debug.dwarf.Dwarf_fieldpointer.FieldPointer;
typedef ReaderPointer = stdgo._internal.debug.dwarf.Dwarf_readerpointer.ReaderPointer;
typedef LineReaderPointer = stdgo._internal.debug.dwarf.Dwarf_linereaderpointer.LineReaderPointer;
typedef LineEntryPointer = stdgo._internal.debug.dwarf.Dwarf_lineentrypointer.LineEntryPointer;
typedef LineFilePointer = stdgo._internal.debug.dwarf.Dwarf_linefilepointer.LineFilePointer;
typedef LineReaderPosPointer = stdgo._internal.debug.dwarf.Dwarf_linereaderpospointer.LineReaderPosPointer;
typedef DataPointer = stdgo._internal.debug.dwarf.Dwarf_datapointer.DataPointer;
typedef CommonTypePointer = stdgo._internal.debug.dwarf.Dwarf_commontypepointer.CommonTypePointer;
typedef BasicTypePointer = stdgo._internal.debug.dwarf.Dwarf_basictypepointer.BasicTypePointer;
typedef CharTypePointer = stdgo._internal.debug.dwarf.Dwarf_chartypepointer.CharTypePointer;
typedef UcharTypePointer = stdgo._internal.debug.dwarf.Dwarf_uchartypepointer.UcharTypePointer;
typedef IntTypePointer = stdgo._internal.debug.dwarf.Dwarf_inttypepointer.IntTypePointer;
typedef UintTypePointer = stdgo._internal.debug.dwarf.Dwarf_uinttypepointer.UintTypePointer;
typedef FloatTypePointer = stdgo._internal.debug.dwarf.Dwarf_floattypepointer.FloatTypePointer;
typedef ComplexTypePointer = stdgo._internal.debug.dwarf.Dwarf_complextypepointer.ComplexTypePointer;
typedef BoolTypePointer = stdgo._internal.debug.dwarf.Dwarf_booltypepointer.BoolTypePointer;
typedef AddrTypePointer = stdgo._internal.debug.dwarf.Dwarf_addrtypepointer.AddrTypePointer;
typedef UnspecifiedTypePointer = stdgo._internal.debug.dwarf.Dwarf_unspecifiedtypepointer.UnspecifiedTypePointer;
typedef QualTypePointer = stdgo._internal.debug.dwarf.Dwarf_qualtypepointer.QualTypePointer;
typedef ArrayTypePointer = stdgo._internal.debug.dwarf.Dwarf_arraytypepointer.ArrayTypePointer;
typedef VoidTypePointer = stdgo._internal.debug.dwarf.Dwarf_voidtypepointer.VoidTypePointer;
typedef PtrTypePointer = stdgo._internal.debug.dwarf.Dwarf_ptrtypepointer.PtrTypePointer;
typedef StructTypePointer = stdgo._internal.debug.dwarf.Dwarf_structtypepointer.StructTypePointer;
typedef StructFieldPointer = stdgo._internal.debug.dwarf.Dwarf_structfieldpointer.StructFieldPointer;
typedef EnumTypePointer = stdgo._internal.debug.dwarf.Dwarf_enumtypepointer.EnumTypePointer;
typedef EnumValue_Pointer = stdgo._internal.debug.dwarf.Dwarf_enumvalue_pointer.EnumValue_Pointer;
typedef FuncTypePointer = stdgo._internal.debug.dwarf.Dwarf_functypepointer.FuncTypePointer;
typedef DotDotDotTypePointer = stdgo._internal.debug.dwarf.Dwarf_dotdotdottypepointer.DotDotDotTypePointer;
typedef TypedefTypePointer = stdgo._internal.debug.dwarf.Dwarf_typedeftypepointer.TypedefTypePointer;
typedef UnsupportedTypePointer = stdgo._internal.debug.dwarf.Dwarf_unsupportedtypepointer.UnsupportedTypePointer;
typedef AttrPointer = stdgo._internal.debug.dwarf.Dwarf_attrpointer.AttrPointer;
typedef TagPointer = stdgo._internal.debug.dwarf.Dwarf_tagpointer.TagPointer;
typedef Class_Pointer = stdgo._internal.debug.dwarf.Dwarf_class_pointer.Class_Pointer;
typedef OffsetPointer = stdgo._internal.debug.dwarf.Dwarf_offsetpointer.OffsetPointer;
/**
    * 
    * Package dwarf provides access to DWARF debugging information loaded from
    * executable files, as defined in the DWARF 2.0 Standard at
    * http://dwarfstd.org/doc/dwarf-2.0.0.pdf.
    * 
    * # Security
    * 
    * This package is not designed to be hardened against adversarial inputs, and is
    * outside the scope of https://go.dev/security/policy. In particular, only basic
    * validation is done when parsing object files. As such, care should be taken when
    * parsing untrusted inputs, as parsing malformed files may consume significant
    * resources, or cause panics.
    * 
**/
class Dwarf {
    /**
        * New returns a new Data object initialized from the given parameters.
        * Rather than calling this function directly, clients should typically use
        * the DWARF method of the File type of the appropriate package debug/elf,
        * debug/macho, or debug/pe.
        * 
        * The []byte arguments are the data from the corresponding debug section
        * in the object file; for example, for an ELF object, abbrev is the contents of
        * the ".debug_abbrev" section.
    **/
    static public inline function new_(_abbrev:stdgo.Slice<stdgo.GoUInt8>, _aranges:stdgo.Slice<stdgo.GoUInt8>, _frame:stdgo.Slice<stdgo.GoUInt8>, _info:stdgo.Slice<stdgo.GoUInt8>, _line:stdgo.Slice<stdgo.GoUInt8>, _pubnames:stdgo.Slice<stdgo.GoUInt8>, _ranges:stdgo.Slice<stdgo.GoUInt8>, _str:stdgo.Slice<stdgo.GoUInt8>):{ var _0 : stdgo.Ref<stdgo._internal.debug.dwarf.Dwarf_data.Data>; var _1 : stdgo.Error; } return stdgo._internal.debug.dwarf.Dwarf_new_.new_(_abbrev, _aranges, _frame, _info, _line, _pubnames, _ranges, _str);
}
