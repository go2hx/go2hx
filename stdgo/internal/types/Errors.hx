package stdgo.internal.types;
final invalidSyntaxTree : stdgo._internal.internal.types.errors.Errors.Code = stdgo._internal.internal.types.errors.Errors.invalidSyntaxTree;
final test = stdgo._internal.internal.types.errors.Errors.test;
final blankPkgName = stdgo._internal.internal.types.errors.Errors.blankPkgName;
final mismatchedPkgName = stdgo._internal.internal.types.errors.Errors.mismatchedPkgName;
final invalidPkgUse = stdgo._internal.internal.types.errors.Errors.invalidPkgUse;
final badImportPath = stdgo._internal.internal.types.errors.Errors.badImportPath;
final brokenImport = stdgo._internal.internal.types.errors.Errors.brokenImport;
final importCRenamed = stdgo._internal.internal.types.errors.Errors.importCRenamed;
final unusedImport = stdgo._internal.internal.types.errors.Errors.unusedImport;
final invalidInitCycle = stdgo._internal.internal.types.errors.Errors.invalidInitCycle;
final duplicateDecl = stdgo._internal.internal.types.errors.Errors.duplicateDecl;
final invalidDeclCycle = stdgo._internal.internal.types.errors.Errors.invalidDeclCycle;
final invalidTypeCycle = stdgo._internal.internal.types.errors.Errors.invalidTypeCycle;
final invalidConstInit = stdgo._internal.internal.types.errors.Errors.invalidConstInit;
final invalidConstVal = stdgo._internal.internal.types.errors.Errors.invalidConstVal;
final invalidConstType = stdgo._internal.internal.types.errors.Errors.invalidConstType;
final untypedNilUse = stdgo._internal.internal.types.errors.Errors.untypedNilUse;
final wrongAssignCount = stdgo._internal.internal.types.errors.Errors.wrongAssignCount;
final unassignableOperand = stdgo._internal.internal.types.errors.Errors.unassignableOperand;
final noNewVar = stdgo._internal.internal.types.errors.Errors.noNewVar;
final multiValAssignOp = stdgo._internal.internal.types.errors.Errors.multiValAssignOp;
final invalidIfaceAssign = stdgo._internal.internal.types.errors.Errors.invalidIfaceAssign;
final invalidChanAssign = stdgo._internal.internal.types.errors.Errors.invalidChanAssign;
final incompatibleAssign = stdgo._internal.internal.types.errors.Errors.incompatibleAssign;
final unaddressableFieldAssign = stdgo._internal.internal.types.errors.Errors.unaddressableFieldAssign;
final notAType = stdgo._internal.internal.types.errors.Errors.notAType;
final invalidArrayLen = stdgo._internal.internal.types.errors.Errors.invalidArrayLen;
final blankIfaceMethod = stdgo._internal.internal.types.errors.Errors.blankIfaceMethod;
final incomparableMapKey = stdgo._internal.internal.types.errors.Errors.incomparableMapKey;
final invalidPtrEmbed = stdgo._internal.internal.types.errors.Errors.invalidPtrEmbed;
final badRecv = stdgo._internal.internal.types.errors.Errors.badRecv;
final invalidRecv = stdgo._internal.internal.types.errors.Errors.invalidRecv;
final duplicateFieldAndMethod = stdgo._internal.internal.types.errors.Errors.duplicateFieldAndMethod;
final duplicateMethod = stdgo._internal.internal.types.errors.Errors.duplicateMethod;
final invalidBlank = stdgo._internal.internal.types.errors.Errors.invalidBlank;
final invalidIota = stdgo._internal.internal.types.errors.Errors.invalidIota;
final missingInitBody = stdgo._internal.internal.types.errors.Errors.missingInitBody;
final invalidInitSig = stdgo._internal.internal.types.errors.Errors.invalidInitSig;
final invalidInitDecl = stdgo._internal.internal.types.errors.Errors.invalidInitDecl;
final invalidMainDecl = stdgo._internal.internal.types.errors.Errors.invalidMainDecl;
final tooManyValues = stdgo._internal.internal.types.errors.Errors.tooManyValues;
final notAnExpr = stdgo._internal.internal.types.errors.Errors.notAnExpr;
final truncatedFloat = stdgo._internal.internal.types.errors.Errors.truncatedFloat;
final numericOverflow = stdgo._internal.internal.types.errors.Errors.numericOverflow;
final undefinedOp = stdgo._internal.internal.types.errors.Errors.undefinedOp;
final mismatchedTypes = stdgo._internal.internal.types.errors.Errors.mismatchedTypes;
final divByZero = stdgo._internal.internal.types.errors.Errors.divByZero;
final nonNumericIncDec = stdgo._internal.internal.types.errors.Errors.nonNumericIncDec;
final unaddressableOperand = stdgo._internal.internal.types.errors.Errors.unaddressableOperand;
final invalidIndirection = stdgo._internal.internal.types.errors.Errors.invalidIndirection;
final nonIndexableOperand = stdgo._internal.internal.types.errors.Errors.nonIndexableOperand;
final invalidIndex = stdgo._internal.internal.types.errors.Errors.invalidIndex;
final swappedSliceIndices = stdgo._internal.internal.types.errors.Errors.swappedSliceIndices;
final nonSliceableOperand = stdgo._internal.internal.types.errors.Errors.nonSliceableOperand;
final invalidSliceExpr = stdgo._internal.internal.types.errors.Errors.invalidSliceExpr;
final invalidShiftCount = stdgo._internal.internal.types.errors.Errors.invalidShiftCount;
final invalidShiftOperand = stdgo._internal.internal.types.errors.Errors.invalidShiftOperand;
final invalidReceive = stdgo._internal.internal.types.errors.Errors.invalidReceive;
final invalidSend = stdgo._internal.internal.types.errors.Errors.invalidSend;
final duplicateLitKey = stdgo._internal.internal.types.errors.Errors.duplicateLitKey;
final missingLitKey = stdgo._internal.internal.types.errors.Errors.missingLitKey;
final invalidLitIndex = stdgo._internal.internal.types.errors.Errors.invalidLitIndex;
final oversizeArrayLit = stdgo._internal.internal.types.errors.Errors.oversizeArrayLit;
final mixedStructLit = stdgo._internal.internal.types.errors.Errors.mixedStructLit;
final invalidStructLit = stdgo._internal.internal.types.errors.Errors.invalidStructLit;
final missingLitField = stdgo._internal.internal.types.errors.Errors.missingLitField;
final duplicateLitField = stdgo._internal.internal.types.errors.Errors.duplicateLitField;
final unexportedLitField = stdgo._internal.internal.types.errors.Errors.unexportedLitField;
final invalidLitField = stdgo._internal.internal.types.errors.Errors.invalidLitField;
final untypedLit = stdgo._internal.internal.types.errors.Errors.untypedLit;
final invalidLit = stdgo._internal.internal.types.errors.Errors.invalidLit;
final ambiguousSelector = stdgo._internal.internal.types.errors.Errors.ambiguousSelector;
final undeclaredImportedName = stdgo._internal.internal.types.errors.Errors.undeclaredImportedName;
final unexportedName = stdgo._internal.internal.types.errors.Errors.unexportedName;
final undeclaredName = stdgo._internal.internal.types.errors.Errors.undeclaredName;
final missingFieldOrMethod = stdgo._internal.internal.types.errors.Errors.missingFieldOrMethod;
final badDotDotDotSyntax = stdgo._internal.internal.types.errors.Errors.badDotDotDotSyntax;
final nonVariadicDotDotDot = stdgo._internal.internal.types.errors.Errors.nonVariadicDotDotDot;
final misplacedDotDotDot = stdgo._internal.internal.types.errors.Errors.misplacedDotDotDot;
final invalidDotDotDot = stdgo._internal.internal.types.errors.Errors.invalidDotDotDot;
final uncalledBuiltin = stdgo._internal.internal.types.errors.Errors.uncalledBuiltin;
final invalidAppend = stdgo._internal.internal.types.errors.Errors.invalidAppend;
final invalidCap = stdgo._internal.internal.types.errors.Errors.invalidCap;
final invalidClose = stdgo._internal.internal.types.errors.Errors.invalidClose;
final invalidCopy = stdgo._internal.internal.types.errors.Errors.invalidCopy;
final invalidComplex = stdgo._internal.internal.types.errors.Errors.invalidComplex;
final invalidDelete = stdgo._internal.internal.types.errors.Errors.invalidDelete;
final invalidImag = stdgo._internal.internal.types.errors.Errors.invalidImag;
final invalidLen = stdgo._internal.internal.types.errors.Errors.invalidLen;
final swappedMakeArgs = stdgo._internal.internal.types.errors.Errors.swappedMakeArgs;
final invalidMake = stdgo._internal.internal.types.errors.Errors.invalidMake;
final invalidReal = stdgo._internal.internal.types.errors.Errors.invalidReal;
final invalidAssert = stdgo._internal.internal.types.errors.Errors.invalidAssert;
final impossibleAssert = stdgo._internal.internal.types.errors.Errors.impossibleAssert;
final invalidConversion = stdgo._internal.internal.types.errors.Errors.invalidConversion;
final invalidUntypedConversion = stdgo._internal.internal.types.errors.Errors.invalidUntypedConversion;
final badOffsetofSyntax = stdgo._internal.internal.types.errors.Errors.badOffsetofSyntax;
final invalidOffsetof = stdgo._internal.internal.types.errors.Errors.invalidOffsetof;
final unusedExpr = stdgo._internal.internal.types.errors.Errors.unusedExpr;
final unusedVar = stdgo._internal.internal.types.errors.Errors.unusedVar;
final missingReturn = stdgo._internal.internal.types.errors.Errors.missingReturn;
final wrongResultCount = stdgo._internal.internal.types.errors.Errors.wrongResultCount;
final outOfScopeResult = stdgo._internal.internal.types.errors.Errors.outOfScopeResult;
final invalidCond = stdgo._internal.internal.types.errors.Errors.invalidCond;
final invalidPostDecl = stdgo._internal.internal.types.errors.Errors.invalidPostDecl;
final invalidIterVar = stdgo._internal.internal.types.errors.Errors.invalidIterVar;
final invalidRangeExpr = stdgo._internal.internal.types.errors.Errors.invalidRangeExpr;
final misplacedBreak = stdgo._internal.internal.types.errors.Errors.misplacedBreak;
final misplacedContinue = stdgo._internal.internal.types.errors.Errors.misplacedContinue;
final misplacedFallthrough = stdgo._internal.internal.types.errors.Errors.misplacedFallthrough;
final duplicateCase = stdgo._internal.internal.types.errors.Errors.duplicateCase;
final duplicateDefault = stdgo._internal.internal.types.errors.Errors.duplicateDefault;
final badTypeKeyword = stdgo._internal.internal.types.errors.Errors.badTypeKeyword;
final invalidTypeSwitch = stdgo._internal.internal.types.errors.Errors.invalidTypeSwitch;
final invalidExprSwitch = stdgo._internal.internal.types.errors.Errors.invalidExprSwitch;
final invalidSelectCase = stdgo._internal.internal.types.errors.Errors.invalidSelectCase;
final undeclaredLabel = stdgo._internal.internal.types.errors.Errors.undeclaredLabel;
final duplicateLabel = stdgo._internal.internal.types.errors.Errors.duplicateLabel;
final misplacedLabel = stdgo._internal.internal.types.errors.Errors.misplacedLabel;
final unusedLabel = stdgo._internal.internal.types.errors.Errors.unusedLabel;
final jumpOverDecl = stdgo._internal.internal.types.errors.Errors.jumpOverDecl;
final jumpIntoBlock = stdgo._internal.internal.types.errors.Errors.jumpIntoBlock;
final invalidMethodExpr = stdgo._internal.internal.types.errors.Errors.invalidMethodExpr;
final wrongArgCount = stdgo._internal.internal.types.errors.Errors.wrongArgCount;
final invalidCall = stdgo._internal.internal.types.errors.Errors.invalidCall;
final unusedResults = stdgo._internal.internal.types.errors.Errors.unusedResults;
final invalidDefer = stdgo._internal.internal.types.errors.Errors.invalidDefer;
final invalidGo = stdgo._internal.internal.types.errors.Errors.invalidGo;
final badDecl = stdgo._internal.internal.types.errors.Errors.badDecl;
final repeatedDecl = stdgo._internal.internal.types.errors.Errors.repeatedDecl;
final invalidUnsafeAdd = stdgo._internal.internal.types.errors.Errors.invalidUnsafeAdd;
final invalidUnsafeSlice = stdgo._internal.internal.types.errors.Errors.invalidUnsafeSlice;
final unsupportedFeature = stdgo._internal.internal.types.errors.Errors.unsupportedFeature;
final notAGenericType = stdgo._internal.internal.types.errors.Errors.notAGenericType;
final wrongTypeArgCount = stdgo._internal.internal.types.errors.Errors.wrongTypeArgCount;
final cannotInferTypeArgs = stdgo._internal.internal.types.errors.Errors.cannotInferTypeArgs;
final invalidTypeArg = stdgo._internal.internal.types.errors.Errors.invalidTypeArg;
final invalidInstanceCycle = stdgo._internal.internal.types.errors.Errors.invalidInstanceCycle;
final invalidUnion = stdgo._internal.internal.types.errors.Errors.invalidUnion;
final misplacedConstraintIface = stdgo._internal.internal.types.errors.Errors.misplacedConstraintIface;
final invalidMethodTypeParams = stdgo._internal.internal.types.errors.Errors.invalidMethodTypeParams;
final misplacedTypeParam = stdgo._internal.internal.types.errors.Errors.misplacedTypeParam;
final invalidUnsafeSliceData = stdgo._internal.internal.types.errors.Errors.invalidUnsafeSliceData;
final invalidUnsafeString = stdgo._internal.internal.types.errors.Errors.invalidUnsafeString;
final invalidClear = stdgo._internal.internal.types.errors.Errors.invalidClear;
final typeTooLarge = stdgo._internal.internal.types.errors.Errors.typeTooLarge;
final invalidMinMaxOperand = stdgo._internal.internal.types.errors.Errors.invalidMinMaxOperand;
@:forward @:forward.new abstract T__struct_0_asInterface(stdgo._internal.internal.types.errors.Errors.T__struct_0_asInterface) from stdgo._internal.internal.types.errors.Errors.T__struct_0_asInterface to stdgo._internal.internal.types.errors.Errors.T__struct_0_asInterface {

}
@:forward @:forward.new abstract T__struct_0_static_extension(stdgo._internal.internal.types.errors.Errors.T__struct_0_static_extension) from stdgo._internal.internal.types.errors.Errors.T__struct_0_static_extension to stdgo._internal.internal.types.errors.Errors.T__struct_0_static_extension {

}
typedef T__struct_0 = stdgo._internal.internal.types.errors.Errors.T__struct_0;
typedef Code = stdgo._internal.internal.types.errors.Errors.Code;
@:forward @:forward.new abstract Code_asInterface(stdgo._internal.internal.types.errors.Errors.Code_asInterface) from stdgo._internal.internal.types.errors.Errors.Code_asInterface to stdgo._internal.internal.types.errors.Errors.Code_asInterface {

}
@:forward @:forward.new abstract Code_static_extension(stdgo._internal.internal.types.errors.Errors.Code_static_extension) from stdgo._internal.internal.types.errors.Errors.Code_static_extension to stdgo._internal.internal.types.errors.Errors.Code_static_extension {

}
class Errors {

}
