package stdgo.internal.types.errors;
var invalidSyntaxTree : Code = -1i32;
var test : Code = 1i32;
var blankPkgName : Code = 2i32;
var mismatchedPkgName : Code = 3i32;
var invalidPkgUse : Code = 4i32;
var badImportPath : Code = 5i32;
var brokenImport : Code = 6i32;
var importCRenamed : Code = 7i32;
var unusedImport : Code = 8i32;
var invalidInitCycle : Code = 9i32;
var duplicateDecl : Code = 10i32;
var invalidDeclCycle : Code = 11i32;
var invalidTypeCycle : Code = 12i32;
var invalidConstInit : Code = 13i32;
var invalidConstVal : Code = 14i32;
var invalidConstType : Code = 15i32;
var untypedNilUse : Code = 16i32;
var wrongAssignCount : Code = 17i32;
var unassignableOperand : Code = 18i32;
var noNewVar : Code = 19i32;
var multiValAssignOp : Code = 20i32;
var invalidIfaceAssign : Code = 21i32;
var invalidChanAssign : Code = 22i32;
var incompatibleAssign : Code = 23i32;
var unaddressableFieldAssign : Code = 24i32;
var notAType : Code = 25i32;
var invalidArrayLen : Code = 26i32;
var blankIfaceMethod : Code = 27i32;
var incomparableMapKey : Code = 28i32;
var invalidPtrEmbed : Code = 30i32;
var badRecv : Code = 31i32;
var invalidRecv : Code = 32i32;
var duplicateFieldAndMethod : Code = 33i32;
var duplicateMethod : Code = 34i32;
var invalidBlank : Code = 35i32;
var invalidIota : Code = 36i32;
var missingInitBody : Code = 37i32;
var invalidInitSig : Code = 38i32;
var invalidInitDecl : Code = 39i32;
var invalidMainDecl : Code = 40i32;
var tooManyValues : Code = 41i32;
var notAnExpr : Code = 42i32;
var truncatedFloat : Code = 43i32;
var numericOverflow : Code = 44i32;
var undefinedOp : Code = 45i32;
var mismatchedTypes : Code = 46i32;
var divByZero : Code = 47i32;
var nonNumericIncDec : Code = 48i32;
var unaddressableOperand : Code = 49i32;
var invalidIndirection : Code = 50i32;
var nonIndexableOperand : Code = 51i32;
var invalidIndex : Code = 52i32;
var swappedSliceIndices : Code = 53i32;
var nonSliceableOperand : Code = 54i32;
var invalidSliceExpr : Code = 55i32;
var invalidShiftCount : Code = 56i32;
var invalidShiftOperand : Code = 57i32;
var invalidReceive : Code = 58i32;
var invalidSend : Code = 59i32;
var duplicateLitKey : Code = 60i32;
var missingLitKey : Code = 61i32;
var invalidLitIndex : Code = 62i32;
var oversizeArrayLit : Code = 63i32;
var mixedStructLit : Code = 64i32;
var invalidStructLit : Code = 65i32;
var missingLitField : Code = 66i32;
var duplicateLitField : Code = 67i32;
var unexportedLitField : Code = 68i32;
var invalidLitField : Code = 69i32;
var untypedLit : Code = 70i32;
var invalidLit : Code = 71i32;
var ambiguousSelector : Code = 72i32;
var undeclaredImportedName : Code = 73i32;
var unexportedName : Code = 74i32;
var undeclaredName : Code = 75i32;
var missingFieldOrMethod : Code = 76i32;
var badDotDotDotSyntax : Code = 77i32;
var nonVariadicDotDotDot : Code = 78i32;
var misplacedDotDotDot : Code = 79i32;
var invalidDotDotDot : Code = 81i32;
var uncalledBuiltin : Code = 82i32;
var invalidAppend : Code = 83i32;
var invalidCap : Code = 84i32;
var invalidClose : Code = 85i32;
var invalidCopy : Code = 86i32;
var invalidComplex : Code = 87i32;
var invalidDelete : Code = 88i32;
var invalidImag : Code = 89i32;
var invalidLen : Code = 90i32;
var swappedMakeArgs : Code = 91i32;
var invalidMake : Code = 92i32;
var invalidReal : Code = 93i32;
var invalidAssert : Code = 94i32;
var impossibleAssert : Code = 95i32;
var invalidConversion : Code = 96i32;
var invalidUntypedConversion : Code = 97i32;
var badOffsetofSyntax : Code = 98i32;
var invalidOffsetof : Code = 99i32;
var unusedExpr : Code = 100i32;
var unusedVar : Code = 101i32;
var missingReturn : Code = 102i32;
var wrongResultCount : Code = 103i32;
var outOfScopeResult : Code = 104i32;
var invalidCond : Code = 105i32;
var invalidPostDecl : Code = 106i32;
var invalidIterVar : Code = 108i32;
var invalidRangeExpr : Code = 109i32;
var misplacedBreak : Code = 110i32;
var misplacedContinue : Code = 111i32;
var misplacedFallthrough : Code = 112i32;
var duplicateCase : Code = 113i32;
var duplicateDefault : Code = 114i32;
var badTypeKeyword : Code = 115i32;
var invalidTypeSwitch : Code = 116i32;
var invalidExprSwitch : Code = 117i32;
var invalidSelectCase : Code = 118i32;
var undeclaredLabel : Code = 119i32;
var duplicateLabel : Code = 120i32;
var misplacedLabel : Code = 121i32;
var unusedLabel : Code = 122i32;
var jumpOverDecl : Code = 123i32;
var jumpIntoBlock : Code = 124i32;
var invalidMethodExpr : Code = 125i32;
var wrongArgCount : Code = 126i32;
var invalidCall : Code = 127i32;
var unusedResults : Code = 128i32;
var invalidDefer : Code = 129i32;
var invalidGo : Code = 130i32;
var badDecl : Code = 131i32;
var repeatedDecl : Code = 132i32;
var invalidUnsafeAdd : Code = 133i32;
var invalidUnsafeSlice : Code = 134i32;
var unsupportedFeature : Code = 135i32;
var notAGenericType : Code = 136i32;
var wrongTypeArgCount : Code = 137i32;
var cannotInferTypeArgs : Code = 138i32;
var invalidTypeArg : Code = 139i32;
var invalidInstanceCycle : Code = 140i32;
var invalidUnion : Code = 141i32;
var misplacedConstraintIface : Code = 142i32;
var invalidMethodTypeParams : Code = 143i32;
var misplacedTypeParam : Code = 144i32;
var invalidUnsafeSliceData : Code = 145i32;
var invalidUnsafeString : Code = 146i32;
var invalidClear : Code = 148i32;
var typeTooLarge : Code = 149i32;
var invalidMinMaxOperand : Code = 150i32;
typedef Code = stdgo._internal.internal.types.errors.Errors_code.Code;
typedef CodePointer = stdgo._internal.internal.types.errors.Errors_codepointer.CodePointer;
class Errors {

}
