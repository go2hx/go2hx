package stdgo.internal.xcoff;
var sAIAMAG : stdgo.GoUInt64 = 8i32;
var aIAFMAG : stdgo.GoString = ("`\n" : stdgo.GoString);
var aIAMAG : stdgo.GoString = ("<aiaff>\n" : stdgo.GoString);
var aIAMAGBIG : stdgo.GoString = ("<bigaf>\n" : stdgo.GoString);
var fL_HSZ_BIG : stdgo.GoUInt64 = 128i32;
var aR_HSZ_BIG : stdgo.GoUInt64 = 112i32;
var fILHSZ_32 : stdgo.GoUInt64 = 20i32;
var fILHSZ_64 : stdgo.GoUInt64 = 24i32;
var u802TOCMAGIC : stdgo.GoUInt64 = 479i32;
var u64_TOCMAGIC : stdgo.GoUInt64 = 503i32;
var f_RELFLG : stdgo.GoUInt64 = 1i32;
var f_EXEC : stdgo.GoUInt64 = 2i32;
var f_LNNO : stdgo.GoUInt64 = 4i32;
var f_FDPR_PROF : stdgo.GoUInt64 = 16i32;
var f_FDPR_OPTI : stdgo.GoUInt64 = 32i32;
var f_DSA : stdgo.GoUInt64 = 64i32;
var f_VARPG : stdgo.GoUInt64 = 256i32;
var f_DYNLOAD : stdgo.GoUInt64 = 4096i32;
var f_SHROBJ : stdgo.GoUInt64 = 8192i32;
var f_LOADONLY : stdgo.GoUInt64 = 16384i32;
var sTYP_DWARF : stdgo.GoUInt64 = 16i32;
var sTYP_TEXT : stdgo.GoUInt64 = 32i32;
var sTYP_DATA : stdgo.GoUInt64 = 64i32;
var sTYP_BSS : stdgo.GoUInt64 = 128i32;
var sTYP_EXCEPT : stdgo.GoUInt64 = 256i32;
var sTYP_INFO : stdgo.GoUInt64 = 512i32;
var sTYP_TDATA : stdgo.GoUInt64 = 1024i32;
var sTYP_TBSS : stdgo.GoUInt64 = 2048i32;
var sTYP_LOADER : stdgo.GoUInt64 = 4096i32;
var sTYP_DEBUG : stdgo.GoUInt64 = 8192i32;
var sTYP_TYPCHK : stdgo.GoUInt64 = 16384i32;
var sTYP_OVRFLO : stdgo.GoUInt64 = 32768i32;
var sSUBTYP_DWINFO : stdgo.GoUInt64 = 65536i32;
var sSUBTYP_DWLINE : stdgo.GoUInt64 = 131072i32;
var sSUBTYP_DWPBNMS : stdgo.GoUInt64 = 196608i32;
var sSUBTYP_DWPBTYP : stdgo.GoUInt64 = 262144i32;
var sSUBTYP_DWARNGE : stdgo.GoUInt64 = 327680i32;
var sSUBTYP_DWABREV : stdgo.GoUInt64 = 393216i32;
var sSUBTYP_DWSTR : stdgo.GoUInt64 = 458752i32;
var sSUBTYP_DWRNGES : stdgo.GoUInt64 = 524288i32;
var sSUBTYP_DWLOC : stdgo.GoUInt64 = 589824i32;
var sSUBTYP_DWFRAME : stdgo.GoUInt64 = 655360i32;
var sSUBTYP_DWMAC : stdgo.GoUInt64 = 720896i32;
var sYMESZ : stdgo.GoUInt64 = 18i32;
var n_DEBUG : stdgo.GoUInt64 = -2i32;
var n_ABS : stdgo.GoUInt64 = -1i32;
var n_UNDEF : stdgo.GoUInt64 = 0i32;
var sYM_V_INTERNAL : stdgo.GoUInt64 = 4096i32;
var sYM_V_HIDDEN : stdgo.GoUInt64 = 8192i32;
var sYM_V_PROTECTED : stdgo.GoUInt64 = 12288i32;
var sYM_V_EXPORTED : stdgo.GoUInt64 = 16384i32;
var sYM_TYPE_FUNC : stdgo.GoUInt64 = 32i32;
var c_NULL : stdgo.GoUInt64 = 0i32;
var c_EXT : stdgo.GoUInt64 = 2i32;
var c_STAT : stdgo.GoUInt64 = 3i32;
var c_BLOCK : stdgo.GoUInt64 = 100i32;
var c_FCN : stdgo.GoUInt64 = 101i32;
var c_FILE : stdgo.GoUInt64 = 103i32;
var c_HIDEXT : stdgo.GoUInt64 = 107i32;
var c_BINCL : stdgo.GoUInt64 = 108i32;
var c_EINCL : stdgo.GoUInt64 = 109i32;
var c_WEAKEXT : stdgo.GoUInt64 = 111i32;
var c_DWARF : stdgo.GoUInt64 = 112i32;
var c_GSYM : stdgo.GoUInt64 = 128i32;
var c_LSYM : stdgo.GoUInt64 = 129i32;
var c_PSYM : stdgo.GoUInt64 = 130i32;
var c_RSYM : stdgo.GoUInt64 = 131i32;
var c_RPSYM : stdgo.GoUInt64 = 132i32;
var c_STSYM : stdgo.GoUInt64 = 133i32;
var c_BCOMM : stdgo.GoUInt64 = 135i32;
var c_ECOML : stdgo.GoUInt64 = 136i32;
var c_ECOMM : stdgo.GoUInt64 = 137i32;
var c_DECL : stdgo.GoUInt64 = 140i32;
var c_ENTRY : stdgo.GoUInt64 = 141i32;
var c_FUN : stdgo.GoUInt64 = 142i32;
var c_BSTAT : stdgo.GoUInt64 = 143i32;
var c_ESTAT : stdgo.GoUInt64 = 144i32;
var c_GTLS : stdgo.GoUInt64 = 145i32;
var c_STTLS : stdgo.GoUInt64 = 146i32;
var xTY_ER : stdgo.GoUInt64 = 0i32;
var xTY_SD : stdgo.GoUInt64 = 1i32;
var xTY_LD : stdgo.GoUInt64 = 2i32;
var xTY_CM : stdgo.GoUInt64 = 3i32;
var xFT_FN : stdgo.GoUInt64 = 0i32;
var xFT_CT : stdgo.GoUInt64 = 1i32;
var xFT_CV : stdgo.GoUInt64 = 2i32;
var xFT_CD : stdgo.GoUInt64 = 128i32;
var xMC_PR : stdgo.GoUInt64 = 0i32;
var xMC_RO : stdgo.GoUInt64 = 1i32;
var xMC_DB : stdgo.GoUInt64 = 2i32;
var xMC_TC : stdgo.GoUInt64 = 3i32;
var xMC_UA : stdgo.GoUInt64 = 4i32;
var xMC_RW : stdgo.GoUInt64 = 5i32;
var xMC_GL : stdgo.GoUInt64 = 6i32;
var xMC_XO : stdgo.GoUInt64 = 7i32;
var xMC_SV : stdgo.GoUInt64 = 8i32;
var xMC_BS : stdgo.GoUInt64 = 9i32;
var xMC_DS : stdgo.GoUInt64 = 10i32;
var xMC_UC : stdgo.GoUInt64 = 11i32;
var xMC_TC0 : stdgo.GoUInt64 = 15i32;
var xMC_TD : stdgo.GoUInt64 = 16i32;
var xMC_SV64 : stdgo.GoUInt64 = 17i32;
var xMC_SV3264 : stdgo.GoUInt64 = 18i32;
var xMC_TL : stdgo.GoUInt64 = 20i32;
var xMC_UL : stdgo.GoUInt64 = 21i32;
var xMC_TE : stdgo.GoUInt64 = 22i32;
var lDHDRSZ_32 : stdgo.GoUInt64 = 32i32;
var lDHDRSZ_64 : stdgo.GoUInt64 = 56i32;
var r_POS : stdgo.GoUInt64 = 0i32;
var r_NEG : stdgo.GoUInt64 = 1i32;
var r_REL : stdgo.GoUInt64 = 2i32;
var r_TOC : stdgo.GoUInt64 = 3i32;
var r_TRL : stdgo.GoUInt64 = 18i32;
var r_TRLA : stdgo.GoUInt64 = 19i32;
var r_GL : stdgo.GoUInt64 = 5i32;
var r_TCL : stdgo.GoUInt64 = 6i32;
var r_RL : stdgo.GoUInt64 = 12i32;
var r_RLA : stdgo.GoUInt64 = 13i32;
var r_REF : stdgo.GoUInt64 = 15i32;
var r_BA : stdgo.GoUInt64 = 8i32;
var r_RBA : stdgo.GoUInt64 = 24i32;
var r_BR : stdgo.GoUInt64 = 10i32;
var r_RBR : stdgo.GoUInt64 = 26i32;
var r_TLS : stdgo.GoUInt64 = 32i32;
var r_TLS_IE : stdgo.GoUInt64 = 33i32;
var r_TLS_LD : stdgo.GoUInt64 = 34i32;
var r_TLS_LE : stdgo.GoUInt64 = 35i32;
var r_TLSM : stdgo.GoUInt64 = 36i32;
var r_TLSML : stdgo.GoUInt64 = 37i32;
var r_TOCU : stdgo.GoUInt64 = 48i32;
var r_TOCL : stdgo.GoUInt64 = 49i32;
typedef Archive = stdgo._internal.internal.xcoff.Xcoff_archive.Archive;
typedef ArchiveHeader = stdgo._internal.internal.xcoff.Xcoff_archiveheader.ArchiveHeader;
typedef Member = stdgo._internal.internal.xcoff.Xcoff_member.Member;
typedef MemberHeader = stdgo._internal.internal.xcoff.Xcoff_memberheader.MemberHeader;
typedef SectionHeader = stdgo._internal.internal.xcoff.Xcoff_sectionheader.SectionHeader;
typedef Section = stdgo._internal.internal.xcoff.Xcoff_section.Section;
typedef AuxiliaryCSect = stdgo._internal.internal.xcoff.Xcoff_auxiliarycsect.AuxiliaryCSect;
typedef AuxiliaryFcn = stdgo._internal.internal.xcoff.Xcoff_auxiliaryfcn.AuxiliaryFcn;
typedef Symbol = stdgo._internal.internal.xcoff.Xcoff_symbol.Symbol;
typedef Reloc = stdgo._internal.internal.xcoff.Xcoff_reloc.Reloc;
typedef ImportedSymbol = stdgo._internal.internal.xcoff.Xcoff_importedsymbol.ImportedSymbol;
typedef FileHeader = stdgo._internal.internal.xcoff.Xcoff_fileheader.FileHeader;
typedef File = stdgo._internal.internal.xcoff.Xcoff_file.File;
typedef FileHeader32 = stdgo._internal.internal.xcoff.Xcoff_fileheader32.FileHeader32;
typedef FileHeader64 = stdgo._internal.internal.xcoff.Xcoff_fileheader64.FileHeader64;
typedef SectionHeader32 = stdgo._internal.internal.xcoff.Xcoff_sectionheader32.SectionHeader32;
typedef SectionHeader64 = stdgo._internal.internal.xcoff.Xcoff_sectionheader64.SectionHeader64;
typedef SymEnt32 = stdgo._internal.internal.xcoff.Xcoff_syment32.SymEnt32;
typedef SymEnt64 = stdgo._internal.internal.xcoff.Xcoff_syment64.SymEnt64;
typedef AuxFile64 = stdgo._internal.internal.xcoff.Xcoff_auxfile64.AuxFile64;
typedef AuxFcn32 = stdgo._internal.internal.xcoff.Xcoff_auxfcn32.AuxFcn32;
typedef AuxFcn64 = stdgo._internal.internal.xcoff.Xcoff_auxfcn64.AuxFcn64;
typedef AuxSect64 = stdgo._internal.internal.xcoff.Xcoff_auxsect64.AuxSect64;
typedef AuxCSect32 = stdgo._internal.internal.xcoff.Xcoff_auxcsect32.AuxCSect32;
typedef AuxCSect64 = stdgo._internal.internal.xcoff.Xcoff_auxcsect64.AuxCSect64;
typedef LoaderHeader32 = stdgo._internal.internal.xcoff.Xcoff_loaderheader32.LoaderHeader32;
typedef LoaderHeader64 = stdgo._internal.internal.xcoff.Xcoff_loaderheader64.LoaderHeader64;
typedef LoaderSymbol32 = stdgo._internal.internal.xcoff.Xcoff_loadersymbol32.LoaderSymbol32;
typedef LoaderSymbol64 = stdgo._internal.internal.xcoff.Xcoff_loadersymbol64.LoaderSymbol64;
typedef Reloc32 = stdgo._internal.internal.xcoff.Xcoff_reloc32.Reloc32;
typedef Reloc64 = stdgo._internal.internal.xcoff.Xcoff_reloc64.Reloc64;
typedef ArchivePointer = stdgo._internal.internal.xcoff.Xcoff_archivepointer.ArchivePointer;
typedef ArchiveHeaderPointer = stdgo._internal.internal.xcoff.Xcoff_archiveheaderpointer.ArchiveHeaderPointer;
typedef MemberPointer = stdgo._internal.internal.xcoff.Xcoff_memberpointer.MemberPointer;
typedef MemberHeaderPointer = stdgo._internal.internal.xcoff.Xcoff_memberheaderpointer.MemberHeaderPointer;
typedef SectionHeaderPointer = stdgo._internal.internal.xcoff.Xcoff_sectionheaderpointer.SectionHeaderPointer;
typedef SectionPointer = stdgo._internal.internal.xcoff.Xcoff_sectionpointer.SectionPointer;
typedef AuxiliaryCSectPointer = stdgo._internal.internal.xcoff.Xcoff_auxiliarycsectpointer.AuxiliaryCSectPointer;
typedef AuxiliaryFcnPointer = stdgo._internal.internal.xcoff.Xcoff_auxiliaryfcnpointer.AuxiliaryFcnPointer;
typedef SymbolPointer = stdgo._internal.internal.xcoff.Xcoff_symbolpointer.SymbolPointer;
typedef RelocPointer = stdgo._internal.internal.xcoff.Xcoff_relocpointer.RelocPointer;
typedef ImportedSymbolPointer = stdgo._internal.internal.xcoff.Xcoff_importedsymbolpointer.ImportedSymbolPointer;
typedef FileHeaderPointer = stdgo._internal.internal.xcoff.Xcoff_fileheaderpointer.FileHeaderPointer;
typedef FilePointer = stdgo._internal.internal.xcoff.Xcoff_filepointer.FilePointer;
typedef FileHeader32Pointer = stdgo._internal.internal.xcoff.Xcoff_fileheader32pointer.FileHeader32Pointer;
typedef FileHeader64Pointer = stdgo._internal.internal.xcoff.Xcoff_fileheader64pointer.FileHeader64Pointer;
typedef SectionHeader32Pointer = stdgo._internal.internal.xcoff.Xcoff_sectionheader32pointer.SectionHeader32Pointer;
typedef SectionHeader64Pointer = stdgo._internal.internal.xcoff.Xcoff_sectionheader64pointer.SectionHeader64Pointer;
typedef SymEnt32Pointer = stdgo._internal.internal.xcoff.Xcoff_syment32pointer.SymEnt32Pointer;
typedef SymEnt64Pointer = stdgo._internal.internal.xcoff.Xcoff_syment64pointer.SymEnt64Pointer;
typedef AuxFile64Pointer = stdgo._internal.internal.xcoff.Xcoff_auxfile64pointer.AuxFile64Pointer;
typedef AuxFcn32Pointer = stdgo._internal.internal.xcoff.Xcoff_auxfcn32pointer.AuxFcn32Pointer;
typedef AuxFcn64Pointer = stdgo._internal.internal.xcoff.Xcoff_auxfcn64pointer.AuxFcn64Pointer;
typedef AuxSect64Pointer = stdgo._internal.internal.xcoff.Xcoff_auxsect64pointer.AuxSect64Pointer;
typedef AuxCSect32Pointer = stdgo._internal.internal.xcoff.Xcoff_auxcsect32pointer.AuxCSect32Pointer;
typedef AuxCSect64Pointer = stdgo._internal.internal.xcoff.Xcoff_auxcsect64pointer.AuxCSect64Pointer;
typedef LoaderHeader32Pointer = stdgo._internal.internal.xcoff.Xcoff_loaderheader32pointer.LoaderHeader32Pointer;
typedef LoaderHeader64Pointer = stdgo._internal.internal.xcoff.Xcoff_loaderheader64pointer.LoaderHeader64Pointer;
typedef LoaderSymbol32Pointer = stdgo._internal.internal.xcoff.Xcoff_loadersymbol32pointer.LoaderSymbol32Pointer;
typedef LoaderSymbol64Pointer = stdgo._internal.internal.xcoff.Xcoff_loadersymbol64pointer.LoaderSymbol64Pointer;
typedef Reloc32Pointer = stdgo._internal.internal.xcoff.Xcoff_reloc32pointer.Reloc32Pointer;
typedef Reloc64Pointer = stdgo._internal.internal.xcoff.Xcoff_reloc64pointer.Reloc64Pointer;
/**
    * Package xcoff implements access to XCOFF (Extended Common Object File Format) files.
**/
class Xcoff {
    /**
        * OpenArchive opens the named archive using os.Open and prepares it for use
        * as an AIX big archive.
    **/
    static public inline function openArchive(_name:stdgo.GoString):{ var _0 : stdgo.Ref<stdgo._internal.internal.xcoff.Xcoff_archive.Archive>; var _1 : stdgo.Error; } return stdgo._internal.internal.xcoff.Xcoff_openarchive.openArchive(_name);
    /**
        * NewArchive creates a new Archive for accessing an AIX big archive in an underlying reader.
    **/
    static public inline function newArchive(_r:stdgo._internal.io.Io_readerat.ReaderAt):{ var _0 : stdgo.Ref<stdgo._internal.internal.xcoff.Xcoff_archive.Archive>; var _1 : stdgo.Error; } return stdgo._internal.internal.xcoff.Xcoff_newarchive.newArchive(_r);
    /**
        * Open opens the named file using os.Open and prepares it for use as an XCOFF binary.
    **/
    static public inline function open(_name:stdgo.GoString):{ var _0 : stdgo.Ref<stdgo._internal.internal.xcoff.Xcoff_file.File>; var _1 : stdgo.Error; } return stdgo._internal.internal.xcoff.Xcoff_open.open(_name);
    /**
        * NewFile creates a new File for accessing an XCOFF binary in an underlying reader.
    **/
    static public inline function newFile(_r:stdgo._internal.io.Io_readerat.ReaderAt):{ var _0 : stdgo.Ref<stdgo._internal.internal.xcoff.Xcoff_file.File>; var _1 : stdgo.Error; } return stdgo._internal.internal.xcoff.Xcoff_newfile.newFile(_r);
}
