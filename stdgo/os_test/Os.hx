package stdgo.os_test;

import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;

private var _tests:Slice<stdgo.testing.Testing.InternalTest> = (new Slice<stdgo.testing.Testing.InternalTest>(0, 0,
	(new stdgo.testing.Testing.InternalTest(Go.str("TestExpand"), stdgo.os_test.Os_test.testExpand) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestConsistentEnviron"),
		stdgo.os_test.Os_test.testConsistentEnviron) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnsetenv"), stdgo.os_test.Os_test.testUnsetenv) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestClearenv"), stdgo.os_test.Os_test.testClearenv) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLookupEnv"), stdgo.os_test.Os_test.testLookupEnv) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEnvironConsistency"),
		stdgo.os_test.Os_test.testEnvironConsistency) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestErrIsExist"), stdgo.os_test.Os_test.testErrIsExist) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestErrIsNotExist"), stdgo.os_test.Os_test.testErrIsNotExist) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIsExist"), stdgo.os_test.Os_test.testIsExist) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIsPermission"), stdgo.os_test.Os_test.testIsPermission) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestErrPathNUL"), stdgo.os_test.Os_test.testErrPathNUL) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestPathErrorUnwrap"), stdgo.os_test.Os_test.testPathErrorUnwrap) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestErrorIsMethods"), stdgo.os_test.Os_test.testErrorIsMethods) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestExecutable"), stdgo.os_test.Os_test.testExecutable) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestExecutableDeleted"),
		stdgo.os_test.Os_test.testExecutableDeleted) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStat"), stdgo.os_test.Os_test.testStat) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatError"), stdgo.os_test.Os_test.testStatError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatSymlinkLoop"), stdgo.os_test.Os_test.testStatSymlinkLoop) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFstat"), stdgo.os_test.Os_test.testFstat) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLstat"), stdgo.os_test.Os_test.testLstat) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRead0"), stdgo.os_test.Os_test.testRead0) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadClosed"), stdgo.os_test.Os_test.testReadClosed) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileReaddirnames"), stdgo.os_test.Os_test.testFileReaddirnames) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileReaddir"), stdgo.os_test.Os_test.testFileReaddir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileReadDir"), stdgo.os_test.Os_test.testFileReadDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirnamesOneAtATime"),
		stdgo.os_test.Os_test.testReaddirnamesOneAtATime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirNValues"), stdgo.os_test.Os_test.testReaddirNValues) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirStatFailures"),
		stdgo.os_test.Os_test.testReaddirStatFailures) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirOfFile"), stdgo.os_test.Os_test.testReaddirOfFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestHardLink"), stdgo.os_test.Os_test.testHardLink) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSymlink"), stdgo.os_test.Os_test.testSymlink) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLongSymlink"), stdgo.os_test.Os_test.testLongSymlink) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRename"), stdgo.os_test.Os_test.testRename) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRenameOverwriteDest"),
		stdgo.os_test.Os_test.testRenameOverwriteDest) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRenameFailed"), stdgo.os_test.Os_test.testRenameFailed) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRenameNotExisting"),
		stdgo.os_test.Os_test.testRenameNotExisting) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRenameToDirFailed"),
		stdgo.os_test.Os_test.testRenameToDirFailed) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRenameCaseDifference"),
		stdgo.os_test.Os_test.testRenameCaseDifference) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStartProcess"), stdgo.os_test.Os_test.testStartProcess) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestChmod"), stdgo.os_test.Os_test.testChmod) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFTruncate"), stdgo.os_test.Os_test.testFTruncate) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTruncate"), stdgo.os_test.Os_test.testTruncate) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestChtimes"), stdgo.os_test.Os_test.testChtimes) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestChtimesDir"), stdgo.os_test.Os_test.testChtimesDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileChdir"), stdgo.os_test.Os_test.testFileChdir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestChdirAndGetwd"), stdgo.os_test.Os_test.testChdirAndGetwd) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestProgWideChdir"), stdgo.os_test.Os_test.testProgWideChdir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSeek"), stdgo.os_test.Os_test.testSeek) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSeekError"), stdgo.os_test.Os_test.testSeekError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOpenError"), stdgo.os_test.Os_test.testOpenError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOpenNoName"), stdgo.os_test.Os_test.testOpenNoName) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestHostname"), stdgo.os_test.Os_test.testHostname) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadAt"), stdgo.os_test.Os_test.testReadAt) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadAtOffset"), stdgo.os_test.Os_test.testReadAtOffset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadAtNegativeOffset"),
		stdgo.os_test.Os_test.testReadAtNegativeOffset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteAt"), stdgo.os_test.Os_test.testWriteAt) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteAtNegativeOffset"),
		stdgo.os_test.Os_test.testWriteAtNegativeOffset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteAtInAppendMode"),
		stdgo.os_test.Os_test.testWriteAtInAppendMode) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAppend"), stdgo.os_test.Os_test.testAppend) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatDirWithTrailingSlash"),
		stdgo.os_test.Os_test.testStatDirWithTrailingSlash) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNilProcessStateString"),
		stdgo.os_test.Os_test.testNilProcessStateString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSameFile"), stdgo.os_test.Os_test.testSameFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDevNullFile"), stdgo.os_test.Os_test.testDevNullFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLargeWriteToConsole"),
		stdgo.os_test.Os_test.testLargeWriteToConsole) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatDirModeExec"), stdgo.os_test.Os_test.testStatDirModeExec) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatStdin"), stdgo.os_test.Os_test.testStatStdin) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStatRelativeSymlink"),
		stdgo.os_test.Os_test.testStatRelativeSymlink) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadAtEOF"), stdgo.os_test.Os_test.testReadAtEOF) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLongPath"), stdgo.os_test.Os_test.testLongPath) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestKillStartProcess"), stdgo.os_test.Os_test.testKillStartProcess) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestGetppid"), stdgo.os_test.Os_test.testGetppid) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestKillFindProcess"), stdgo.os_test.Os_test.testKillFindProcess) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNilFileMethods"), stdgo.os_test.Os_test.testNilFileMethods) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllRace"), stdgo.os_test.Os_test.testRemoveAllRace) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestPipeThreads"), stdgo.os_test.Os_test.testPipeThreads) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDoubleCloseError"), stdgo.os_test.Os_test.testDoubleCloseError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUserHomeDir"), stdgo.os_test.Os_test.testUserHomeDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDirSeek"), stdgo.os_test.Os_test.testDirSeek) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirSmallSeek"), stdgo.os_test.Os_test.testReaddirSmallSeek) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOpenFileKeepsPermissions"),
		stdgo.os_test.Os_test.testOpenFileKeepsPermissions) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDirFS"), stdgo.os_test.Os_test.testDirFS) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDirFSPathsValid"), stdgo.os_test.Os_test.testDirFSPathsValid) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadFileProc"), stdgo.os_test.Os_test.testReadFileProc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteStringAlloc"), stdgo.os_test.Os_test.testWriteStringAlloc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestChown"), stdgo.os_test.Os_test.testChown) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileChown"), stdgo.os_test.Os_test.testFileChown) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLchown"), stdgo.os_test.Os_test.testLchown) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaddirRemoveRace"),
		stdgo.os_test.Os_test.testReaddirRemoveRace) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirStickyUmask"), stdgo.os_test.Os_test.testMkdirStickyUmask) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNewFileBlock"), stdgo.os_test.Os_test.testNewFileBlock) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNewFileNonBlock"), stdgo.os_test.Os_test.testNewFileNonBlock) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSplitPath"), stdgo.os_test.Os_test.testSplitPath) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirAll"), stdgo.os_test.Os_test.testMkdirAll) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirAllWithSymlink"),
		stdgo.os_test.Os_test.testMkdirAllWithSymlink) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirAllAtSlash"), stdgo.os_test.Os_test.testMkdirAllAtSlash) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadFile"), stdgo.os_test.Os_test.testReadFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteFile"), stdgo.os_test.Os_test.testWriteFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadOnlyWriteFile"),
		stdgo.os_test.Os_test.testReadOnlyWriteFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadDir"), stdgo.os_test.Os_test.testReadDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAll"), stdgo.os_test.Os_test.testRemoveAll) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllLarge"), stdgo.os_test.Os_test.testRemoveAllLarge) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllLongPath"),
		stdgo.os_test.Os_test.testRemoveAllLongPath) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllDot"), stdgo.os_test.Os_test.testRemoveAllDot) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllDotDot"), stdgo.os_test.Os_test.testRemoveAllDotDot) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveReadOnlyDir"),
		stdgo.os_test.Os_test.testRemoveReadOnlyDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllButReadOnlyAndPathError"),
		stdgo.os_test.Os_test.testRemoveAllButReadOnlyAndPathError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveUnreadableDir"),
		stdgo.os_test.Os_test.testRemoveUnreadableDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRemoveAllWithMoreErrorThanReqSize"),
		stdgo.os_test.Os_test.testRemoveAllWithMoreErrorThanReqSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOpenFileLimit"), stdgo.os_test.Os_test.testOpenFileLimit) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDirAndSymlinkStats"),
		stdgo.os_test.Os_test.testDirAndSymlinkStats) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFileAndSymlinkStats"),
		stdgo.os_test.Os_test.testFileAndSymlinkStats) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSymlinkWithTrailingSlash"),
		stdgo.os_test.Os_test.testSymlinkWithTrailingSlash) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCreateTemp"), stdgo.os_test.Os_test.testCreateTemp) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCreateTempPattern"),
		stdgo.os_test.Os_test.testCreateTempPattern) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCreateTempBadPattern"),
		stdgo.os_test.Os_test.testCreateTempBadPattern) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirTemp"), stdgo.os_test.Os_test.testMkdirTemp) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirTempBadDir"), stdgo.os_test.Os_test.testMkdirTempBadDir) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMkdirTempBadPattern"),
		stdgo.os_test.Os_test.testMkdirTempBadPattern) : stdgo.testing.Testing.InternalTest)) : Slice<stdgo.testing.Testing.InternalTest>);

private var _benchmarks:Slice<stdgo.testing.Testing.InternalBenchmark> = (new Slice<stdgo.testing.Testing.InternalBenchmark>(0, 0,
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkExpand"), stdgo.os_test.Os_test.benchmarkExpand) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkReaddirname"),
		stdgo.os_test.Os_test.benchmarkReaddirname) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkReaddir"),
		stdgo.os_test.Os_test.benchmarkReaddir) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkReadDir"),
		stdgo.os_test.Os_test.benchmarkReadDir) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStatDot"),
		stdgo.os_test.Os_test.benchmarkStatDot) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStatFile"),
		stdgo.os_test.Os_test.benchmarkStatFile) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStatDir"),
		stdgo.os_test.Os_test.benchmarkStatDir) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLstatDot"),
		stdgo.os_test.Os_test.benchmarkLstatDot) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLstatFile"),
		stdgo.os_test.Os_test.benchmarkLstatFile) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLstatDir"),
		stdgo.os_test.Os_test.benchmarkLstatDir) : stdgo.testing.Testing.InternalBenchmark)) : Slice<stdgo.testing.Testing.InternalBenchmark>);

private var _fuzzTargets:Slice<stdgo.testing.Testing.InternalFuzzTarget> = (new Slice<stdgo.testing.Testing.InternalFuzzTarget>(0,
	0) : Slice<stdgo.testing.Testing.InternalFuzzTarget>);

private var _examples:Slice<stdgo.testing.Testing.InternalExample> = (new Slice<stdgo.testing.Testing.InternalExample>(0, 0,
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleErrNotExist"), stdgo.os_test.Os_test.exampleErrNotExist, Go.str("file does not exist\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleExpand"), stdgo.os_test.Os_test.exampleExpand, Go.str("Good morning, Gopher!\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleExpandEnv"), stdgo.os_test.Os_test.exampleExpandEnv, Go.str("gopher lives in /usr/gopher.\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLookupEnv"), stdgo.os_test.Os_test.exampleLookupEnv,
		Go.str("SOME_KEY=value\nEMPTY_KEY=\nMISSING_KEY not set\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleGetenv"), stdgo.os_test.Os_test.exampleGetenv, Go.str("gopher lives in /usr/gopher.\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleReadFile"), stdgo.os_test.Os_test.exampleReadFile, Go.str("Hello, Gophers!\n"),
		false) : stdgo.testing.Testing.InternalExample)) : Slice<stdgo.testing.Testing.InternalExample>);

function main():Void {
	var _m = stdgo.testing.Testing.mainStart(Go.asInterface((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)),
		_tests, _benchmarks,
		_fuzzTargets, _examples);
	stdgo.os_test.Os_test.testMain(_m);
	Sys.exit((stdgo.reflect.Reflect.valueOf(Go.toInterface(_m))
		.elem()
		.fieldByName(Go.str("exitCode"))
		.int_() : GoInt));
}

@:keep var _ = {
	try {
		stdgo.testing.internal.testdeps.Testdeps.importPath = Go.str("os");
	} catch (__exception__)
		if (__exception__.message != "__return__")
			throw __exception__;
	true;
};
