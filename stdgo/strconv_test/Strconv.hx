package stdgo.strconv_test;

import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;

private var _tests:Slice<stdgo.testing.Testing.InternalTest> = (new Slice<stdgo.testing.Testing.InternalTest>(0, 0,
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseBool"), stdgo.strconv_test.Strconv_test.testParseBool) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatBool"), stdgo.strconv_test.Strconv_test.testFormatBool) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAppendBool"), stdgo.strconv_test.Strconv_test.testAppendBool) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseComplex"),
		stdgo.strconv_test.Strconv_test.testParseComplex) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseComplexIncorrectBitSize"),
		stdgo.strconv_test.Strconv_test.testParseComplexIncorrectBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseFloatPrefix"),
		stdgo.strconv_test.Strconv_test.testParseFloatPrefix) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAtof"), stdgo.strconv_test.Strconv_test.testAtof) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAtofSlow"), stdgo.strconv_test.Strconv_test.testAtofSlow) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAtofRandom"), stdgo.strconv_test.Strconv_test.testAtofRandom) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRoundTrip"), stdgo.strconv_test.Strconv_test.testRoundTrip) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRoundTrip32"), stdgo.strconv_test.Strconv_test.testRoundTrip32) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseFloatIncorrectBitSize"),
		stdgo.strconv_test.Strconv_test.testParseFloatIncorrectBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUint32"), stdgo.strconv_test.Strconv_test.testParseUint32) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUint64"), stdgo.strconv_test.Strconv_test.testParseUint64) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUint64Base"),
		stdgo.strconv_test.Strconv_test.testParseUint64Base) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseInt32"), stdgo.strconv_test.Strconv_test.testParseInt32) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseInt64"), stdgo.strconv_test.Strconv_test.testParseInt64) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseInt64Base"),
		stdgo.strconv_test.Strconv_test.testParseInt64Base) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUint"), stdgo.strconv_test.Strconv_test.testParseUint) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseInt"), stdgo.strconv_test.Strconv_test.testParseInt) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAtoi"), stdgo.strconv_test.Strconv_test.testAtoi) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseIntBitSize"),
		stdgo.strconv_test.Strconv_test.testParseIntBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUintBitSize"),
		stdgo.strconv_test.Strconv_test.testParseUintBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseIntBase"),
		stdgo.strconv_test.Strconv_test.testParseIntBase) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseUintBase"),
		stdgo.strconv_test.Strconv_test.testParseUintBase) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNumError"), stdgo.strconv_test.Strconv_test.testNumError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNumErrorUnwrap"),
		stdgo.strconv_test.Strconv_test.testNumErrorUnwrap) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatComplex"),
		stdgo.strconv_test.Strconv_test.testFormatComplex) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatComplexInvalidBitSize"),
		stdgo.strconv_test.Strconv_test.testFormatComplexInvalidBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDecimalShift"),
		stdgo.strconv_test.Strconv_test.testDecimalShift) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDecimalRound"),
		stdgo.strconv_test.Strconv_test.testDecimalRound) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDecimalRoundedInteger"),
		stdgo.strconv_test.Strconv_test.testDecimalRoundedInteger) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFp"), stdgo.strconv_test.Strconv_test.testFp) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFtoa"), stdgo.strconv_test.Strconv_test.testFtoa) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFtoaPowersOfTwo"),
		stdgo.strconv_test.Strconv_test.testFtoaPowersOfTwo) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFtoaRandom"), stdgo.strconv_test.Strconv_test.testFtoaRandom) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatFloatInvalidBitSize"),
		stdgo.strconv_test.Strconv_test.testFormatFloatInvalidBitSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMulByLog2Log10"),
		stdgo.strconv_test.Strconv_test.testMulByLog2Log10) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMulByLog10Log2"),
		stdgo.strconv_test.Strconv_test.testMulByLog10Log2) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestItoa"), stdgo.strconv_test.Strconv_test.testItoa) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUitoa"), stdgo.strconv_test.Strconv_test.testUitoa) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatUintVarlen"),
		stdgo.strconv_test.Strconv_test.testFormatUintVarlen) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIsPrint"), stdgo.strconv_test.Strconv_test.testIsPrint) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIsGraphic"), stdgo.strconv_test.Strconv_test.testIsGraphic) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuote"), stdgo.strconv_test.Strconv_test.testQuote) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuoteToASCII"),
		stdgo.strconv_test.Strconv_test.testQuoteToASCII) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuoteToGraphic"),
		stdgo.strconv_test.Strconv_test.testQuoteToGraphic) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuoteRune"), stdgo.strconv_test.Strconv_test.testQuoteRune) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuoteRuneToASCII"),
		stdgo.strconv_test.Strconv_test.testQuoteRuneToASCII) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuoteRuneToGraphic"),
		stdgo.strconv_test.Strconv_test.testQuoteRuneToGraphic) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCanBackquote"),
		stdgo.strconv_test.Strconv_test.testCanBackquote) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnquote"), stdgo.strconv_test.Strconv_test.testUnquote) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnquoteInvalidUTF8"),
		stdgo.strconv_test.Strconv_test.testUnquoteInvalidUTF8) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCountMallocs"),
		stdgo.strconv_test.Strconv_test.testCountMallocs) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestErrorPrefixes"),
		stdgo.strconv_test.Strconv_test.testErrorPrefixes) : stdgo.testing.Testing.InternalTest)) : Slice<stdgo.testing.Testing.InternalTest>);

private var _benchmarks:Slice<stdgo.testing.Testing.InternalBenchmark> = (new Slice<stdgo.testing.Testing.InternalBenchmark>(0, 0,
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64Decimal"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64Decimal) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64Float"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64Float) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64FloatExp"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64FloatExp) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64Big"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64Big) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64RandomBits"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64RandomBits) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64RandomFloats"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64RandomFloats) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof64RandomLongFloats"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof64RandomLongFloats) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof32Decimal"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof32Decimal) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof32Float"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof32Float) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof32FloatExp"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof32FloatExp) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof32Random"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof32Random) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtof32RandomLong"),
		stdgo.strconv_test.Strconv_test.benchmarkAtof32RandomLong) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkParseInt"),
		stdgo.strconv_test.Strconv_test.benchmarkParseInt) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAtoi"),
		stdgo.strconv_test.Strconv_test.benchmarkAtoi) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormatFloat"),
		stdgo.strconv_test.Strconv_test.benchmarkFormatFloat) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendFloat"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendFloat) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormatInt"),
		stdgo.strconv_test.Strconv_test.benchmarkFormatInt) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendInt"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendInt) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormatUint"),
		stdgo.strconv_test.Strconv_test.benchmarkFormatUint) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendUint"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendUint) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormatIntSmall"),
		stdgo.strconv_test.Strconv_test.benchmarkFormatIntSmall) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendIntSmall"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendIntSmall) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendUintVarlen"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendUintVarlen) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkQuote"),
		stdgo.strconv_test.Strconv_test.benchmarkQuote) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkQuoteRune"),
		stdgo.strconv_test.Strconv_test.benchmarkQuoteRune) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendQuote"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendQuote) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAppendQuoteRune"),
		stdgo.strconv_test.Strconv_test.benchmarkAppendQuoteRune) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkUnquoteEasy"),
		stdgo.strconv_test.Strconv_test.benchmarkUnquoteEasy) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkUnquoteHard"),
		stdgo.strconv_test.Strconv_test.benchmarkUnquoteHard) : stdgo.testing.Testing.InternalBenchmark)) : Slice<stdgo.testing.Testing.InternalBenchmark>);

private var _fuzzTargets:Slice<stdgo.testing.Testing.InternalFuzzTarget> = (new Slice<stdgo.testing.Testing.InternalFuzzTarget>(0,
	0) : Slice<stdgo.testing.Testing.InternalFuzzTarget>);

private var _examples:Slice<stdgo.testing.Testing.InternalExample> = (new Slice<stdgo.testing.Testing.InternalExample>(0, 0,
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendBool"), stdgo.strconv_test.Strconv_test.exampleAppendBool, Go.str("bool:true\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendFloat"), stdgo.strconv_test.Strconv_test.exampleAppendFloat,
		Go.str("float32:3.1415927E+00\nfloat64:3.1415926535E+00\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendInt"), stdgo.strconv_test.Strconv_test.exampleAppendInt,
		Go.str("int (base 10):-42\nint (base 16):-2a\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendQuote"), stdgo.strconv_test.Strconv_test.exampleAppendQuote,
		Go.str("quote:\"\\\"Fran & Freddie\'s Diner\\\"\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendQuoteRune"), stdgo.strconv_test.Strconv_test.exampleAppendQuoteRune,
		Go.str("rune:\'☺\'\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendQuoteRuneToASCII"), stdgo.strconv_test.Strconv_test.exampleAppendQuoteRuneToASCII,
		Go.str("rune (ascii):\'\\u263a\'\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendQuoteToASCII"), stdgo.strconv_test.Strconv_test.exampleAppendQuoteToASCII,
		Go.str("quote (ascii):\"\\\"Fran & Freddie\'s Diner\\\"\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAppendUint"), stdgo.strconv_test.Strconv_test.exampleAppendUint,
		Go.str("uint (base 10):42\nuint (base 16):2a\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleAtoi"), stdgo.strconv_test.Strconv_test.exampleAtoi, Go.str("int, 10\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleCanBackquote"), stdgo.strconv_test.Strconv_test.exampleCanBackquote, Go.str("true\nfalse\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFormatBool"), stdgo.strconv_test.Strconv_test.exampleFormatBool, Go.str("string, true\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFormatFloat"), stdgo.strconv_test.Strconv_test.exampleFormatFloat,
		Go.str("string, 3.1415927E+00\nstring, 3.1415926535E+00\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFormatInt"), stdgo.strconv_test.Strconv_test.exampleFormatInt,
		Go.str("string, -42\nstring, -2a\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFormatUint"), stdgo.strconv_test.Strconv_test.exampleFormatUint,
		Go.str("string, 42\nstring, 2a\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIsGraphic"), stdgo.strconv_test.Strconv_test.exampleIsGraphic, Go.str("true\ntrue\nfalse\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIsPrint"), stdgo.strconv_test.Strconv_test.exampleIsPrint, Go.str("true\nfalse\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleItoa"), stdgo.strconv_test.Strconv_test.exampleItoa, Go.str("string, 10\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseBool"), stdgo.strconv_test.Strconv_test.exampleParseBool, Go.str("bool, true\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseFloat"), stdgo.strconv_test.Strconv_test.exampleParseFloat,
		Go.str("float64, 3.1415927410125732\nfloat64, 3.1415926535\nfloat64, NaN\nfloat64, NaN\nfloat64, +Inf\nfloat64, +Inf\nfloat64, -Inf\nfloat64, -0\nfloat64, 0\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseInt"), stdgo.strconv_test.Strconv_test.exampleParseInt,
		Go.str("int64, -354634382\nint64, -3546343826724305832\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseUint"), stdgo.strconv_test.Strconv_test.exampleParseUint,
		Go.str("uint64, 42\nuint64, 42\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuote"), stdgo.strconv_test.Strconv_test.exampleQuote,
		Go.str("\"\\\"Fran & Freddie\'s Diner\\t☺\\\"\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuoteRune"), stdgo.strconv_test.Strconv_test.exampleQuoteRune, Go.str("\'☺\'\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuoteRuneToASCII"), stdgo.strconv_test.Strconv_test.exampleQuoteRuneToASCII,
		Go.str("\'\\u263a\'\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuoteRuneToGraphic"), stdgo.strconv_test.Strconv_test.exampleQuoteRuneToGraphic,
		Go.str("\'☺\'\n\'☺\'\n\'\\n\'\n\'\\t\'\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuoteToASCII"), stdgo.strconv_test.Strconv_test.exampleQuoteToASCII,
		Go.str("\"\\\"Fran & Freddie\'s Diner\\t\\u263a\\\"\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleQuoteToGraphic"), stdgo.strconv_test.Strconv_test.exampleQuoteToGraphic,
		Go.str("\"☺\"\n\"This is a ☺\\t\\n\"\n\"\\\" This is a ☺ \\\\n \\\"\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleUnquote"), stdgo.strconv_test.Strconv_test.exampleUnquote,
		Go.str("\"\", invalid syntax\n\"The string must be either double-quoted\", <nil>\n\"or backquoted.\", <nil>\n\"☺\", <nil>\n\"\", invalid syntax\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleUnquoteChar"), stdgo.strconv_test.Strconv_test.exampleUnquoteChar,
		Go.str("value: \"\nmultibyte: false\ntail: Fran & Freddie\'s Diner\\\"\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleNumError"), stdgo.strconv_test.Strconv_test.exampleNumError,
		Go.str("Func: ParseFloat\nNum: Not a number\nErr: invalid syntax\nstrconv.ParseFloat: parsing \"Not a number\": invalid syntax\n"),
		false) : stdgo.testing.Testing.InternalExample)) : Slice<stdgo.testing.Testing.InternalExample>);

function main():Void {
	var _m = stdgo.testing.Testing.mainStart(Go.asInterface((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)),
		_tests, _benchmarks,
		_fuzzTargets, _examples);
	Sys.exit(_m.run());
}

@:keep var _ = {
	try {
		stdgo.testing.internal.testdeps.Testdeps.importPath = Go.str("strconv");
	} catch (__exception__)
		if (__exception__.message != "__return__")
			throw __exception__;
	true;
};
