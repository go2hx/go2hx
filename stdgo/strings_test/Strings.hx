package stdgo.strings_test;

import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;

private var _tests:Slice<stdgo.testing.Testing.InternalTest> = (new Slice<stdgo.testing.Testing.InternalTest>(0, 0,
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilder"), stdgo.strings_test.Strings_test.testBuilder) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderString"),
		stdgo.strings_test.Strings_test.testBuilderString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderReset"),
		stdgo.strings_test.Strings_test.testBuilderReset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderGrow"), stdgo.strings_test.Strings_test.testBuilderGrow) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderWrite2"),
		stdgo.strings_test.Strings_test.testBuilderWrite2) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderWriteByte"),
		stdgo.strings_test.Strings_test.testBuilderWriteByte) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderAllocs"),
		stdgo.strings_test.Strings_test.testBuilderAllocs) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderCopyPanic"),
		stdgo.strings_test.Strings_test.testBuilderCopyPanic) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBuilderWriteInvalidRune"),
		stdgo.strings_test.Strings_test.testBuilderWriteInvalidRune) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestClone"), stdgo.strings_test.Strings_test.testClone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCompare"), stdgo.strings_test.Strings_test.testCompare) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCompareIdenticalString"),
		stdgo.strings_test.Strings_test.testCompareIdenticalString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCompareStrings"),
		stdgo.strings_test.Strings_test.testCompareStrings) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReader"), stdgo.strings_test.Strings_test.testReader) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadAfterBigSeek"),
		stdgo.strings_test.Strings_test.testReadAfterBigSeek) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaderAt"), stdgo.strings_test.Strings_test.testReaderAt) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaderAtConcurrent"),
		stdgo.strings_test.Strings_test.testReaderAtConcurrent) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEmptyReaderConcurrent"),
		stdgo.strings_test.Strings_test.testEmptyReaderConcurrent) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteTo"), stdgo.strings_test.Strings_test.testWriteTo) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaderLenSize"),
		stdgo.strings_test.Strings_test.testReaderLenSize) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaderReset"), stdgo.strings_test.Strings_test.testReaderReset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReaderZero"), stdgo.strings_test.Strings_test.testReaderZero) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReplacer"), stdgo.strings_test.Strings_test.testReplacer) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestPickAlgorithm"),
		stdgo.strings_test.Strings_test.testPickAlgorithm) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWriteStringError"),
		stdgo.strings_test.Strings_test.testWriteStringError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestGenericTrieBuilding"),
		stdgo.strings_test.Strings_test.testGenericTrieBuilding) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFinderNext"), stdgo.strings_test.Strings_test.testFinderNext) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFinderCreation"),
		stdgo.strings_test.Strings_test.testFinderCreation) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndex"), stdgo.strings_test.Strings_test.testIndex) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLastIndex"), stdgo.strings_test.Strings_test.testLastIndex) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndexAny"), stdgo.strings_test.Strings_test.testIndexAny) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLastIndexAny"),
		stdgo.strings_test.Strings_test.testLastIndexAny) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndexByte"), stdgo.strings_test.Strings_test.testIndexByte) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLastIndexByte"),
		stdgo.strings_test.Strings_test.testLastIndexByte) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndexRandom"), stdgo.strings_test.Strings_test.testIndexRandom) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndexRune"), stdgo.strings_test.Strings_test.testIndexRune) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSplit"), stdgo.strings_test.Strings_test.testSplit) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSplitAfter"), stdgo.strings_test.Strings_test.testSplitAfter) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFields"), stdgo.strings_test.Strings_test.testFields) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFieldsFunc"), stdgo.strings_test.Strings_test.testFieldsFunc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMap"), stdgo.strings_test.Strings_test.testMap) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestToUpper"), stdgo.strings_test.Strings_test.testToUpper) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestToLower"), stdgo.strings_test.Strings_test.testToLower) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestToValidUTF8"), stdgo.strings_test.Strings_test.testToValidUTF8) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSpecialCase"), stdgo.strings_test.Strings_test.testSpecialCase) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTrimSpace"), stdgo.strings_test.Strings_test.testTrimSpace) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTrim"), stdgo.strings_test.Strings_test.testTrim) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTrimFunc"), stdgo.strings_test.Strings_test.testTrimFunc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIndexFunc"), stdgo.strings_test.Strings_test.testIndexFunc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCaseConsistency"),
		stdgo.strings_test.Strings_test.testCaseConsistency) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRepeat"), stdgo.strings_test.Strings_test.testRepeat) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRepeatCatchesOverflow"),
		stdgo.strings_test.Strings_test.testRepeatCatchesOverflow) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRunes"), stdgo.strings_test.Strings_test.testRunes) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadByte"), stdgo.strings_test.Strings_test.testReadByte) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadRune"), stdgo.strings_test.Strings_test.testReadRune) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnreadRuneError"),
		stdgo.strings_test.Strings_test.testUnreadRuneError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReplace"), stdgo.strings_test.Strings_test.testReplace) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTitle"), stdgo.strings_test.Strings_test.testTitle) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestContains"), stdgo.strings_test.Strings_test.testContains) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestContainsAny"), stdgo.strings_test.Strings_test.testContainsAny) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestContainsRune"),
		stdgo.strings_test.Strings_test.testContainsRune) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEqualFold"), stdgo.strings_test.Strings_test.testEqualFold) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCount"), stdgo.strings_test.Strings_test.testCount) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCut"),
		stdgo.strings_test.Strings_test.testCut) : stdgo.testing.Testing.InternalTest)) : Slice<stdgo.testing.Testing.InternalTest>);

private var _benchmarks:Slice<stdgo.testing.Testing.InternalBenchmark> = (new Slice<stdgo.testing.Testing.InternalBenchmark>(0, 0,
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkBuildString_Builder"),
		stdgo.strings_test.Strings_test.benchmarkBuildString_Builder) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkBuildString_ByteBuffer"),
		stdgo.strings_test.Strings_test.benchmarkBuildString_ByteBuffer) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkClone"),
		stdgo.strings_test.Strings_test.benchmarkClone) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkGenericNoMatch"),
		stdgo.strings_test.Strings_test.benchmarkGenericNoMatch) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkGenericMatch1"),
		stdgo.strings_test.Strings_test.benchmarkGenericMatch1) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkGenericMatch2"),
		stdgo.strings_test.Strings_test.benchmarkGenericMatch2) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSingleMaxSkipping"),
		stdgo.strings_test.Strings_test.benchmarkSingleMaxSkipping) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSingleLongSuffixFail"),
		stdgo.strings_test.Strings_test.benchmarkSingleLongSuffixFail) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSingleMatch"),
		stdgo.strings_test.Strings_test.benchmarkSingleMatch) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteByteNoMatch"),
		stdgo.strings_test.Strings_test.benchmarkByteByteNoMatch) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteByteMatch"),
		stdgo.strings_test.Strings_test.benchmarkByteByteMatch) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteStringMatch"),
		stdgo.strings_test.Strings_test.benchmarkByteStringMatch) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkHTMLEscapeNew"),
		stdgo.strings_test.Strings_test.benchmarkHTMLEscapeNew) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkHTMLEscapeOld"),
		stdgo.strings_test.Strings_test.benchmarkHTMLEscapeOld) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteStringReplacerWriteString"),
		stdgo.strings_test.Strings_test.benchmarkByteStringReplacerWriteString) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteReplacerWriteString"),
		stdgo.strings_test.Strings_test.benchmarkByteReplacerWriteString) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteByteReplaces"),
		stdgo.strings_test.Strings_test.benchmarkByteByteReplaces) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkByteByteMap"),
		stdgo.strings_test.Strings_test.benchmarkByteByteMap) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkMap"),
		stdgo.strings_test.Strings_test.benchmarkMap) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexRune"),
		stdgo.strings_test.Strings_test.benchmarkIndexRune) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexRuneLongString"),
		stdgo.strings_test.Strings_test.benchmarkIndexRuneLongString) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexRuneFastPath"),
		stdgo.strings_test.Strings_test.benchmarkIndexRuneFastPath) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndex"),
		stdgo.strings_test.Strings_test.benchmarkIndex) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndex"),
		stdgo.strings_test.Strings_test.benchmarkLastIndex) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexByte"),
		stdgo.strings_test.Strings_test.benchmarkIndexByte) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkToUpper"),
		stdgo.strings_test.Strings_test.benchmarkToUpper) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkToLower"),
		stdgo.strings_test.Strings_test.benchmarkToLower) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkMapNoChanges"),
		stdgo.strings_test.Strings_test.benchmarkMapNoChanges) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTrim"),
		stdgo.strings_test.Strings_test.benchmarkTrim) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkToValidUTF8"),
		stdgo.strings_test.Strings_test.benchmarkToValidUTF8) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkEqualFold"),
		stdgo.strings_test.Strings_test.benchmarkEqualFold) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexHard1"),
		stdgo.strings_test.Strings_test.benchmarkIndexHard1) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexHard2"),
		stdgo.strings_test.Strings_test.benchmarkIndexHard2) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexHard3"),
		stdgo.strings_test.Strings_test.benchmarkIndexHard3) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexHard4"),
		stdgo.strings_test.Strings_test.benchmarkIndexHard4) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndexHard1"),
		stdgo.strings_test.Strings_test.benchmarkLastIndexHard1) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndexHard2"),
		stdgo.strings_test.Strings_test.benchmarkLastIndexHard2) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndexHard3"),
		stdgo.strings_test.Strings_test.benchmarkLastIndexHard3) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountHard1"),
		stdgo.strings_test.Strings_test.benchmarkCountHard1) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountHard2"),
		stdgo.strings_test.Strings_test.benchmarkCountHard2) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountHard3"),
		stdgo.strings_test.Strings_test.benchmarkCountHard3) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexTorture"),
		stdgo.strings_test.Strings_test.benchmarkIndexTorture) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountTorture"),
		stdgo.strings_test.Strings_test.benchmarkCountTorture) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountTortureOverlapping"),
		stdgo.strings_test.Strings_test.benchmarkCountTortureOverlapping) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkCountByte"),
		stdgo.strings_test.Strings_test.benchmarkCountByte) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFields"),
		stdgo.strings_test.Strings_test.benchmarkFields) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFieldsFunc"),
		stdgo.strings_test.Strings_test.benchmarkFieldsFunc) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSplitEmptySeparator"),
		stdgo.strings_test.Strings_test.benchmarkSplitEmptySeparator) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSplitSingleByteSeparator"),
		stdgo.strings_test.Strings_test.benchmarkSplitSingleByteSeparator) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSplitMultiByteSeparator"),
		stdgo.strings_test.Strings_test.benchmarkSplitMultiByteSeparator) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSplitNSingleByteSeparator"),
		stdgo.strings_test.Strings_test.benchmarkSplitNSingleByteSeparator) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSplitNMultiByteSeparator"),
		stdgo.strings_test.Strings_test.benchmarkSplitNMultiByteSeparator) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkRepeat"),
		stdgo.strings_test.Strings_test.benchmarkRepeat) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexAnyASCII"),
		stdgo.strings_test.Strings_test.benchmarkIndexAnyASCII) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexAnyUTF8"),
		stdgo.strings_test.Strings_test.benchmarkIndexAnyUTF8) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndexAnyASCII"),
		stdgo.strings_test.Strings_test.benchmarkLastIndexAnyASCII) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkLastIndexAnyUTF8"),
		stdgo.strings_test.Strings_test.benchmarkLastIndexAnyUTF8) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTrimASCII"),
		stdgo.strings_test.Strings_test.benchmarkTrimASCII) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTrimByte"),
		stdgo.strings_test.Strings_test.benchmarkTrimByte) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkIndexPeriodic"),
		stdgo.strings_test.Strings_test.benchmarkIndexPeriodic) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkJoin"),
		stdgo.strings_test.Strings_test.benchmarkJoin) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTrimSpace"),
		stdgo.strings_test.Strings_test.benchmarkTrimSpace) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkReplaceAll"),
		stdgo.strings_test.Strings_test.benchmarkReplaceAll) : stdgo.testing.Testing.InternalBenchmark)) : Slice<stdgo.testing.Testing.InternalBenchmark>);

private var _fuzzTargets:Slice<stdgo.testing.Testing.InternalFuzzTarget> = (new Slice<stdgo.testing.Testing.InternalFuzzTarget>(0,
	0) : Slice<stdgo.testing.Testing.InternalFuzzTarget>);

private var _examples:Slice<stdgo.testing.Testing.InternalExample> = (new Slice<stdgo.testing.Testing.InternalExample>(0, 0,
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleBuilder"), stdgo.strings_test.Strings_test.exampleBuilder, Go.str("3...2...1...ignition\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleCompare"), stdgo.strings_test.Strings_test.exampleCompare, Go.str("-1\n0\n1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleContains"), stdgo.strings_test.Strings_test.exampleContains,
		Go.str("true\nfalse\ntrue\ntrue\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleContainsAny"), stdgo.strings_test.Strings_test.exampleContainsAny,
		Go.str("false\ntrue\ntrue\ntrue\nfalse\nfalse\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleContainsRune"), stdgo.strings_test.Strings_test.exampleContainsRune, Go.str("true\nfalse\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleCount"), stdgo.strings_test.Strings_test.exampleCount, Go.str("3\n5\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleCut"), stdgo.strings_test.Strings_test.exampleCut,
		Go.str("Cut(\"Gopher\", \"Go\") = \"\", \"pher\", true\nCut(\"Gopher\", \"ph\") = \"Go\", \"er\", true\nCut(\"Gopher\", \"er\") = \"Goph\", \"\", true\nCut(\"Gopher\", \"Badger\") = \"Gopher\", \"\", false\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleEqualFold"), stdgo.strings_test.Strings_test.exampleEqualFold, Go.str("true\ntrue\nfalse\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFields"), stdgo.strings_test.Strings_test.exampleFields,
		Go.str("Fields are: [\"foo\" \"bar\" \"baz\"]\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFieldsFunc"), stdgo.strings_test.Strings_test.exampleFieldsFunc,
		Go.str("Fields are: [\"foo1\" \"bar2\" \"baz3\"]\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleHasPrefix"), stdgo.strings_test.Strings_test.exampleHasPrefix, Go.str("true\nfalse\ntrue\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleHasSuffix"), stdgo.strings_test.Strings_test.exampleHasSuffix,
		Go.str("true\nfalse\nfalse\ntrue\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIndex"), stdgo.strings_test.Strings_test.exampleIndex, Go.str("4\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIndexFunc"), stdgo.strings_test.Strings_test.exampleIndexFunc, Go.str("7\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIndexAny"), stdgo.strings_test.Strings_test.exampleIndexAny, Go.str("2\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIndexByte"), stdgo.strings_test.Strings_test.exampleIndexByte, Go.str("0\n3\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleIndexRune"), stdgo.strings_test.Strings_test.exampleIndexRune, Go.str("4\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLastIndex"), stdgo.strings_test.Strings_test.exampleLastIndex, Go.str("0\n3\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLastIndexAny"), stdgo.strings_test.Strings_test.exampleLastIndexAny, Go.str("4\n8\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLastIndexByte"), stdgo.strings_test.Strings_test.exampleLastIndexByte, Go.str("10\n8\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLastIndexFunc"), stdgo.strings_test.Strings_test.exampleLastIndexFunc, Go.str("5\n2\n-1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleJoin"), stdgo.strings_test.Strings_test.exampleJoin, Go.str("foo, bar, baz\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleRepeat"), stdgo.strings_test.Strings_test.exampleRepeat, Go.str("banana\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleReplace"), stdgo.strings_test.Strings_test.exampleReplace,
		Go.str("oinky oinky oink\nmoo moo moo\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleReplaceAll"), stdgo.strings_test.Strings_test.exampleReplaceAll, Go.str("moo moo moo\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleSplit"), stdgo.strings_test.Strings_test.exampleSplit,
		Go.str("[\"a\" \"b\" \"c\"]\n[\"\" \"man \" \"plan \" \"canal panama\"]\n[\" \" \"x\" \"y\" \"z\" \" \"]\n[\"\"]\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleSplitN"), stdgo.strings_test.Strings_test.exampleSplitN,
		Go.str("[\"a\" \"b,c\"]\n[] (nil = true)\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleSplitAfter"), stdgo.strings_test.Strings_test.exampleSplitAfter,
		Go.str("[\"a,\" \"b,\" \"c\"]\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleSplitAfterN"), stdgo.strings_test.Strings_test.exampleSplitAfterN, Go.str("[\"a,\" \"b,c\"]\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTitle"), stdgo.strings_test.Strings_test.exampleTitle,
		Go.str("Her Royal Highness\nLoud Noises\nХлеб\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToTitle"), stdgo.strings_test.Strings_test.exampleToTitle,
		Go.str("HER ROYAL HIGHNESS\nLOUD NOISES\nХЛЕБ\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToTitleSpecial"), stdgo.strings_test.Strings_test.exampleToTitleSpecial,
		Go.str("DÜNYANIN İLK BORSA YAPISI AİZONAİ KABUL EDİLİR\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleMap"), stdgo.strings_test.Strings_test.exampleMap,
		Go.str("\'Gjnf oevyyvt naq gur fyvgul tbcure...\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleNewReplacer"), stdgo.strings_test.Strings_test.exampleNewReplacer,
		Go.str("This is &lt;b&gt;HTML&lt;/b&gt;!\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToUpper"), stdgo.strings_test.Strings_test.exampleToUpper, Go.str("GOPHER\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToUpperSpecial"), stdgo.strings_test.Strings_test.exampleToUpperSpecial, Go.str("ÖRNEK İŞ\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToLower"), stdgo.strings_test.Strings_test.exampleToLower, Go.str("gopher\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleToLowerSpecial"), stdgo.strings_test.Strings_test.exampleToLowerSpecial, Go.str("önnek iş\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrim"), stdgo.strings_test.Strings_test.exampleTrim, Go.str("Hello, Gophers\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimSpace"), stdgo.strings_test.Strings_test.exampleTrimSpace, Go.str("Hello, Gophers\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimPrefix"), stdgo.strings_test.Strings_test.exampleTrimPrefix, Go.str("Gophers!!!\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimSuffix"), stdgo.strings_test.Strings_test.exampleTrimSuffix, Go.str("¡¡¡Hello\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimFunc"), stdgo.strings_test.Strings_test.exampleTrimFunc, Go.str("Hello, Gophers\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimLeft"), stdgo.strings_test.Strings_test.exampleTrimLeft, Go.str("Hello, Gophers!!!\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimLeftFunc"), stdgo.strings_test.Strings_test.exampleTrimLeftFunc,
		Go.str("Hello, Gophers!!!\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimRight"), stdgo.strings_test.Strings_test.exampleTrimRight, Go.str("¡¡¡Hello, Gophers\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTrimRightFunc"), stdgo.strings_test.Strings_test.exampleTrimRightFunc,
		Go.str("¡¡¡Hello, Gophers\n"), false) : stdgo.testing.Testing.InternalExample)) : Slice<stdgo.testing.Testing.InternalExample>);

function main():Void {
	var _m = stdgo.testing.Testing.mainStart(Go.asInterface((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)),
		_tests, _benchmarks,
		_fuzzTargets, _examples);
	Sys.exit(_m.run());
}

@:keep var _ = {
	try {
		stdgo.testing.internal.testdeps.Testdeps.importPath = Go.str("strings");
	} catch (__exception__)
		if (__exception__.message != "__return__")
			throw __exception__;
	true;
};
