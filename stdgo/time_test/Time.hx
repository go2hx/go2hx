package stdgo.time_test;

import stdgo.StdGoTypes;
import stdgo.Error;
import stdgo.Go;
import stdgo.GoString;
import stdgo.Pointer;
import stdgo.Slice;
import stdgo.GoArray;
import stdgo.GoMap;
import stdgo.Chan;

private var _tests:Slice<stdgo.testing.Testing.InternalTest> = (new Slice<stdgo.testing.Testing.InternalTest>(0, 0,
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNextStdChunk"), stdgo.time_test.Time_test.testNextStdChunk) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRFC3339Conversion"),
		stdgo.time_test.Time_test.testRFC3339Conversion) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormat"), stdgo.time_test.Time_test.testFormat) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestGoString"), stdgo.time_test.Time_test.testGoString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatSingleDigits"),
		stdgo.time_test.Time_test.testFormatSingleDigits) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatShortYear"),
		stdgo.time_test.Time_test.testFormatShortYear) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParse"), stdgo.time_test.Time_test.testParse) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseDayOutOfRange"),
		stdgo.time_test.Time_test.testParseDayOutOfRange) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseInLocation"),
		stdgo.time_test.Time_test.testParseInLocation) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLoadLocationZipFile"),
		stdgo.time_test.Time_test.testLoadLocationZipFile) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestRubyParse"), stdgo.time_test.Time_test.testRubyParse) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatAndParse"), stdgo.time_test.Time_test.testFormatAndParse) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseTimeZone"), stdgo.time_test.Time_test.testParseTimeZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseErrors"), stdgo.time_test.Time_test.testParseErrors) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNoonIs12PM"), stdgo.time_test.Time_test.testNoonIs12PM) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMidnightIs12AM"), stdgo.time_test.Time_test.testMidnightIs12AM) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("Test12PMIsNoon"), stdgo.time_test.Time_test.test12PMIsNoon) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("Test12AMIsMidnight"), stdgo.time_test.Time_test.test12AMIsMidnight) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMissingZone"), stdgo.time_test.Time_test.testMissingZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMinutesInTimeZone"),
		stdgo.time_test.Time_test.testMinutesInTimeZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseSecondsInTimeZone"),
		stdgo.time_test.Time_test.testParseSecondsInTimeZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatSecondsInTimeZone"),
		stdgo.time_test.Time_test.testFormatSecondsInTimeZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnderscoreTwoThousand"),
		stdgo.time_test.Time_test.testUnderscoreTwoThousand) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestStd0xParseError"),
		stdgo.time_test.Time_test.testStd0xParseError) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseMonthOutOfRange"),
		stdgo.time_test.Time_test.testParseMonthOutOfRange) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseYday"), stdgo.time_test.Time_test.testParseYday) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestQuote"), stdgo.time_test.Time_test.testQuote) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFormatFractionalSecondSeparators"),
		stdgo.time_test.Time_test.testFormatFractionalSecondSeparators) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseFractionalSecondsLongerThanNineDigits"),
		stdgo.time_test.Time_test.testParseFractionalSecondsLongerThanNineDigits) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestHasMonotonicClock"),
		stdgo.time_test.Time_test.testHasMonotonicClock) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMonotonicAdd"), stdgo.time_test.Time_test.testMonotonicAdd) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMonotonicSub"), stdgo.time_test.Time_test.testMonotonicSub) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMonotonicOverflow"),
		stdgo.time_test.Time_test.testMonotonicOverflow) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMonotonicString"),
		stdgo.time_test.Time_test.testMonotonicString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSleep"), stdgo.time_test.Time_test.testSleep) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfterFunc"), stdgo.time_test.Time_test.testAfterFunc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfterStress"), stdgo.time_test.Time_test.testAfterStress) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfter"), stdgo.time_test.Time_test.testAfter) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfterTick"), stdgo.time_test.Time_test.testAfterTick) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfterStop"), stdgo.time_test.Time_test.testAfterStop) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAfterQueuing"), stdgo.time_test.Time_test.testAfterQueuing) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimerStopStress"),
		stdgo.time_test.Time_test.testTimerStopStress) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSleepZeroDeadlock"),
		stdgo.time_test.Time_test.testSleepZeroDeadlock) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReset"), stdgo.time_test.Time_test.testReset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOverflowSleep"), stdgo.time_test.Time_test.testOverflowSleep) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestIssue5745"), stdgo.time_test.Time_test.testIssue5745) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestOverflowPeriodRuntimeTimer"),
		stdgo.time_test.Time_test.testOverflowPeriodRuntimeTimer) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZeroTimerResetPanics"),
		stdgo.time_test.Time_test.testZeroTimerResetPanics) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZeroTimerStopPanics"),
		stdgo.time_test.Time_test.testZeroTimerStopPanics) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZeroTimer"), stdgo.time_test.Time_test.testZeroTimer) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimerModifiedEarlier"),
		stdgo.time_test.Time_test.testTimerModifiedEarlier) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAdjustTimers"), stdgo.time_test.Time_test.testAdjustTimers) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTicker"), stdgo.time_test.Time_test.testTicker) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTickerStopWithDirectInitialization"),
		stdgo.time_test.Time_test.testTickerStopWithDirectInitialization) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTeardown"), stdgo.time_test.Time_test.testTeardown) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTick"), stdgo.time_test.Time_test.testTick) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNewTickerLtZeroDuration"),
		stdgo.time_test.Time_test.testNewTickerLtZeroDuration) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTickerResetLtZeroDuration"),
		stdgo.time_test.Time_test.testTickerResetLtZeroDuration) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZoneData"), stdgo.time_test.Time_test.testZoneData) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSecondsToUTC"), stdgo.time_test.Time_test.testSecondsToUTC) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNanosecondsToUTC"),
		stdgo.time_test.Time_test.testNanosecondsToUTC) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSecondsToLocalTime"),
		stdgo.time_test.Time_test.testSecondsToLocalTime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNanosecondsToLocalTime"),
		stdgo.time_test.Time_test.testNanosecondsToLocalTime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSecondsToUTCAndBack"),
		stdgo.time_test.Time_test.testSecondsToUTCAndBack) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNanosecondsToUTCAndBack"),
		stdgo.time_test.Time_test.testNanosecondsToUTCAndBack) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnixMilli"), stdgo.time_test.Time_test.testUnixMilli) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestUnixMicro"), stdgo.time_test.Time_test.testUnixMicro) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTruncateRound"), stdgo.time_test.Time_test.testTruncateRound) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestISOWeek"), stdgo.time_test.Time_test.testISOWeek) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestYearDay"), stdgo.time_test.Time_test.testYearDay) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationString"), stdgo.time_test.Time_test.testDurationString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDate"), stdgo.time_test.Time_test.testDate) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAddDate"), stdgo.time_test.Time_test.testAddDate) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDaysIn"), stdgo.time_test.Time_test.testDaysIn) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestAddToExactSecond"),
		stdgo.time_test.Time_test.testAddToExactSecond) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimeGob"), stdgo.time_test.Time_test.testTimeGob) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestInvalidTimeGob"), stdgo.time_test.Time_test.testInvalidTimeGob) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNotGobEncodableTime"),
		stdgo.time_test.Time_test.testNotGobEncodableTime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimeJSON"), stdgo.time_test.Time_test.testTimeJSON) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestInvalidTimeJSON"),
		stdgo.time_test.Time_test.testInvalidTimeJSON) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestNotJSONEncodableTime"),
		stdgo.time_test.Time_test.testNotJSONEncodableTime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseDuration"), stdgo.time_test.Time_test.testParseDuration) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseDurationErrors"),
		stdgo.time_test.Time_test.testParseDurationErrors) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestParseDurationRoundTrip"),
		stdgo.time_test.Time_test.testParseDurationRoundTrip) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLocationRace"), stdgo.time_test.Time_test.testLocationRace) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestCountMallocs"), stdgo.time_test.Time_test.testCountMallocs) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLoadFixed"), stdgo.time_test.Time_test.testLoadFixed) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestSub"), stdgo.time_test.Time_test.testSub) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationNanoseconds"),
		stdgo.time_test.Time_test.testDurationNanoseconds) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationMicroseconds"),
		stdgo.time_test.Time_test.testDurationMicroseconds) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationMilliseconds"),
		stdgo.time_test.Time_test.testDurationMilliseconds) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationSeconds"),
		stdgo.time_test.Time_test.testDurationSeconds) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationMinutes"),
		stdgo.time_test.Time_test.testDurationMinutes) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationHours"), stdgo.time_test.Time_test.testDurationHours) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationTruncate"),
		stdgo.time_test.Time_test.testDurationTruncate) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationRound"), stdgo.time_test.Time_test.testDurationRound) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDurationAbs"), stdgo.time_test.Time_test.testDurationAbs) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestDefaultLoc"), stdgo.time_test.Time_test.testDefaultLoc) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMarshalBinaryZeroTime"),
		stdgo.time_test.Time_test.testMarshalBinaryZeroTime) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMarshalBinaryVersion2"),
		stdgo.time_test.Time_test.testMarshalBinaryVersion2) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZeroMonthString"),
		stdgo.time_test.Time_test.testZeroMonthString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestWeekdayString"), stdgo.time_test.Time_test.testWeekdayString) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestReadFileLimit"), stdgo.time_test.Time_test.testReadFileLimit) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestConcurrentTimerReset"),
		stdgo.time_test.Time_test.testConcurrentTimerReset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestConcurrentTimerResetStop"),
		stdgo.time_test.Time_test.testConcurrentTimerResetStop) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimeIsDST"), stdgo.time_test.Time_test.testTimeIsDST) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimeAddSecOverflow"),
		stdgo.time_test.Time_test.testTimeAddSecOverflow) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTimeWithZoneTransition"),
		stdgo.time_test.Time_test.testTimeWithZoneTransition) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestZoneBounds"), stdgo.time_test.Time_test.testZoneBounds) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEmbeddedTZData"), stdgo.time_test.Time_test.testEmbeddedTZData) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEnvVarUsage"), stdgo.time_test.Time_test.testEnvVarUsage) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestBadLocationErrMsg"),
		stdgo.time_test.Time_test.testBadLocationErrMsg) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLoadLocationValidatesNames"),
		stdgo.time_test.Time_test.testLoadLocationValidatesNames) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestVersion3"), stdgo.time_test.Time_test.testVersion3) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestFirstZone"), stdgo.time_test.Time_test.testFirstZone) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLocationNames"), stdgo.time_test.Time_test.testLocationNames) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLoadLocationFromTZData"),
		stdgo.time_test.Time_test.testLoadLocationFromTZData) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestEarlyLocation"), stdgo.time_test.Time_test.testEarlyLocation) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestMalformedTZData"),
		stdgo.time_test.Time_test.testMalformedTZData) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestLoadLocationFromTZDataSlim"),
		stdgo.time_test.Time_test.testLoadLocationFromTZDataSlim) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTzset"), stdgo.time_test.Time_test.testTzset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTzsetName"), stdgo.time_test.Time_test.testTzsetName) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTzsetOffset"), stdgo.time_test.Time_test.testTzsetOffset) : stdgo.testing.Testing.InternalTest),
	(new stdgo.testing.Testing.InternalTest(Go.str("TestTzsetRule"),
		stdgo.time_test.Time_test.testTzsetRule) : stdgo.testing.Testing.InternalTest)) : Slice<stdgo.testing.Testing.InternalTest>);

private var _benchmarks:Slice<stdgo.testing.Testing.InternalBenchmark> = (new Slice<stdgo.testing.Testing.InternalBenchmark>(0, 0,
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAfterFunc"),
		stdgo.time_test.Time_test.benchmarkAfterFunc) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkAfter"),
		stdgo.time_test.Time_test.benchmarkAfter) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStop"), stdgo.time_test.Time_test.benchmarkStop) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSimultaneousAfterFunc"),
		stdgo.time_test.Time_test.benchmarkSimultaneousAfterFunc) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStartStop"),
		stdgo.time_test.Time_test.benchmarkStartStop) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkReset"),
		stdgo.time_test.Time_test.benchmarkReset) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSleep"),
		stdgo.time_test.Time_test.benchmarkSleep) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkParallelTimerLatency"),
		stdgo.time_test.Time_test.benchmarkParallelTimerLatency) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkStaggeredTickerLatency"),
		stdgo.time_test.Time_test.benchmarkStaggeredTickerLatency) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTicker"),
		stdgo.time_test.Time_test.benchmarkTicker) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTickerReset"),
		stdgo.time_test.Time_test.benchmarkTickerReset) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkTickerResetNaive"),
		stdgo.time_test.Time_test.benchmarkTickerResetNaive) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkNow"), stdgo.time_test.Time_test.benchmarkNow) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkNowUnixNano"),
		stdgo.time_test.Time_test.benchmarkNowUnixNano) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkNowUnixMilli"),
		stdgo.time_test.Time_test.benchmarkNowUnixMilli) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkNowUnixMicro"),
		stdgo.time_test.Time_test.benchmarkNowUnixMicro) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormat"),
		stdgo.time_test.Time_test.benchmarkFormat) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkFormatNow"),
		stdgo.time_test.Time_test.benchmarkFormatNow) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkMarshalJSON"),
		stdgo.time_test.Time_test.benchmarkMarshalJSON) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkMarshalText"),
		stdgo.time_test.Time_test.benchmarkMarshalText) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkParse"),
		stdgo.time_test.Time_test.benchmarkParse) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkParseDuration"),
		stdgo.time_test.Time_test.benchmarkParseDuration) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkHour"), stdgo.time_test.Time_test.benchmarkHour) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkSecond"),
		stdgo.time_test.Time_test.benchmarkSecond) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkYear"), stdgo.time_test.Time_test.benchmarkYear) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkDay"), stdgo.time_test.Time_test.benchmarkDay) : stdgo.testing.Testing.InternalBenchmark),
	(new stdgo.testing.Testing.InternalBenchmark(Go.str("BenchmarkISOWeek"),
		stdgo.time_test.Time_test.benchmarkISOWeek) : stdgo.testing.Testing.InternalBenchmark)) : Slice<stdgo.testing.Testing.InternalBenchmark>);

private var _fuzzTargets:Slice<stdgo.testing.Testing.InternalFuzzTarget> = (new Slice<stdgo.testing.Testing.InternalFuzzTarget>(0,
	0) : Slice<stdgo.testing.Testing.InternalFuzzTarget>);

private var _examples:Slice<stdgo.testing.Testing.InternalExample> = (new Slice<stdgo.testing.Testing.InternalExample>(0, 0,
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Round"), stdgo.time_test.Time_test.exampleDuration_Round,
		Go.str("d.Round(   1ns) = 1h15m30.918273645s\nd.Round(   1µs) = 1h15m30.918274s\nd.Round(   1ms) = 1h15m30.918s\nd.Round(    1s) = 1h15m31s\nd.Round(    2s) = 1h15m30s\nd.Round(  1m0s) = 1h16m0s\nd.Round( 10m0s) = 1h20m0s\nd.Round(1h0m0s) = 1h0m0s\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_String"), stdgo.time_test.Time_test.exampleDuration_String,
		Go.str("1h2m0.3s\n300ms\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Truncate"), stdgo.time_test.Time_test.exampleDuration_Truncate,
		Go.str("d.Truncate(   1ns) = 1h15m30.918273645s\nd.Truncate(   1µs) = 1h15m30.918273s\nd.Truncate(   1ms) = 1h15m30.918s\nd.Truncate(    1s) = 1h15m30s\nd.Truncate(    2s) = 1h15m30s\nd.Truncate(  1m0s) = 1h15m0s\nd.Truncate( 10m0s) = 1h10m0s\nd.Truncate(1h0m0s) = 1h0m0s\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseDuration"), stdgo.time_test.Time_test.exampleParseDuration,
		Go.str("10h0m0s\n1h10m10s\nThere are 4210 seconds in 1h10m10s.\nThere are 1000 nanoseconds in 1µs.\nThere are 1.00e-06 seconds in 1µs.\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Hours"), stdgo.time_test.Time_test.exampleDuration_Hours,
		Go.str("I\'ve got 4.5 hours of work left.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Microseconds"), stdgo.time_test.Time_test.exampleDuration_Microseconds,
		Go.str("One second is 1000000 microseconds.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Milliseconds"), stdgo.time_test.Time_test.exampleDuration_Milliseconds,
		Go.str("One second is 1000 milliseconds.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Minutes"), stdgo.time_test.Time_test.exampleDuration_Minutes,
		Go.str("The movie is 90 minutes long.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Nanoseconds"), stdgo.time_test.Time_test.exampleDuration_Nanoseconds,
		Go.str("One microsecond is 1000 nanoseconds.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDuration_Seconds"), stdgo.time_test.Time_test.exampleDuration_Seconds,
		Go.str("Take off in t-90 seconds.\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleDate"), stdgo.time_test.Time_test.exampleDate,
		Go.str("Go launched at 2009-11-10 15:00:00 -0800 PST\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Format"), stdgo.time_test.Time_test.exampleTime_Format,
		Go.str("default format: 2015-02-25 11:06:39 -0800 PST\nUnix format: Wed Feb 25 11:06:39 PST 2015\nSame, in UTC: Wed Feb 25 19:06:39 UTC 2015\nin Shanghai with seconds: 2015-02-26T03:06:39 +080000\nin Shanghai with colon seconds: 2015-02-26T03:06:39 +08:00:00\n\nFormats:\n\nBasic full date  \"Mon Jan 2 15:04:05 MST 2006\" gives \"Wed Feb 25 11:06:39 PST 2015\"\nBasic short date \"2006/01/02\" gives \"2015/02/25\"\nAM/PM            \"3PM==3pm==15h\" gives \"11AM==11am==11h\"\nNo fraction      \"Mon Jan _2 15:04:05 MST 2006\" gives \"Wed Feb 25 11:06:39 PST 2015\"\n0s for fraction  \"15:04:05.00000\" gives \"11:06:39.12340\"\n9s for fraction  \"15:04:05.99999999\" gives \"11:06:39.1234\"\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Format_pad"), stdgo.time_test.Time_test.exampleTime_Format_pad,
		Go.str("Unix             \"Mon Jan _2 15:04:05 MST 2006\" gives \"Sat Mar  7 11:06:39 PST 2015\"\nNo pad           \"<2>\" gives \"<7>\"\nSpaces           \"<_2>\" gives \"< 7>\"\nZeros            \"<02>\" gives \"<07>\"\nSuppressed pad   \"04:05\" gives \"06:39\"\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_GoString"), stdgo.time_test.Time_test.exampleTime_GoString,
		Go.str("time.Date(2009, time.November, 10, 23, 0, 0, 0, time.UTC)\ntime.Date(2009, time.November, 10, 23, 1, 0, 0, time.UTC)\ntime.Date(2009, time.December, 10, 23, 1, 0, 0, time.UTC)\ntime.Date(2013, time.February, 3, 19, 54, 0, 0, time.UTC)\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParse"), stdgo.time_test.Time_test.exampleParse,
		Go.str("2013-02-03 19:54:00 -0800 PST\n2013-02-03 00:00:00 +0000 UTC\n2006-01-02 15:04:05 +0000 UTC\n2006-01-02 15:04:05 +0700 +0700\nerror parsing time \"2006-01-02T15:04:05Z07:00\": extra text: \"07:00\"\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleParseInLocation"), stdgo.time_test.Time_test.exampleParseInLocation,
		Go.str("2012-07-09 05:02:00 +0200 CEST\n2012-07-09 00:00:00 +0200 CEST\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleUnix"), stdgo.time_test.Time_test.exampleUnix,
		Go.str("1257894000\n2009-11-10 23:00:00 +0000 UTC\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleUnixMicro"), stdgo.time_test.Time_test.exampleUnixMicro,
		Go.str("1257894000000000\n2009-11-10 23:00:00 +0000 UTC\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleUnixMilli"), stdgo.time_test.Time_test.exampleUnixMilli,
		Go.str("1257894000000\n2009-11-10 23:00:00 +0000 UTC\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Unix"), stdgo.time_test.Time_test.exampleTime_Unix,
		Go.str("2001-09-09 01:46:40 +0000 UTC\n2001-09-09 01:46:40 +0000 UTC\n2001-09-09 01:46:40 +0000 UTC\n1000000000\n1000000000000000000\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Round"), stdgo.time_test.Time_test.exampleTime_Round,
		Go.str("t.Round(   1ns) = 12:15:30.918273645\nt.Round(   1µs) = 12:15:30.918274\nt.Round(   1ms) = 12:15:30.918\nt.Round(    1s) = 12:15:31\nt.Round(    2s) = 12:15:30\nt.Round(  1m0s) = 12:16:00\nt.Round( 10m0s) = 12:20:00\nt.Round(1h0m0s) = 12:00:00\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Truncate"), stdgo.time_test.Time_test.exampleTime_Truncate,
		Go.str("t.Truncate(  1ns) = 12:15:30.918273645\nt.Truncate(  1µs) = 12:15:30.918273\nt.Truncate(  1ms) = 12:15:30.918\nt.Truncate(   1s) = 12:15:30\nt.Truncate(   2s) = 12:15:30\nt.Truncate( 1m0s) = 12:15:00\nt.Truncate(10m0s) = 12:10:00\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLoadLocation"), stdgo.time_test.Time_test.exampleLoadLocation,
		Go.str("2018-08-30 05:00:00 -0700 PDT\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleLocation"), stdgo.time_test.Time_test.exampleLocation, Go.str("true\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Add"), stdgo.time_test.Time_test.exampleTime_Add,
		Go.str("start = 2009-01-01 12:00:00 +0000 UTC\nstart.Add(time.Second * 10) = 2009-01-01 12:00:10 +0000 UTC\nstart.Add(time.Minute * 10) = 2009-01-01 12:10:00 +0000 UTC\nstart.Add(time.Hour * 10) = 2009-01-01 22:00:00 +0000 UTC\nstart.Add(time.Hour * 24 * 10) = 2009-01-11 12:00:00 +0000 UTC\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_AddDate"), stdgo.time_test.Time_test.exampleTime_AddDate,
		Go.str("oneDayLater: start.AddDate(0, 0, 1) = 2009-01-02 00:00:00 +0000 UTC\noneMonthLater: start.AddDate(0, 1, 0) = 2009-02-01 00:00:00 +0000 UTC\noneYearLater: start.AddDate(1, 0, 0) = 2010-01-01 00:00:00 +0000 UTC\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_After"), stdgo.time_test.Time_test.exampleTime_After,
		Go.str("year3000.After(year2000) = true\nyear2000.After(year3000) = false\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Before"), stdgo.time_test.Time_test.exampleTime_Before,
		Go.str("year2000.Before(year3000) = true\nyear3000.Before(year2000) = false\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Date"), stdgo.time_test.Time_test.exampleTime_Date,
		Go.str("year = 2000\nmonth = February\nday = 1\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Day"), stdgo.time_test.Time_test.exampleTime_Day, Go.str("day = 1\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Equal"), stdgo.time_test.Time_test.exampleTime_Equal,
		Go.str("datesEqualUsingEqualOperator = false\ndatesEqualUsingFunction = true\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_String"), stdgo.time_test.Time_test.exampleTime_String,
		Go.str("withNanoseconds = 2000-02-01 12:13:14.000000015 +0000 UTC\nwithoutNanoseconds = 2000-02-01 12:13:14 +0000 UTC\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_Sub"), stdgo.time_test.Time_test.exampleTime_Sub, Go.str("difference = 12h0m0s\n"),
		false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleTime_AppendFormat"), stdgo.time_test.Time_test.exampleTime_AppendFormat,
		Go.str("Time: 11:00AM\n"), false) : stdgo.testing.Testing.InternalExample),
	(new stdgo.testing.Testing.InternalExample(Go.str("ExampleFixedZone"), stdgo.time_test.Time_test.exampleFixedZone,
		Go.str("The time is: 10 Nov 09 23:00 UTC-8\n"), false) : stdgo.testing.Testing.InternalExample)) : Slice<stdgo.testing.Testing.InternalExample>);

function main():Void {
	var _m = stdgo.testing.Testing.mainStart(Go.asInterface((new stdgo.testing.internal.testdeps.Testdeps.TestDeps() : stdgo.testing.internal.testdeps.Testdeps.TestDeps)),
		_tests, _benchmarks,
		_fuzzTargets, _examples);
	Sys.exit(_m.run());
}

@:keep var _ = {
	try {
		stdgo.testing.internal.testdeps.Testdeps.importPath = Go.str("time");
	} catch (__exception__)
		if (__exception__.message != "__return__")
			throw __exception__;
	true;
};
