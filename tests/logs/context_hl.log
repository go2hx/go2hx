=== RUN  TestCustomContextAfterFuncCancel

-- PASS: TestCustomContextAfterFuncCancel

=== RUN  TestCustomContextAfterFuncTimeout

-- PASS: TestCustomContextAfterFuncTimeout

=== RUN  TestCustomContextAfterFuncAfterFunc

-- PASS: TestCustomContextAfterFuncAfterFunc

=== RUN  TestCustomContextAfterFuncUnregisterCancel

-- PASS: TestCustomContextAfterFuncUnregisterCancel

=== RUN  TestCustomContextAfterFuncUnregisterTimeout

-- PASS: TestCustomContextAfterFuncUnregisterTimeout

=== RUN  TestCustomContextAfterFuncUnregisterAfterFunc

-- PASS: TestCustomContextAfterFuncUnregisterAfterFunc

=== RUN  TestDeadlineExceededIsNetError

-- PASS: TestDeadlineExceededIsNetError

=== RUN  TestParentFinishesChild
bad linkage: pc.children = map[], want context.Background.WithCancel.WithCancel, context.Background.WithCancel.WithValue(type string, val value).WithDeadline(2025-09-20 02:47:32 +0000 UTC+0 m=+3600000.000000001 [1000h0m0s]), and an afterFunc
bad linkage: parentCancelCtx(cancelChild.Context) = <nil>, false want context.Background.WithCancel, true
bad linkage: parentCancelCtx(timerChild.Context) = <nil>, false want context.Background.WithCancel, true
Exception: null pointer dereference
Called from go._internal.context._Context_xtestparentfinisheschild.$Context_xtestparentfinisheschild_Fields_.xTestParentFinishesChild (golibs/go/_internal/context/Context_xtestparentfinisheschild.hx line 383)
Called from _internal.context_test._Context_test_testparentfinisheschild.$Context_test_testparentfinisheschild_Fields_.testParentFinishesChild (golibs/_internal/context_test/Context_test_testparentfinisheschild.hx line 4)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestParentFinishesChild

=== RUN  TestChildFinishesFirst
bad linkage: parentCancelCtx(cc.Context) = <nil>, false want context.Background.WithCancel, true
bad linkage: pc.children = map[], cc = context.Background.WithCancel.WithCancel

-- FAIL: TestChildFinishesFirst

=== RUN  TestCancelRemoves
with WithCancel child : context has 0 children, want 1
with WithTimeout child : context has 0 children, want 1
with AfterFunc child : context has 0 children, want 1

-- FAIL: TestCancelRemoves

=== RUN  TestCustomContextGoroutines
1 goroutines created1 goroutines createdException: __fail__
Called from go._internal.context._Context_xtestcustomcontextgoroutines.$Context_xtestcustomcontextgoroutines_Fields_.xTestCustomContextGoroutines (golibs/go/_internal/context/Context_xtestcustomcontextgoroutines.hx line 155)
Called from _internal.context_test._Context_test_testcustomcontextgoroutines.$Context_test_testcustomcontextgoroutines_Fields_.testCustomContextGoroutines (golibs/_internal/context_test/Context_test_testcustomcontextgoroutines.hx line 4)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestCustomContextGoroutines

=== RUN  TestBackground

-- PASS: TestBackground

=== RUN  TestTODO

-- PASS: TestTODO

=== RUN  TestWithCancel

-- PASS: TestWithCancel

=== RUN  TestDeadline
Exception: T_:testing.deadline is not yet implemented
Called from _internal.context_test._Context_test__testdeadline.$Context_test__testdeadline_Fields_._testDeadline (golibs/_internal/context_test/Context_test__testdeadline.hx line 135)
Called from _internal.context_test._Context_test_testdeadline.$Context_test_testdeadline_Fields_.testDeadline (golibs/_internal/context_test/Context_test_testdeadline.hx line 23)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestDeadline

=== RUN  TestTimeout
Exception: T_:testing.deadline is not yet implemented
Called from _internal.context_test._Context_test__testdeadline.$Context_test__testdeadline_Fields_._testDeadline (golibs/_internal/context_test/Context_test__testdeadline.hx line 135)
Called from _internal.context_test._Context_test_testtimeout.$Context_test_testtimeout_Fields_.testTimeout (golibs/_internal/context_test/Context_test_testtimeout.hx line 23)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestTimeout

=== RUN  TestCanceledTimeout

-- PASS: TestCanceledTimeout

=== RUN  TestValues
c1.Value(k2).(string) = "c1k1", true want "", false
c.String() = "context.Background.WithValue(type _internal.context_test.key1, val c1k1)" want "context.Background.WithValue(type context_test.key1, val c1k1)"
c2.Value(k1).(string) = "c2k2", true want "c1k1", true
c2.Value(k1).(string) = "c2k2", true want "c1k1", true
c4.Value(k2).(string) = "", false want "c2k2", true
o1.Value(k2).(string) = "c1k1", true want "", false
o2.Value(k1).(string) = "o2k2", true want "c1k1", true
o3.Value(k2).(string) = "", false want "c2k2", true
o4.Value(k2).(string) = "", false want "c2k2", true

-- FAIL: TestValues

=== RUN  TestAllocs
golibs/go/_internal/testing/Testing_allocsperrun.hx:3: allocsPerRun not implemented
golibs/go/_internal/testing/Testing_allocsperrun.hx:3: allocsPerRun not implemented
golibs/go/_internal/testing/Testing_allocsperrun.hx:3: allocsPerRun not implemented
golibs/go/_internal/testing/Testing_allocsperrun.hx:3: allocsPerRun not implemented
golibs/go/_internal/testing/Testing_allocsperrun.hx:3: allocsPerRun not implemented

-- PASS: TestAllocs

=== RUN  TestSimultaneousCancels
Exception: T_:testing.deadline is not yet implemented
Called from _internal.context_test._Context_test_testsimultaneouscancels.$Context_test_testsimultaneouscancels_Fields_.testSimultaneousCancels (golibs/_internal/context_test/Context_test_testsimultaneouscancels.hx line 197)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestSimultaneousCancels

=== RUN  TestInterlockedCancels
Exception: T_:testing.deadline is not yet implemented
Called from _internal.context_test._Context_test_testinterlockedcancels.$Context_test_testinterlockedcancels_Fields_.testInterlockedCancels (golibs/_internal/context_test/Context_test_testinterlockedcancels.hx line 113)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestInterlockedCancels

=== RUN  TestLayersCancel
seed=1754736457000000000: ctx should be canceled

-- FAIL: TestLayersCancel

=== RUN  TestLayersTimeout
Exception: T_:testing.deadline is not yet implemented
Called from _internal.context_test._Context_test__testlayers.$Context_test__testlayers_Fields_._testLayers (golibs/_internal/context_test/Context_test__testlayers.hx line 257)
Called from _internal.context_test._Context_test_testlayerstimeout.$Context_test_testlayerstimeout_Fields_.testLayersTimeout (golibs/_internal/context_test/Context_test_testlayerstimeout.hx line 4)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestLayersTimeout

=== RUN  TestWithCancelCanceledParent
child has wrong cause; got = <nil>, want = Because!

-- FAIL: TestWithCancelCanceledParent

=== RUN  TestWithCancelSimultaneouslyCanceledParent
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!
child has wrong cause; got = <nil>, want = Because!

-- FAIL: TestWithCancelSimultaneouslyCanceledParent

=== RUN  TestWithValueChecksKey

-- PASS: TestWithValueChecksKey

=== RUN  TestInvalidDerivedFail

-- PASS: TestInvalidDerivedFail

=== RUN  TestDeadlineExceededSupportsTimeout

-- PASS: TestDeadlineExceededSupportsTimeout

=== RUN  TestCause
- SUBRUN  Background
- SUBRUN  TODO
- SUBRUN  WithCancel
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithCancelCause
Cause(ctx) = <nil> want parentCause
- SUBRUN  WithCancelCause nil
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithCancelCause: parent cause before child
Cause(ctx) = <nil> want parentCause
- SUBRUN  WithCancelCause: parent cause after child
Cause(ctx) = <nil> want childCause
- SUBRUN  WithCancelCause: parent cause before nil
Cause(ctx) = <nil> want parentCause
- SUBRUN  WithCancelCause: parent cause after nil
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithCancelCause: child cause after nil
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithCancelCause: child cause before nil
Cause(ctx) = <nil> want childCause
- SUBRUN  WithTimeout
Cause(ctx) = <nil> want context deadline exceeded
- SUBRUN  WithTimeout canceled
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithTimeoutCause
Cause(ctx) = <nil> want tooSlow
- SUBRUN  WithTimeoutCause canceled
Cause(ctx) = <nil> want context canceled
- SUBRUN  WithTimeoutCause stacked
Cause(ctx) = <nil> want tooSlow
- SUBRUN  WithTimeoutCause stacked canceled
ctx.Err() = <nil> want context canceled
Cause(ctx) = <nil> want finishedEarly
- SUBRUN  WithoutCancel
- SUBRUN  WithoutCancel canceled
- SUBRUN  WithoutCancel timeout

-- FAIL: TestCause

=== RUN  TestCauseRace
Exception: :runtime.gosched is not yet implemented
Called from go._internal.runtime._Runtime_gosched.$Runtime_gosched_Fields_.gosched (golibs/go/_internal/runtime/Runtime_gosched.hx line 2)
Called from _internal.context_test._Context_test_testcauserace.$Context_test_testcauserace_Fields_.testCauseRace (golibs/_internal/context_test/Context_test_testcauserace.hx line 57)
Called from go._internal.testing.$M_static_extension.run (golibs/go/_internal/testing/Testing_m_static_extension.hx line 39)
Called from _internal.contextdottest._Contextdottest.$Contextdottest_Fields_.main (golibs/_internal/contextdottest/Contextdottest.hx line 49)

-- FAIL: TestCauseRace

=== RUN  TestWithoutCancel

-- PASS: TestWithoutCancel

=== RUN  TestCustomContextPropagation
child has wrong cause; got = <nil>, want = TestCustomContextPropagation

-- FAIL: TestCustomContextPropagation

=== RUN  TestAfterFuncCalledAfterCancel

-- PASS: TestAfterFuncCalledAfterCancel

=== RUN  TestAfterFuncCalledAfterTimeout

-- PASS: TestAfterFuncCalledAfterTimeout

=== RUN  TestAfterFuncCalledImmediately

-- PASS: TestAfterFuncCalledImmediately

=== RUN  TestAfterFuncNotCalledAfterStop

-- PASS: TestAfterFuncNotCalledAfterStop

=== RUN  TestAfterFuncCalledAsynchronously

-- PASS: TestAfterFuncCalledAsynchronously

golibs/go/_internal/testing/Testing_m_static_extension.hx:97: exitCode: 1 exitCodeReason: 
-- FAIL: TestCustomContextPropagation
