[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/Process.hx:41: characters 1-7

  41 | @:enum abstract ProcessEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/child_process/ChildProcess.hx:38: characters 1-7

  38 | @:enum abstract ChildProcessEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/events/EventEmitter.hx:35: characters 1-7

  35 | @:enum abstract EventEmitterEvent<T:Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/stream/Readable.hx:40: characters 1-7

  40 | @:enum abstract ReadableEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/stream/Writable.hx:43: characters 1-7

  43 | @:enum abstract WritableEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/ChildProcess.hx:139: characters 1-7

 139 | @:enum abstract ChildProcessSpawnOptionsStdioSimple(String) from String to String {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/ChildProcess.hx:159: characters 1-7

 159 | @:enum abstract ChildProcessSpawnOptionsStdioBehaviour(String) from String to String {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/Fs.hx:171: characters 1-7

 171 | @:enum abstract SymlinkType(String) from String to String {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/Fs.hx:187: characters 1-7

 187 | @:enum abstract FsOpenFlag(String) from String to String {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/fs/FSWatcher.hx:36: characters 1-7

  36 | @:enum abstract FSWatcherChangeType(String) from String to String {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/fs/FSWatcher.hx:44: characters 1-7

  44 | @:enum abstract FSWatcherEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/fs/ReadStream.hx:28: characters 1-7

  28 | @:enum abstract ReadStreamEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[WARNING] /home/runner/haxe/haxe_libraries/hxnodejs/12.1.0/github/e37e79fce8a2a2177a0a73ce9d8eff2acdbcfa8b/src/js/node/fs/WriteStream.hx:28: characters 1-7

  28 | @:enum abstract WriteStreamEvent<T:haxe.Constraints.Function>(Event<T>) to Event<T> {
     | ^^^^^^
     | (WDeprecatedEnumAbstract) `@:enum abstract` is deprecated in favor of `enum abstract`

[ERROR] golibs/_internal/reflect_test/Reflect_test__nametests.hx:2: characters 2619-3006

   2 | var _nameTests : stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest> = (new stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest>(10, 10, ...[(new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<stdgo.GoInt32>)), ("int32" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface(stdgo.Go.asInterface((null : stdgo.Ref<_internal.reflect_test.Reflect_test_d1.D1>))), ("D1" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Slice<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<() -> _internal.reflect_test.Reflect_test_d1.D1>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<stdgo.AnyInterface>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<_internal.reflect_test.Reflect_test_t__interface_4.T__interface_4>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<_internal.reflect_test.Reflect_test_thenameofthistypeisexactly255byteslongsowhenthecompilerprependsthereflecttestpackagenameandextrastarthelinkerruntimeandreflectpackageswillhavetocorrectlydecodethesecondlengthb.TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthB>)), ("TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest)].concat([for (i in 10 ... (10 > 10 ? 10 : 10 : stdgo.GoInt).toBasic()) ({} : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest)])) : stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest>);
     |
     | Type not found : _internal.reflect_test.Reflect_test_thenameofthistypeisexactly255byteslongsowhenthecompilerprependsthereflecttestpackagenameandextrastarthelinkerruntimeandreflectpackageswillhavetocorrectlydecodethesecondlengthb

      ->  /home/runner/haxe/versions/b0b2997/std/haxe/macro/Context.hx:513: characters 10-30

      513 |   return load("typeof", 1)(e);
          |          ^^^^^^^^^^^^^^^^^^^^
          | Called from here

      ->  golibs/stdgo/Go.macro.hx:673: characters 11-31

      673 |   var t = Context.typeof(expr);
          |           ^^^^^^^^^^^^^^^^^^^^
          | Called from here

      ->  golibs/_internal/reflect_test/Reflect_test__nametests.hx:2: characters 2576-3009

        2 | var _nameTests : stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest> = (new stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest>(10, 10, ...[(new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<stdgo.GoInt32>)), ("int32" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface(stdgo.Go.asInterface((null : stdgo.Ref<_internal.reflect_test.Reflect_test_d1.D1>))), ("D1" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Slice<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<() -> _internal.reflect_test.Reflect_test_d1.D1>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<stdgo.Chan<_internal.reflect_test.Reflect_test_d1.D1>>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<stdgo.AnyInterface>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Ref<_internal.reflect_test.Reflect_test_t__interface_4.T__interface_4>)), (stdgo.Go.str() : stdgo.GoString)?.__copy__()) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest), (new _internal.reflect_test.Reflect_test_t_nametest.T_nameTest(stdgo.Go.toInterface((null : stdgo.Pointer<_internal.reflect_test.Reflect_test_thenameofthistypeisexactly255byteslongsowhenthecompilerprependsthereflecttestpackagenameandextrastarthelinkerruntimeandreflectpackageswillhavetocorrectlydecodethesecondlengthb.TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthB>)), ("TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678" : stdgo.GoString)) : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest)].concat([for (i in 10 ... (10 > 10 ? 10 : 10 : stdgo.GoInt).toBasic()) ({} : _internal.reflect_test.Reflect_test_t_nametest.T_nameTest)])) : stdgo.Slice<_internal.reflect_test.Reflect_test_t_nametest.T_nameTest>);
          |
          | Called from here

          | For optional function argument '_v'

