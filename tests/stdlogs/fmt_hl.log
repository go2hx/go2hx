=== RUN  TestErrorf

-- FAIL: TestErrorf

=== RUN  TestFmtInterface
-- PASS: TestFmtInterface

=== RUN  TestSprintf

-- FAIL: TestSprintf

=== RUN  TestComplexFormatting
-- PASS: TestComplexFormatting

=== RUN  TestReorder
-- PASS: TestReorder

=== RUN  TestCountMallocs
skipping malloc count in short mode
-- SKIP: TestCountMallocs

=== RUN  TestFlagParser
-- PASS: TestFlagParser

=== RUN  TestStructPrinter
Sprintf("%#v", s) = `_internal.fmt_test.T_47832{a:"abc", b:"def", c:123}`, want `fmt_test.T{a:"abc", b:"def", c:123}`Sprintf("%#v", &s) = `&_internal.fmt_test.T_47832{a:"abc", b:"def", c:123}`, want `&fmt_test.T{a:"abc", b:"def", c:123}`
-- FAIL: TestStructPrinter

=== RUN  TestSlicePrinter
-- PASS: TestSlicePrinter

=== RUN  TestMapPrinter
-- PASS: TestMapPrinter

=== RUN  TestEmptyMap
-- PASS: TestEmptyMap

=== RUN  TestBlank
-- PASS: TestBlank

=== RUN  TestBlankln
-- PASS: TestBlankln

=== RUN  TestFormatterPrintln
-- PASS: TestFormatterPrintln

=== RUN  TestWidthAndPrecision
-- PASS: TestWidthAndPrecision

=== RUN  TestPanics
./_internal/fmt_test/Fmt_test_testPanics.hx:3: testPanics skip function
-- PASS: TestPanics

=== RUN  TestBadVerbRecursion
-- PASS: TestBadVerbRecursion

=== RUN  TestIsSpace
-- PASS: TestIsSpace

=== RUN  TestNilDoesNotBecomeTyped
expected:
	"%!s(<nil>) %!s(*fmt_test.A=<nil>) %!s(<nil>) {} %!s(<nil>)"
got:
	"%!s(<nil>) %!s(*_internal.fmt_test.A_55372=<nil>) %!s(<nil>) {} %!s(<nil>)"
-- FAIL: TestNilDoesNotBecomeTyped

=== RUN  TestFormatterFlags
Sprintf("%#v", [1]_internal.fmt_test.flagPrinter) = "[1]_internal.fmt_test.flagPrinter{[%#v]}", want "[1]fmt_test.flagPrinter{[%#v]}"
-- FAIL: TestFormatterFlags

=== RUN  TestParsenum
-- PASS: TestParsenum

=== RUN  TestAppendf
-- PASS: TestAppendf

=== RUN  TestAppend
-- PASS: TestAppend

=== RUN  TestAppendln
-- PASS: TestAppendln

=== RUN  TestScan
-- PASS: TestScan

=== RUN  TestScanln
-- PASS: TestScanln

=== RUN  TestScanf

-- FAIL: TestScanf

=== RUN  TestScanOverflow

-- FAIL: TestScanOverflow

=== RUN  TestNaN

-- FAIL: TestNaN

=== RUN  TestInf

-- FAIL: TestInf

=== RUN  TestScanfMulti
-- PASS: TestScanfMulti

=== RUN  TestScanMultiple

-- FAIL: TestScanMultiple

=== RUN  TestScanEmpty
Sscan <one item> expected error; got none
Sscan <empty> expected error; got none

-- FAIL: TestScanEmpty

=== RUN  TestScanNotPointer

-- FAIL: TestScanNotPointer

=== RUN  TestScanlnNoNewline
expected error scanning string missing newline

-- FAIL: TestScanlnNoNewline

=== RUN  TestScanlnWithMiddleNewline
expected error scanning string with extra newline

-- FAIL: TestScanlnWithMiddleNewline

=== RUN  TestEOF
expected error scanning empty string

-- FAIL: TestEOF

=== RUN  TestEOFAtEndOfInput
Sscanf expected EOF; got %!q(nil=<nil>)Sscan expected EOF; got %!q(nil=<nil>)Sscan expected EOF; got %!q(nil=<nil>)
-- FAIL: TestEOFAtEndOfInput

=== RUN  TestEOFAllTypes
#0: %s *string not eof on empty string: %!s(nil=<nil>)#0: %s *string not eof on trailing blanks: %!s(nil=<nil>)#1: %q *string not eof on empty string: %!s(nil=<nil>)#1: %q *string not eof on trailing blanks: %!s(nil=<nil>)#2: %x *string not eof on empty string: %!s(nil=<nil>)#2: %x *string not eof on trailing blanks: %!s(nil=<nil>)#3: %v *string not eof on empty string: %!s(nil=<nil>)#3: %v *string not eof on trailing blanks: %!s(nil=<nil>)#4: %v *[]uint8 not eof on empty string: %!s(nil=<nil>)#4: %v *[]uint8 not eof on trailing blanks: %!s(nil=<nil>)#5: %v *int not eof on empty string: %!s(nil=<nil>)#5: %v *int not eof on trailing blanks: %!s(nil=<nil>)#6: %v *uint not eof on empty string: %!s(nil=<nil>)#6: %v *uint not eof on trailing blanks: %!s(nil=<nil>)#7: %v *bool not eof on empty string: %!s(nil=<nil>)#7: %v *bool not eof on trailing blanks: %!s(nil=<nil>)#8: %v *float32 not eof on empty string: %!s(nil=<nil>)#8: %v *float32 not eof on trailing blanks: %!s(nil=<nil>)#9: %v *complex64 not eof on empty string: %!s(nil=<nil>)#9: %v *complex64 not eof on trailing blanks: %!s(nil=<nil>)#10: %v *_internal.fmt_test.renamedString not eof on empty string: %!s(nil=<nil>)#10: %v *_internal.fmt_test.renamedString not eof on trailing blanks: %!s(nil=<nil>)#11: %v *_internal.fmt_test.renamedBytes not eof on empty string: %!s(nil=<nil>)#11: %v *_internal.fmt_test.renamedBytes not eof on trailing blanks: %!s(nil=<nil>)#12: %v *_internal.fmt_test.renamedInt not eof on empty string: %!s(nil=<nil>)#12: %v *_internal.fmt_test.renamedInt not eof on trailing blanks: %!s(nil=<nil>)#13: %v *_internal.fmt_test.renamedUint not eof on empty string: %!s(nil=<nil>)#13: %v *_internal.fmt_test.renamedUint not eof on trailing blanks: %!s(nil=<nil>)#14: %v *_internal.fmt_test.renamedBool not eof on empty string: %!s(nil=<nil>)#14: %v *_internal.fmt_test.renamedBool not eof on trailing blanks: %!s(nil=<nil>)#15: %v *_internal.fmt_test.renamedFloat32 not eof on empty string: %!s(nil=<nil>)#15: %v *_internal.fmt_test.renamedFloat32 not eof on trailing blanks: %!s(nil=<nil>)#16: %v *_internal.fmt_test.renamedComplex64 not eof on empty string: %!s(nil=<nil>)#16: %v *_internal.fmt_test.renamedComplex64 not eof on trailing blanks: %!s(nil=<nil>)
-- FAIL: TestEOFAllTypes

=== RUN  TestUnreadRuneWithBufio
-- PASS: TestUnreadRuneWithBufio

=== RUN  TestMultiLine
Sscanln: expected error; got none

-- FAIL: TestMultiLine

=== RUN  TestLineByLineFscanf
-- PASS: TestLineByLineFscanf

=== RUN  TestScanStateCount
-- PASS: TestScanStateCount

=== RUN  TestScanInts
-- PASS: TestScanInts

=== RUN  TestHexBytes
simple: bad length 0simple pair a: bad length 0simple pair b: bad length 0colon: bad length 0colon pair a: bad length 0colon pair b: bad length 0odd count: got count, err = 0, <nil>; expected 0, error
-- FAIL: TestHexBytes

=== RUN  TestScanNewlinesAreSpaces
-- PASS: TestScanNewlinesAreSpaces

=== RUN  TestScanlnNewlinesTerminate
one line one item: expected error; got nonetwo lines two items: expected error; got none
-- FAIL: TestScanlnNewlinesTerminate

=== RUN  TestScanfNewlineMatchFormat
newline in input: expected error; got nonespace-newline in input: expected error; got nonenewline in format: expected error; got nonespace-newline in format: expected error; got nonespace vs newline no-percent 0100: expected error; got nonespace vs newline no-percent 0101: expected error; got nonespace vs newline no-percent 0110: expected error; got nonespace vs newline no-percent 1100: expected error; got nonespace vs newline no-percent 1110: expected error; got none
-- FAIL: TestScanfNewlineMatchFormat

=== RUN  TestHexByte
-- PASS: TestHexByte

=== RUN  TestFormatString
-- PASS: TestFormatString

=== RUN  TestStringer
-- PASS: TestStringer

