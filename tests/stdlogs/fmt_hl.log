=== RUN  TestErrorf
Exception: stdgo._internal.math.bits.T_errorString_asInterface
Called from stdgo._AnyInterface.$AnyInterface_Impl_.equals (stdgo/AnyInterface.hx line 181)
Called from stdgo._internal.reflect._Reflect_deepEqual.$Reflect_deepEqual_Fields_.deepEqual (stdgo/_internal/reflect/Reflect_deepEqual.hx line 4)
Called from _internal.fmt_test._Fmt_test_testErrorf.$Fmt_test_testErrorf_Fields_.testErrorf (_internal/fmt_test/Fmt_test_testErrorf.hx line 32)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestErrorf

=== RUN  TestFmtInterface
-- PASS: TestFmtInterface

=== RUN  TestSprintf
Exception: Can't cast stdgo._internal.reflect.Value_asInterface to stdgo._internal.reflect.Value
Called from stdgo._internal.fmt.$T_pp_static_extension._printArg (stdgo/_internal/fmt/Fmt_T_pp_static_extension.hx line 833)
Called from stdgo._internal.fmt.$T_pp_static_extension._doPrintf (stdgo/_internal/fmt/Fmt_T_pp_static_extension.hx line 179)
Called from _internal.fmt_test._Fmt_test_testErrorf.$Fmt_test_testErrorf_Fields_.testErrorf (_internal/fmt_test/Fmt_test_testErrorf.hx line 32)
Called from stdgo._internal.fmt._Fmt_sprintf.$Fmt_sprintf_Fields_.sprintf (stdgo/_internal/fmt/Fmt_sprintf.hx line 5)
Called from _internal.fmt_test._Fmt_test_testSprintf.$Fmt_test_testSprintf_Fields_.testSprintf (_internal/fmt_test/Fmt_test_testSprintf.hx line 4)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestSprintf

=== RUN  TestComplexFormatting
-- PASS: TestComplexFormatting

=== RUN  TestReorder
-- PASS: TestReorder

=== RUN  TestCountMallocs
skipping malloc count in short mode
Exception: __skip__
Called from stdgo._internal.testing.$T_common_static_extension.skipNow (stdgo/_internal/testing/Testing_T_common_static_extension.hx line 28)
Called from stdgo._internal.testing.$T_common_static_extension.skip (stdgo/_internal/testing/Testing_T_common_static_extension.hx line 44)
Called from stdgo._internal.testing.T_.~get_skip.0 (stdgo/_internal/testing/Testing_T_.hx line 67)
Called from _internal.fmt_test._Fmt_test_testCountMallocs.$Fmt_test_testCountMallocs_Fields_.testCountMallocs (_internal/fmt_test/Fmt_test_testCountMallocs.hx line 4)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)
-- SKIP: TestCountMallocs

=== RUN  TestFlagParser
-- PASS: TestFlagParser

=== RUN  TestStructPrinter
Sprintf("%#v", s) = `_internal.fmt_test.T_47832{a:"abc", b:"def", c:123}`, want `fmt_test.T{a:"abc", b:"def", c:123}`Sprintf("%#v", &s) = `&_internal.fmt_test.T_47832{a:"abc", b:"def", c:123}`, want `&fmt_test.T{a:"abc", b:"def", c:123}`
-- FAIL: TestStructPrinter

=== RUN  TestSlicePrinter
-- PASS: TestSlicePrinter

=== RUN  TestMapPrinter
-- PASS: TestMapPrinter

=== RUN  TestEmptyMap
-- PASS: TestEmptyMap

=== RUN  TestBlank
-- PASS: TestBlank

=== RUN  TestBlankln
-- PASS: TestBlankln

=== RUN  TestFormatterPrintln
-- PASS: TestFormatterPrintln

=== RUN  TestWidthAndPrecision
-- PASS: TestWidthAndPrecision

=== RUN  TestPanics
-- SKIP: testPanics
-- PASS: TestPanics

=== RUN  TestBadVerbRecursion
-- PASS: TestBadVerbRecursion

=== RUN  TestIsSpace
-- PASS: TestIsSpace

=== RUN  TestNilDoesNotBecomeTyped
expected:
	"%!s(<nil>) %!s(*fmt_test.A=<nil>) %!s(<nil>) {} %!s(<nil>)"
got:
	"%!s(<nil>) %!s(*_internal.fmt_test.A_55372=<nil>) %!s(<nil>) {} %!s(<nil>)"
-- FAIL: TestNilDoesNotBecomeTyped

=== RUN  TestFormatterFlags
Sprintf("%#v", [1]_internal.fmt_test.flagPrinter) = "[1]_internal.fmt_test.flagPrinter{[%#v]}", want "[1]fmt_test.flagPrinter{[%#v]}"
-- FAIL: TestFormatterFlags

=== RUN  TestParsenum
-- PASS: TestParsenum

=== RUN  TestAppendf
-- PASS: TestAppendf

=== RUN  TestAppend
-- PASS: TestAppend

=== RUN  TestAppendln
-- PASS: TestAppendln

=== RUN  TestScan
-- PASS: TestScan

=== RUN  TestScanln
-- PASS: TestScanln

=== RUN  TestScanf
Exception: array out of bounds, index: 0 length: 0
Called from stdgo._internal.fmt.$T_ss_static_extension._doScanf (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 119)
Called from stdgo._internal.fmt._Fmt_fscanf.$Fmt_fscanf_Fields_.fscanf (stdgo/_internal/fmt/Fmt_fscanf.hx line 7)
Called from stdgo._internal.fmt._Fmt_sscanf.$Fmt_sscanf_Fields_.sscanf (stdgo/_internal/fmt/Fmt_sscanf.hx line 6)
Called from _internal.fmt_test._Fmt_test_testScanf.$Fmt_test_testScanf_Fields_.testScanf (_internal/fmt_test/Fmt_test_testScanf.hx line 4)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestScanf

=== RUN  TestScanOverflow
Exception: array out of bounds, index: 0 length: 0
Called from stdgo._internal.regexp.syntax._Syntax__parse.$Syntax__parse_Fields_._parse (stdgo/_internal/regexp/syntax/Syntax__parse.hx line 815)
Called from stdgo._internal.fmt._Fmt__errorHandler.$Fmt__errorHandler_Fields_._errorHandler (stdgo/_internal/fmt/Fmt__errorHandler.hx line 35)
Called from stdgo._internal.fmt.$T_ss_static_extension._doScanf (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 119)
Called from stdgo._internal.regexp.syntax._Syntax_parse.$Syntax_parse_Fields_.parse (stdgo/_internal/regexp/syntax/Syntax_parse.hx line 3)
Called from stdgo._internal.regexp._Regexp__compile.$Regexp__compile_Fields_._compile (stdgo/_internal/regexp/Regexp__compile.hx line 3)
Called from stdgo._internal.regexp._Regexp_compile.$Regexp_compile_Fields_.compile (stdgo/_internal/regexp/Regexp_compile.hx line 3)
Called from stdgo._internal.regexp._Regexp_mustCompile.$Regexp_mustCompile_Fields_.mustCompile (stdgo/_internal/regexp/Regexp_mustCompile.hx line 3)
Called from _internal.fmt_test._Fmt_test_testScanOverflow.$Fmt_test_testScanOverflow_Fields_.testScanOverflow (_internal/fmt_test/Fmt_test_testScanOverflow.hx line 3)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestScanOverflow

=== RUN  TestNaN
Exception: array out of bounds, index: 0 length: 0
Called from stdgo._internal.fmt.$T_ss_static_extension._doScan (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 276)
Called from stdgo._internal.fmt._Fmt_fscan.$Fmt_fscan_Fields_.fscan (stdgo/_internal/fmt/Fmt_fscan.hx line 7)
Called from _internal.fmt_test._Fmt_test__verifyNaN.$Fmt_test__verifyNaN_Fields_._verifyNaN (_internal/fmt_test/Fmt_test__verifyNaN.hx line 13)
Called from _internal.fmt_test._Fmt_test_testNaN.$Fmt_test_testNaN_Fields_.testNaN (_internal/fmt_test/Fmt_test_testNaN.hx line 4)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestNaN

=== RUN  TestInf
Exception: array out of bounds, index: 0 length: 0
Called from stdgo._internal.fmt.$T_ss_static_extension._doScan (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 276)
Called from stdgo._internal.fmt._Fmt_fscan.$Fmt_fscan_Fields_.fscan (stdgo/_internal/fmt/Fmt_fscan.hx line 7)
Called from _internal.fmt_test._Fmt_test__verifyInf.$Fmt_test__verifyInf_Fields_._verifyInf (_internal/fmt_test/Fmt_test__verifyInf.hx line 13)
Called from _internal.fmt_test._Fmt_test_testInf.$Fmt_test_testInf_Fields_.testInf (_internal/fmt_test/Fmt_test_testInf.hx line 4)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestInf

=== RUN  TestScanfMulti
-- PASS: TestScanfMulti

=== RUN  TestScanMultiple
Exception: array out of bounds, index: 0 length: 0
Called from stdgo._internal.fmt.$T_ss_static_extension._doScan (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 276)
Called from stdgo._internal.fmt._Fmt_fscan.$Fmt_fscan_Fields_.fscan (stdgo/_internal/fmt/Fmt_fscan.hx line 7)
Called from stdgo._internal.fmt._Fmt_sscan.$Fmt_sscan_Fields_.sscan (stdgo/_internal/fmt/Fmt_sscan.hx line 6)
Called from _internal.fmt_test._Fmt_test_testScanMultiple.$Fmt_test_testScanMultiple_Fields_.testScanMultiple (_internal/fmt_test/Fmt_test_testScanMultiple.hx line 9)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestScanMultiple

=== RUN  TestScanEmpty
Sscan <one item> expected error; got none
Sscan <empty> expected error; got none

-- FAIL: TestScanEmpty

=== RUN  TestScanNotPointer
Exception: Can't cast i32 to stdgo.PointerData
Called from stdgo._internal.fmt.$T_ss_static_extension._doScan (stdgo/_internal/fmt/Fmt_T_ss_static_extension.hx line 276)
Called from stdgo._internal.fmt._Fmt_fscan.$Fmt_fscan_Fields_.fscan (stdgo/_internal/fmt/Fmt_fscan.hx line 7)
Called from _internal.fmt_test._Fmt_test_testScanNotPointer.$Fmt_test_testScanNotPointer_Fields_.testScanNotPointer (_internal/fmt_test/Fmt_test_testScanNotPointer.hx line 5)
Called from stdgo._internal.testing.$M_static_extension.run (stdgo/_internal/testing/Testing_M_static_extension.hx line 34)
Called from _internal.fmt_dot_test._Fmt_dot_test.$Fmt_dot_test_Fields_.main (_internal/fmt_dot_test/Fmt_dot_test.hx line 4)

-- FAIL: TestScanNotPointer

=== RUN  TestScanlnNoNewline
expected error scanning string missing newline

-- FAIL: TestScanlnNoNewline

=== RUN  TestScanlnWithMiddleNewline
expected error scanning string with extra newline

-- FAIL: TestScanlnWithMiddleNewline

=== RUN  TestEOF
expected error scanning empty string

-- FAIL: TestEOF

=== RUN  TestEOFAtEndOfInput
Sscanf expected EOF; got %!q(nil=<nil>)Sscan expected EOF; got %!q(nil=<nil>)Sscan expected EOF; got %!q(nil=<nil>)
-- FAIL: TestEOFAtEndOfInput

=== RUN  TestEOFAllTypes
#0: %s *string not eof on empty string: %!s(nil=<nil>)#0: %s *string not eof on trailing blanks: %!s(nil=<nil>)#1: %q *string not eof on empty string: %!s(nil=<nil>)#1: %q *string not eof on trailing blanks: %!s(nil=<nil>)#2: %x *string not eof on empty string: %!s(nil=<nil>)#2: %x *string not eof on trailing blanks: %!s(nil=<nil>)#3: %v *string not eof on empty string: %!s(nil=<nil>)#3: %v *string not eof on trailing blanks: %!s(nil=<nil>)#4: %v *[]uint8 not eof on empty string: %!s(nil=<nil>)#4: %v *[]uint8 not eof on trailing blanks: %!s(nil=<nil>)#5: %v *int not eof on empty string: %!s(nil=<nil>)#5: %v *int not eof on trailing blanks: %!s(nil=<nil>)#6: %v *uint not eof on empty string: %!s(nil=<nil>)#6: %v *uint not eof on trailing blanks: %!s(nil=<nil>)#7: %v *bool not eof on empty string: %!s(nil=<nil>)#7: %v *bool not eof on trailing blanks: %!s(nil=<nil>)#8: %v *float32 not eof on empty string: %!s(nil=<nil>)#8: %v *float32 not eof on trailing blanks: %!s(nil=<nil>)#9: %v *complex64 not eof on empty string: %!s(nil=<nil>)#9: %v *complex64 not eof on trailing blanks: %!s(nil=<nil>)#10: %v *_internal.fmt_test.renamedString not eof on empty string: %!s(nil=<nil>)#10: %v *_internal.fmt_test.renamedString not eof on trailing blanks: %!s(nil=<nil>)#11: %v *_internal.fmt_test.renamedBytes not eof on empty string: %!s(nil=<nil>)#11: %v *_internal.fmt_test.renamedBytes not eof on trailing blanks: %!s(nil=<nil>)#12: %v *_internal.fmt_test.renamedInt not eof on empty string: %!s(nil=<nil>)#12: %v *_internal.fmt_test.renamedInt not eof on trailing blanks: %!s(nil=<nil>)#13: %v *_internal.fmt_test.renamedUint not eof on empty string: %!s(nil=<nil>)#13: %v *_internal.fmt_test.renamedUint not eof on trailing blanks: %!s(nil=<nil>)#14: %v *_internal.fmt_test.renamedBool not eof on empty string: %!s(nil=<nil>)#14: %v *_internal.fmt_test.renamedBool not eof on trailing blanks: %!s(nil=<nil>)#15: %v *_internal.fmt_test.renamedFloat32 not eof on empty string: %!s(nil=<nil>)#15: %v *_internal.fmt_test.renamedFloat32 not eof on trailing blanks: %!s(nil=<nil>)#16: %v *_internal.fmt_test.renamedComplex64 not eof on empty string: %!s(nil=<nil>)#16: %v *_internal.fmt_test.renamedComplex64 not eof on trailing blanks: %!s(nil=<nil>)
-- FAIL: TestEOFAllTypes

=== RUN  TestUnreadRuneWithBufio
-- PASS: TestUnreadRuneWithBufio

=== RUN  TestMultiLine
Sscanln: expected error; got none

-- FAIL: TestMultiLine

=== RUN  TestLineByLineFscanf
-- PASS: TestLineByLineFscanf

=== RUN  TestScanStateCount
-- PASS: TestScanStateCount

=== RUN  TestScanInts
-- PASS: TestScanInts

=== RUN  TestHexBytes
simple: bad length 0simple pair a: bad length 0simple pair b: bad length 0colon: bad length 0colon pair a: bad length 0colon pair b: bad length 0odd count: got count, err = 0, <nil>; expected 0, error
-- FAIL: TestHexBytes

=== RUN  TestScanNewlinesAreSpaces
-- PASS: TestScanNewlinesAreSpaces

=== RUN  TestScanlnNewlinesTerminate
one line one item: expected error; got nonetwo lines two items: expected error; got none
-- FAIL: TestScanlnNewlinesTerminate

=== RUN  TestScanfNewlineMatchFormat
newline in input: expected error; got nonespace-newline in input: expected error; got nonenewline in format: expected error; got nonespace-newline in format: expected error; got nonespace vs newline no-percent 0100: expected error; got nonespace vs newline no-percent 0101: expected error; got nonespace vs newline no-percent 0110: expected error; got nonespace vs newline no-percent 1100: expected error; got nonespace vs newline no-percent 1110: expected error; got none
-- FAIL: TestScanfNewlineMatchFormat

=== RUN  TestHexByte
-- PASS: TestHexByte

=== RUN  TestFormatString
-- PASS: TestFormatString

=== RUN  TestStringer
-- PASS: TestStringer

