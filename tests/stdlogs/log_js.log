=== RUN  TestDefault

-- PASS: TestDefault

=== RUN  TestAll
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)
log output should match <invalid reflect.Value> is %!q(MISSING)

-- FAIL: TestAll

=== RUN  TestOutput

-- PASS: TestOutput

=== RUN  TestNonNewLogger

-- PASS: TestNonNewLogger

=== RUN  TestOutputRace

-- PASS: TestOutputRace

=== RUN  TestFlagAndPrefixSetting
Prefix: expected "Test:" got <invalid reflect.Value>
Prefix: expected "Reality:" got <invalid reflect.Value>
<invalid reflect.Value>

-- FAIL: TestFlagAndPrefixSetting

=== RUN  TestUTCFlag
got <invalid reflect.Value>; want %!q(MISSING)

-- FAIL: TestUTCFlag

=== RUN  TestEmptyPrintCreatesLine
expected 2 headers, got <invalid reflect.Value>

-- FAIL: TestEmptyPrintCreatesLine

=== RUN  TestDiscard
-- SKIP: testDiscard

-- PASS: TestDiscard

./stdgo/_internal/testing/Testing_m_static_extension.hx:60: exitCode: 1
./stdgo/_internal/testing/Testing_m_static_extension.hx:61: exitCodeReason: 
-- FAIL: TestEmptyPrintCreatesLine
