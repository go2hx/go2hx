[ERROR] ./stdgo/_internal/slices/Slices_testclone.hx:22: characters 194-198

 22 |                 @:check2r _t.errorf(("Clone(%v) = %#v, want %#v" : stdgo.GoString), stdgo.Go.toInterface((_s1.__slice__(0, (0 : stdgo.GoInt)) : stdgo.Slice<stdgo.GoInt>)), stdgo.Go.toInterface(_got), stdgo.Go.toInterface((_s1.__slice__(0, (0 : stdgo.GoInt)) : stdgo.Slice<stdgo.GoInt>)));
    |                                                                                                                                                                                                  ^^^^
    | Any should be { length : stdgo.GoInt }
    | For function argument 'value'

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:9: characters 18-26

  9 |         if ((_s2.capacity < ((1000 : stdgo.GoInt) + (_s1.length) : stdgo.GoInt) : Bool)) {
    |                  ^^^^^^^^
    | Any has no field capacity

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:10: characters 143-151

 10 |             @:check2r _t.errorf(("after Grow(%v) cap = %d, want >= %d" : stdgo.GoString), stdgo.Go.toInterface(_s1), stdgo.Go.toInterface(_s2.capacity), stdgo.Go.toInterface(((1000 : stdgo.GoInt) + (_s1.length) : stdgo.GoInt)));
    |                                                                                                                                               ^^^^^^^^
    | Any has no field capacity

     ->  /home/runner/haxe/versions/c4868e5/std/haxe/macro/Context.hx:504: characters 10-30

     504 |   return load("typeof", 1)(e);
         |          ^^^^^^^^^^^^^^^^^^^^
         | Called from here

     ->  stdgo/Go.macro.hx:653: characters 11-31

     653 |   var t = Context.typeof(expr);
         |           ^^^^^^^^^^^^^^^^^^^^
         | Called from here

     ->  ./stdgo/_internal/slices/Slices_testgrow.hx:10: characters 118-152

      10 |             @:check2r _t.errorf(("after Grow(%v) cap = %d, want >= %d" : stdgo.GoString), stdgo.Go.toInterface(_s1), stdgo.Go.toInterface(_s2.capacity), stdgo.Go.toInterface(((1000 : stdgo.GoInt) + (_s1.length) : stdgo.GoInt)));
         |                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         | Called from here

         | For function argument ''

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:23: characters 67-75

 23 |                 stdgo._internal.slices.Slices_grow.grow(_s2, (_s2.capacity - (_s2.length) : stdgo.GoInt));
    |                                                                   ^^^^^^^^
    | Any has no field capacity

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:23: characters 83-89

 23 |                 stdgo._internal.slices.Slices_grow.grow(_s2, (_s2.capacity - (_s2.length) : stdgo.GoInt));
    |                                                                                   ^^^^^^
    | Any has no field length

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:31: characters 68-76

 31 |                 stdgo._internal.slices.Slices_grow.grow(_s2, ((_s2.capacity - (_s2.length) : stdgo.GoInt) + (1 : stdgo.GoInt) : stdgo.GoInt));
    |                                                                    ^^^^^^^^
    | Any has no field capacity

[ERROR] ./stdgo/_internal/slices/Slices_testgrow.hx:31: characters 84-90

 31 |                 stdgo._internal.slices.Slices_grow.grow(_s2, ((_s2.capacity - (_s2.length) : stdgo.GoInt) + (1 : stdgo.GoInt) : stdgo.GoInt));
    |                                                                                    ^^^^^^
    | Any has no field length

[ERROR] ./stdgo/_internal/slices/Slices_testclip.hx:15: characters 17-25

 15 |         if (_s2.capacity != ((3 : stdgo.GoInt))) {
    |                 ^^^^^^^^
    | Any has no field capacity

[ERROR] ./stdgo/_internal/slices/Slices_testclip.hx:16: characters 136-144

 16 |             @:check2r _t.errorf(("cap(Clip(%v)) = %d, want 3" : stdgo.GoString), stdgo.Go.toInterface(_orig), stdgo.Go.toInterface(_s2.capacity));
    |                                                                                                                                        ^^^^^^^^
    | Any has no field capacity

     ->  /home/runner/haxe/versions/c4868e5/std/haxe/macro/Context.hx:504: characters 10-30

     504 |   return load("typeof", 1)(e);
         |          ^^^^^^^^^^^^^^^^^^^^
         | Called from here

     ->  stdgo/Go.macro.hx:653: characters 11-31

     653 |   var t = Context.typeof(expr);
         |           ^^^^^^^^^^^^^^^^^^^^
         | Called from here

     ->  ./stdgo/_internal/slices/Slices_testclip.hx:16: characters 111-145

      16 |             @:check2r _t.errorf(("cap(Clip(%v)) = %d, want 3" : stdgo.GoString), stdgo.Go.toInterface(_orig), stdgo.Go.toInterface(_s2.capacity));
         |                                                                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         | Called from here

         | For function argument ''

