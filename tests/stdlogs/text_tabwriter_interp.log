=== RUN  Test
--- test: 1b esc (written all at once)
--- src:
"\xff\xff"
--- found:
""
--- expected:
"\xff\xff"

--- test: 1b esc (written byte-by-byte)
--- src:
"\xff\xff"
--- found:
""
--- expected:
"\xff\xff"

--- test: 1b esc (written in fibonacci slices)
--- src:
"\xff\xff"
--- found:
""
--- expected:
"\xff\xff"

--- test: 1c esc stripped (written all at once)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\t"

--- test: 1c esc stripped (written byte-by-byte)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\t"

--- test: 1c esc stripped (written in fibonacci slices)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\t"

--- test: 1c esc (written all at once)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\xff\t\xff"

--- test: 1c esc (written byte-by-byte)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\xff\t\xff"

--- test: 1c esc (written in fibonacci slices)
--- src:
"\xff\t\xff"
--- found:
""
--- expected:
"\xff\t\xff"

--- test: 1d esc stripped (written all at once)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\"foo\t\n\tbar\""

--- test: 1d esc stripped (written byte-by-byte)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\"foo\t\n\tbar\""

--- test: 1d esc stripped (written in fibonacci slices)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\"foo\t\n\tbar\""

--- test: 1d esc (written all at once)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\xff\"foo\t\n\tbar\"\xff"

--- test: 1d esc (written byte-by-byte)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\xff\"foo\t\n\tbar\"\xff"

--- test: 1d esc (written in fibonacci slices)
--- src:
"\xff\"foo\t\n\tbar\"\xff"
--- found:
""
--- expected:
"\xff\"foo\t\n\tbar\"\xff"

--- test: 1e esc stripped (written all at once)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\tdef"

--- test: 1e esc stripped (written byte-by-byte)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\tdef"

--- test: 1e esc stripped (written in fibonacci slices)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\tdef"

--- test: 1e esc (written all at once)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\xff\tdef"

--- test: 1e esc (written byte-by-byte)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\xff\tdef"

--- test: 1e esc (written in fibonacci slices)
--- src:
"abc\xff\tdef"
--- found:
""
--- expected:
"abc\xff\tdef"

--- test: 3 (written all at once)
--- src:
"a\nb\nc"
--- found:
"\n\n"
--- expected:
"a\nb\nc"

--- test: 3 (written byte-by-byte)
--- src:
"a\nb\nc"
--- found:
"\n\n"
--- expected:
"a\nb\nc"

--- test: 3 (written in fibonacci slices)
--- src:
"a\nb\nc"
--- found:
"\n\n"
--- expected:
"a\nb\nc"

--- test: 5 (written all at once)
--- src:
"*\t*"
--- found:
""
--- expected:
"*.......*"

--- test: 5 (written byte-by-byte)
--- src:
"*\t*"
--- found:
""
--- expected:
"*.......*"

--- test: 5 (written in fibonacci slices)
--- src:
"*\t*"
--- found:
""
--- expected:
"*.......*"

--- test: 5b (written all at once)
--- src:
"*\t*\n"
--- found:
"\n"
--- expected:
"*.......*\n"

--- test: 5b (written byte-by-byte)
--- src:
"*\t*\n"
--- found:
"\n"
--- expected:
"*.......*\n"

--- test: 5b (written in fibonacci slices)
--- src:
"*\t*\n"
--- found:
"\n"
--- expected:
"*.......*\n"

--- test: 5c (written all at once)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......*"

--- test: 5c (written byte-by-byte)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......*"

--- test: 5c (written in fibonacci slices)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......*"

--- test: 5c debug (written all at once)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......|*"

--- test: 5c debug (written byte-by-byte)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......|*"

--- test: 5c debug (written in fibonacci slices)
--- src:
"*\t*\t"
--- found:
""
--- expected:
"*.......|*"

--- test: 5d (written all at once)
--- src:
"*\t*\t"
--- found:
""
--- expected:
".......**"

--- test: 5d (written byte-by-byte)
--- src:
"*\t*\t"
--- found:
""
--- expected:
".......**"

--- test: 5d (written in fibonacci slices)
--- src:
"*\t*\t"
--- found:
""
--- expected:
".......**"

--- test: 6 (written all at once)
--- src:
"\t\n"
--- found:
"\n"
--- expected:
"........\n"

--- test: 6 (written byte-by-byte)
--- src:
"\t\n"
--- found:
"\n"
--- expected:
"........\n"

--- test: 6 (written in fibonacci slices)
--- src:
"\t\n"
--- found:
"\n"
--- expected:
"........\n"

--- test: 7a (written all at once)
--- src:
"a) foo"
--- found:
""
--- expected:
"a) foo"

--- test: 7a (written byte-by-byte)
--- src:
"a) foo"
--- found:
""
--- expected:
"a) foo"

--- test: 7a (written in fibonacci slices)
--- src:
"a) foo"
--- found:
""
--- expected:
"a) foo"

--- test: 7b (written all at once)
--- src:
"b) foo\tbar"
--- found:
""
--- expected:
"b) foo  bar"

--- test: 7b (written byte-by-byte)
--- src:
"b) foo\tbar"
--- found:
""
--- expected:
"b) foo  bar"

--- test: 7b (written in fibonacci slices)
--- src:
"b) foo\tbar"
--- found:
""
--- expected:
"b) foo  bar"

--- test: 7c (written all at once)
--- src:
"c) foo\tbar\t"
--- found:
""
--- expected:
"c) foo..bar"

--- test: 7c (written byte-by-byte)
--- src:
"c) foo\tbar\t"
--- found:
""
--- expected:
"c) foo..bar"

--- test: 7c (written in fibonacci slices)
--- src:
"c) foo\tbar\t"
--- found:
""
--- expected:
"c) foo..bar"

--- test: 7d (written all at once)
--- src:
"d) foo\tbar\n"
--- found:
"\n"
--- expected:
"d) foo..bar\n"

--- test: 7d (written byte-by-byte)
--- src:
"d) foo\tbar\n"
--- found:
"\n"
--- expected:
"d) foo..bar\n"

--- test: 7d (written in fibonacci slices)
--- src:
"d) foo\tbar\n"
--- found:
"\n"
--- expected:
"d) foo..bar\n"

--- test: 7e (written all at once)
--- src:
"e) foo\tbar\t\n"
--- found:
"\n"
--- expected:
"e) foo..bar.....\n"

--- test: 7e (written byte-by-byte)
--- src:
"e) foo\tbar\t\n"
--- found:
"\n"
--- expected:
"e) foo..bar.....\n"

--- test: 7e (written in fibonacci slices)
--- src:
"e) foo\tbar\t\n"
--- found:
"\n"
--- expected:
"e) foo..bar.....\n"

--- test: 7f (written all at once)
--- src:
"f) f&lt;o\t<b>bar</b>\t\n"
--- found:
"\n"
--- expected:
"f) f&lt;o..<b>bar</b>.....\n"

--- test: 7f (written byte-by-byte)
--- src:
"f) f&lt;o\t<b>bar</b>\t\n"
--- found:
"\n"
--- expected:
"f) f&lt;o..<b>bar</b>.....\n"

--- test: 7f (written in fibonacci slices)
--- src:
"f) f&lt;o\t<b>bar</b>\t\n"
--- found:
"\n"
--- expected:
"f) f&lt;o..<b>bar</b>.....\n"

--- test: 7g (written all at once)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..<b>bar</b>..... non-terminated entity &amp"

--- test: 7g (written byte-by-byte)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..<b>bar</b>..... non-terminated entity &amp"

--- test: 7g (written in fibonacci slices)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..<b>bar</b>..... non-terminated entity &amp"

--- test: 7g debug (written all at once)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..|<b>bar</b>.....| non-terminated entity &amp"

--- test: 7g debug (written byte-by-byte)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..|<b>bar</b>.....| non-terminated entity &amp"

--- test: 7g debug (written in fibonacci slices)
--- src:
"g) f&lt;o\t<b>bar</b>\t non-terminated entity &amp"
--- found:
""
--- expected:
"g) f&lt;o..|<b>bar</b>.....| non-terminated entity &amp"

--- test: 8 (written all at once)
--- src:
"Hello, world!\n"
--- found:
"\n"
--- expected:
"Hello, world!\n"

--- test: 8 (written byte-by-byte)
--- src:
"Hello, world!\n"
--- found:
"\n"
--- expected:
"Hello, world!\n"

--- test: 8 (written in fibonacci slices)
--- src:
"Hello, world!\n"
--- found:
"\n"
--- expected:
"Hello, world!\n"

--- test: 9a (written all at once)
--- src:
"1\t2\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2..3...4\n11222333344444\n"

--- test: 9a (written byte-by-byte)
--- src:
"1\t2\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2..3...4\n11222333344444\n"

--- test: 9a (written in fibonacci slices)
--- src:
"1\t2\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2..3...4\n11222333344444\n"

--- test: 9b (written all at once)
--- src:
"1\t2<!---\f--->\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2<!---\f--->..3...4\n11222333344444\n"

--- test: 9b (written byte-by-byte)
--- src:
"1\t2<!---\f--->\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2<!---\f--->..3...4\n11222333344444\n"

--- test: 9b (written in fibonacci slices)
--- src:
"1\t2<!---\f--->\t3\t4\n11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1.2<!---\f--->..3...4\n11222333344444\n"

--- test: 9c (written all at once)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1234\n11222333344444\n"

--- test: 9c (written byte-by-byte)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1234\n11222333344444\n"

--- test: 9c (written in fibonacci slices)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n\n"
--- expected:
"1234\n11222333344444\n"

--- test: 9c debug (written all at once)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n---\n\n"
--- expected:
"1|2|3|4\n---\n11|222|3333|44444\n"

--- test: 9c debug (written byte-by-byte)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n---\n\n"
--- expected:
"1|2|3|4\n---\n11|222|3333|44444\n"

--- test: 9c debug (written in fibonacci slices)
--- src:
"1\t2\t3\t4\f11\t222\t3333\t44444\n"
--- found:
"\n---\n\n"
--- expected:
"1|2|3|4\n---\n11|222|3333|44444\n"

--- test: 10a (written all at once)
--- src:
"1\t2\t3\t4\n"
--- found:
"\n"
--- expected:
"1....2....3....4\n"

--- test: 10a (written byte-by-byte)
--- src:
"1\t2\t3\t4\n"
--- found:
"\n"
--- expected:
"1....2....3....4\n"

--- test: 10a (written in fibonacci slices)
--- src:
"1\t2\t3\t4\n"
--- found:
"\n"
--- expected:
"1....2....3....4\n"

--- test: 10b (written all at once)
--- src:
"1\t2\t3\t4\t\n"
--- found:
"\n"
--- expected:
"1....2....3....4....\n"

--- test: 10b (written byte-by-byte)
--- src:
"1\t2\t3\t4\t\n"
--- found:
"\n"
--- expected:
"1....2....3....4....\n"

--- test: 10b (written in fibonacci slices)
--- src:
"1\t2\t3\t4\t\n"
--- found:
"\n"
--- expected:
"1....2....3....4....\n"

--- test: 11 (written all at once)
--- src:
"本\tb\tc\naa\t本本本\tcccc\tddddd\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"本.......b.......c\naa......本本本.....cccc....ddddd\naaa.....bbbb\n"

--- test: 11 (written byte-by-byte)
--- src:
"本\tb\tc\naa\t本本本\tcccc\tddddd\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"本.......b.......c\naa......本本本.....cccc....ddddd\naaa.....bbbb\n"

--- test: 11 (written in fibonacci slices)
--- src:
"本\tb\tc\naa\t本本本\tcccc\tddddd\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"本.......b.......c\naa......本本本.....cccc....ddddd\naaa.....bbbb\n"

--- test: 12a (written all at once)
--- src:
"a\tè\tc\t\naa\tèèè\tcccc\tddddd\t\naaa\tèèèè\t\n"
--- found:
"\n\n\n"
--- expected:
"       a       è       c\n      aa     èèè    cccc   ddddd\n     aaa    èèèè\n"

--- test: 12a (written byte-by-byte)
--- src:
"a\tè\tc\t\naa\tèèè\tcccc\tddddd\t\naaa\tèèèè\t\n"
--- found:
"\n\n\n"
--- expected:
"       a       è       c\n      aa     èèè    cccc   ddddd\n     aaa    èèèè\n"

--- test: 12a (written in fibonacci slices)
--- src:
"a\tè\tc\t\naa\tèèè\tcccc\tddddd\t\naaa\tèèèè\t\n"
--- found:
"\n\n\n"
--- expected:
"       a       è       c\n      aa     èèè    cccc   ddddd\n     aaa    èèèè\n"

--- test: 12b (written all at once)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a  b  c\naa bbbcccc\naaabbbb\n"

--- test: 12b (written byte-by-byte)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a  b  c\naa bbbcccc\naaabbbb\n"

--- test: 12b (written in fibonacci slices)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a  b  c\naa bbbcccc\naaabbbb\n"

--- test: 12c (written all at once)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a_______b_______c\naa______bbb_____cccc\naaa_____bbbb\n"

--- test: 12c (written byte-by-byte)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a_______b_______c\naa______bbb_____cccc\naaa_____bbbb\n"

--- test: 12c (written in fibonacci slices)
--- src:
"a\tb\tc\naa\tbbb\tcccc\naaa\tbbbb\n"
--- found:
"\n\n\n"
--- expected:
"a_______b_______c\naa______bbb_____cccc\naaa_____bbbb\n"

--- test: 13a (written all at once)
--- src:
"4444\t日本語\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444------日本語-22--1---333\n999999999-22\n7---------22\n------------------88888888\n\n666666-666666-666666----4444\n1------1------999999999-0000000000\n"

--- test: 13a (written byte-by-byte)
--- src:
"4444\t日本語\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444------日本語-22--1---333\n999999999-22\n7---------22\n------------------88888888\n\n666666-666666-666666----4444\n1------1------999999999-0000000000\n"

--- test: 13a (written in fibonacci slices)
--- src:
"4444\t日本語\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444------日本語-22--1---333\n999999999-22\n7---------22\n------------------88888888\n\n666666-666666-666666----4444\n1------1------999999999-0000000000\n"

--- test: 13b (written all at once)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444........333...22...1...333\n999999999...22\n7...........22\n....................88888888\n\n666666...666666...666666......4444\n1........1........999999999...0000000000\n"

--- test: 13b (written byte-by-byte)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444........333...22...1...333\n999999999...22\n7...........22\n....................88888888\n\n666666...666666...666666......4444\n1........1........999999999...0000000000\n"

--- test: 13b (written in fibonacci slices)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t999999999\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444........333...22...1...333\n999999999...22\n7...........22\n....................88888888\n\n666666...666666...666666......4444\n1........1........999999999...0000000000\n"

--- test: 13c (written all at once)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444\t\t333\t22\t1\t333\n999999999\t22\n7\t\t22\n\t\t\t\t88888888\n\n666666\t666666\t666666\t\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"

--- test: 13c (written byte-by-byte)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444\t\t333\t22\t1\t333\n999999999\t22\n7\t\t22\n\t\t\t\t88888888\n\n666666\t666666\t666666\t\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"

--- test: 13c (written in fibonacci slices)
--- src:
"4444\t333\t22\t1\t333\n999999999\t22\n7\t22\n\t\t\t88888888\n\n666666\t666666\t666666\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"
--- found:
"\n\n\n\n\n\n\n"
--- expected:
"4444\t\t333\t22\t1\t333\n999999999\t22\n7\t\t22\n\t\t\t\t88888888\n\n666666\t666666\t666666\t\t4444\n1\t1\t<font color=red attr=日本語>999999999</font>\t0000000000\n"

--- test: 14 (written all at once)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0          .3    2.4    -5.1\n  23.0  12345678.9    2.4  -989.4\n   5.1        12.0    2.4    -7.0\n    .0         0.0  332.0  8908.0\n    .0         -.3  456.4    22.1\n    .0         1.2   44.4   -13.3"

--- test: 14 (written byte-by-byte)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0          .3    2.4    -5.1\n  23.0  12345678.9    2.4  -989.4\n   5.1        12.0    2.4    -7.0\n    .0         0.0  332.0  8908.0\n    .0         -.3  456.4    22.1\n    .0         1.2   44.4   -13.3"

--- test: 14 (written in fibonacci slices)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0          .3    2.4    -5.1\n  23.0  12345678.9    2.4  -989.4\n   5.1        12.0    2.4    -7.0\n    .0         0.0  332.0  8908.0\n    .0         -.3  456.4    22.1\n    .0         1.2   44.4   -13.3"

--- test: 14 debug (written all at once)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0|          .3|    2.4|    -5.1|\n  23.0|  12345678.9|    2.4|  -989.4|\n   5.1|        12.0|    2.4|    -7.0|\n    .0|         0.0|  332.0|  8908.0|\n    .0|         -.3|  456.4|    22.1|\n    .0|         1.2|   44.4|   -13.3|"

--- test: 14 debug (written byte-by-byte)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0|          .3|    2.4|    -5.1|\n  23.0|  12345678.9|    2.4|  -989.4|\n   5.1|        12.0|    2.4|    -7.0|\n    .0|         0.0|  332.0|  8908.0|\n    .0|         -.3|  456.4|    22.1|\n    .0|         1.2|   44.4|   -13.3|"

--- test: 14 debug (written in fibonacci slices)
--- src:
".0\t.3\t2.4\t-5.1\t\n23.0\t12345678.9\t2.4\t-989.4\t\n5.1\t12.0\t2.4\t-7.0\t\n.0\t0.0\t332.0\t8908.0\t\n.0\t-.3\t456.4\t22.1\t\n.0\t1.2\t44.4\t-13.3\t\t"
--- found:
"\n\n\n\n\n"
--- expected:
"    .0|          .3|    2.4|    -5.1|\n  23.0|  12345678.9|    2.4|  -989.4|\n   5.1|        12.0|    2.4|    -7.0|\n    .0|         0.0|  332.0|  8908.0|\n    .0|         -.3|  456.4|    22.1|\n    .0|         1.2|   44.4|   -13.3|"

--- test: 15a (written all at once)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15a (written byte-by-byte)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15a (written in fibonacci slices)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15b (written all at once)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15b (written byte-by-byte)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15b (written in fibonacci slices)
--- src:
"a\t\tb"
--- found:
""
--- expected:
"a.......b"

--- test: 15c (written all at once)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"a...b"

--- test: 15c (written byte-by-byte)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"a...b"

--- test: 15c (written in fibonacci slices)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"a...b"

--- test: 15d (written all at once)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"...ab"

--- test: 15d (written byte-by-byte)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"...ab"

--- test: 15d (written in fibonacci slices)
--- src:
"a\v\vb"
--- found:
""
--- expected:
"...ab"

--- test: 16a (written all at once)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16a (written byte-by-byte)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16a (written in fibonacci slices)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16b (written all at once)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\td\na\tb\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16b (written byte-by-byte)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\td\na\tb\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16b (written in fibonacci slices)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\td\na\tb\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16b debug (written all at once)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t||d\na\t|b\t||d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"

--- test: 16b debug (written byte-by-byte)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t||d\na\t|b\t||d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"

--- test: 16b debug (written in fibonacci slices)
--- src:
"a\vb\v\vd\na\vb\v\vd\ve\na\na\vb\vc\vd\na\vb\vc\vd\ve\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t||d\na\t|b\t||d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"

--- test: 16c (written all at once)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16c (written byte-by-byte)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16c (written in fibonacci slices)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"

--- test: 16c debug (written all at once)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t|\t|d\na\t|b\t|\t|d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"

--- test: 16c debug (written byte-by-byte)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t|\t|d\na\t|b\t|\t|d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"

--- test: 16c debug (written in fibonacci slices)
--- src:
"a\tb\t\td\na\tb\t\td\te\na\na\tb\tc\td\na\tb\tc\td\te\n"
--- found:
"\n\n\n\n\n"
--- expected:
"a\t|b\t|\t|d\na\t|b\t|\t|d\t|e\na\na\t|b\t|c\t|d\na\t|b\t|c\t|d\t|e\n"


-- FAIL: Test

=== RUN  TestPanicDuringFlush

-- PASS: TestPanicDuringFlush

=== RUN  TestPanicDuringWrite

-- PASS: TestPanicDuringWrite

